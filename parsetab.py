
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOX_PLOT COLON COMMA COMMENT COMPARE CSV_READ CTE_F CTE_I CTE_S DATAFRAME DIVIDE ELSE EQUAL FLOAT FOR FUNC GREATER GREATER_EQUAL HISTOGRAM ID IF INT LESS LESS_EQUAL LINEAR_REG LPAR L_C_BRACKET L_S_BRACKET MAIN MEAN MEDIAN MINUS MODE NOT_EQUAL OR PLUS PROGRAM READ RETURN RPAR R_C_BRACKET R_S_BRACKET SEMICOLON STRING TIMES TO VAR VOID WHILE WRITE\n    program : PROGRAM program_point ID COLON modules main\n    \n    program_point : empty\n    \n    modules : modules_2 modules_point modules_3 count_global_vars\n    \n    modules_point : empty\n    \n    count_global_vars : empty\n    \n    modules_2 : vars\n                | empty\n    \n    modules_3 : function\n                    | empty\n    \n    main : MAIN main_point LPAR RPAR L_C_BRACKET body R_C_BRACKET SEMICOLON main_final\n    \n    main_point : empty\n    \n    main_final : empty\n    \n    body : body_2 func_agrega_v estatuto body_3\n    \n    body_2 : vars\n                | empty\n    \n    body_3 : estatuto body_3\n                | empty\n    \n    tipo_simple : INT \n                | FLOAT\n    \n    tipo_comp : DATAFRAME\n    \n    vars : VAR vars_2 SEMICOLON vars_8\n    \n    vars_2 : tipo_comp vars_3\n                        | tipo_simple vars_4\n    \n    vars_3 : ID vars_5\n    \n    vars_4 : vars_3 \n                | ID vars_6\n    \n    vars_5 : COMMA vars_3\n            | empty\n    \n    vars_6 : punto_id_especial L_S_BRACKET CTE_I R_S_BRACKET vars_7\n                | empty\n    \n    punto_id_especial : empty\n    \n    vars_7 : L_S_BRACKET CTE_I R_S_BRACKET var_mat\n                | var_array\n    \n    var_array : empty\n    \n    var_mat : empty\n    \n    vars_8 : vars \n                | empty\n    \n    param : tipo_simple ID punto_param param_2 \n                | empty\n    \n    param_2 : COMMA param\n                | empty\n    \n    punto_param : empty\n    \n    punto_param_2 : empty\n    \n    variable : ID variable_2 variable_point\n    \n    variable_point : empty\n    \n    variable_2 : L_S_BRACKET add_floor exp R_S_BRACKET remove_floor variable_3 \n                    | empty\n    \n    variable_3 : L_S_BRACKET add_floor exp R_S_BRACKET remove_floor\n                    | empty\n    \n    estatuto : asigna\n                | llamada\n                | llamada_void\n                | read\n                | write\n                | if_1\n                | for_l\n                | while_l\n                | return\n                | funciones_especiales\n    \n    asigna : variable EQUAL add_operator exp asigna_point SEMICOLON\n    \n    asigna_point : empty\n    \n    llamada : ID verify_func not_void LPAR add_floor llamada_2 llamada_3 RPAR remove_floor gosub add_temp\n    \n    llamada_2 : exp verify_parameter\n                | empty\n    \n    llamada_3 : COMMA exp verify_parameter llamada_3\n                | empty\n    \n    llamada_void : ID verify_func LPAR add_floor llamada_void_2 llamada_void_3 RPAR remove_floor SEMICOLON gosub \n    \n    llamada_void_2 : exp verify_parameter\n                | empty\n    \n    llamada_void_3 : COMMA exp verify_parameter llamada_void_3\n                | empty\n    \n    not_void : empty\n    \n    verify_func : empty\n    \n    verify_parameter : empty\n    \n    gosub : empty\n    \n    add_temp : empty\n    \n    read : READ LPAR variable read_point RPAR SEMICOLON\n    \n    read_point : empty\n    \n    write : WRITE LPAR write_2 write_3 RPAR SEMICOLON\n    \n    write_2 : exp write_point\n                | CTE_S add_constant_s write_point\n    \n    write_3 : COMMA write_2 write_3 \n                | empty\n    \n    write_point : empty\n    \n    if_1 : IF LPAR exp if_point RPAR L_C_BRACKET estatuto if_2 R_C_BRACKET if_3 SEMICOLON if_point_2\n    \n    if_2 :  estatuto if_2 \n            | empty\n    \n    if_3 : ELSE if_point_3 L_C_BRACKET estatuto if_2 R_C_BRACKET\n            | empty\n    \n    if_point : empty\n    \n    if_point_2 : empty\n    \n    if_point_3 : empty\n    \n    for_l : FOR LPAR ID for_point_1 EQUAL exp for_point_2 TO exp for_point_3 RPAR L_C_BRACKET estatuto for_l_2 R_C_BRACKET SEMICOLON for_point_4\n    \n    for_l_2 : estatuto for_l_2\n                | empty\n    \n    for_point_1 : empty\n    \n    for_point_2 : empty\n    \n    for_point_3 : empty\n    \n    for_point_4 : empty\n    \n    while_l : WHILE while_point LPAR exp RPAR while_point_2 L_C_BRACKET estatuto while_l_2 R_C_BRACKET SEMICOLON while_point_3\n    \n    while_l_2 : estatuto while_l_2\n                    | empty\n    \n    while_point : empty\n    \n    while_point_2 : empty\n    \n    while_point_3 : empty\n    \n    return : RETURN LPAR exp check_valid_func RPAR SEMICOLON\n    \n    check_valid_func : empty\n    \n    exp : t_exp add_operator_4 exp_2 \n    \n    exp_2 : OR add_operator exp \n            | empty\n    \n    t_exp : g_exp add_operator_4 t_exp_2 \n    \n    t_exp_2 : AND add_operator t_exp \n                | empty\n    \n    g_exp : m_exp g_exp_2 add_operator_3\n    \n    g_exp_2 : LESS_EQUAL add_operator m_exp \n                | LESS add_operator m_exp \n                | GREATER_EQUAL add_operator m_exp \n                | GREATER add_operator m_exp \n                | COMPARE add_operator m_exp \n                | NOT_EQUAL add_operator m_exp \n                | empty\n    \n    m_exp : t add_operator_2 m_exp_2\n    \n    m_exp_2 : PLUS add_operator m_exp \n                | MINUS add_operator m_exp\n                | empty\n    \n    t : f add_operator_1 t_2\n    \n    t_2 : TIMES add_operator t \n            | DIVIDE add_operator t\n            | empty\n    \n    f : LPAR add_floor exp RPAR remove_floor\n            | variable\n            | llamada\n            | f_2\n    \n    f_2 : CTE_I add_constant_i\n            | CTE_F add_constant_f\n    \n    add_floor : empty\n    \n    remove_floor : empty\n    \n    add_operator : empty \n    \n    add_operator_1 : empty \n    \n    add_operator_2 : empty \n    \n    add_operator_3 : empty \n    \n    add_operator_4 : empty \n    \n    add_constant_i : empty\n    \n    add_constant_s : empty\n    \n    add_constant_f : empty\n    \n    function : FUNC function_2 SEMICOLON function_4\n    \n    function_2 : function_3 ID function_punto1 LPAR param punto_param_2 RPAR L_C_BRACKET body R_C_BRACKET final_func_point\n    \n    function_3 : tipo_simple\n                    | VOID\n    \n    function_4 : function\n                    | empty\n    \n    function_punto1 : empty\n    \n    func_agrega_v : empty\n    \n    final_func_point : empty\n    \n    funciones_especiales : read_csv\n                            | mean_func\n                            | mode_func\n                            | median_func\n                            | linear_reg_func\n                            | box_plt\n                            | histogram_plt\n    \n    check_df : empty\n    \n    read_csv : variable EQUAL check_df CSV_READ LPAR CTE_S check_name add_constant_s add_quad_readCSV RPAR SEMICOLON\n    \n    add_quad_readCSV : empty\n    \n    mean_func : variable EQUAL check_df MEAN LPAR variable check_df add_quad_mean RPAR SEMICOLON\n    \n    add_quad_mean : empty\n    \n    mode_func : variable EQUAL check_df MODE LPAR variable check_df add_quad_mode RPAR SEMICOLON\n    \n    add_quad_mode : empty\n    \n    median_func : variable EQUAL check_df MEDIAN LPAR variable check_df add_quad_median RPAR SEMICOLON\n    \n    add_quad_median : empty\n    \n    linear_reg_func : LINEAR_REG LPAR variable check_df add_quad_linearR RPAR SEMICOLON\n    \n    add_quad_linearR : empty\n    \n    box_plt : BOX_PLOT LPAR variable check_df add_quad_box RPAR SEMICOLON\n    \n    add_quad_box : empty\n    \n    histogram_plt : HISTOGRAM LPAR variable check_df add_quad_hist RPAR SEMICOLON\n    \n    add_quad_hist : empty\n    \n    check_name : empty\n    \n    empty : \n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,78,112,113,],[0,-1,-178,-10,-12,]),'ID':([2,3,4,17,18,19,20,21,28,38,39,40,41,42,43,45,55,63,64,65,69,70,72,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,114,117,121,122,123,124,125,128,129,130,131,137,139,141,145,146,149,166,171,182,183,188,190,200,201,202,203,204,205,233,234,235,236,247,250,254,255,256,257,258,259,260,262,263,266,267,270,280,289,294,295,297,299,300,307,308,309,310,311,315,327,332,342,345,346,347,348,356,360,361,364,365,371,373,379,383,384,385,386,387,389,398,399,400,402,406,407,408,409,410,411,412,413,414,416,422,423,424,],[-178,5,-2,30,33,-20,-18,-19,-178,52,-148,-149,-21,-36,-37,30,-178,-178,-14,-15,91,-153,110,91,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-155,-156,-157,-158,-159,-160,-161,91,-178,-178,148,161,161,165,161,148,148,148,161,-138,-178,161,-136,-178,161,-178,-178,161,161,161,-178,-178,-178,-178,-178,-178,148,148,148,161,-178,-178,161,-138,161,161,161,161,161,-178,-178,-178,-178,161,-60,161,-137,-77,-79,161,161,161,161,161,161,91,-106,161,-178,91,91,-171,-173,-175,-178,161,91,161,91,-178,-178,91,-165,-167,-169,-178,-75,-67,-163,-62,-76,-178,-178,-85,-91,91,91,-100,-105,91,91,91,-178,-93,-99,]),'COLON':([5,],[6,]),'VAR':([6,28,55,171,],[11,11,11,11,]),'FUNC':([6,8,9,10,14,15,28,41,42,43,51,],[-178,-178,-6,-7,27,-4,-178,-21,-36,-37,27,]),'MAIN':([6,7,8,9,10,14,15,24,25,26,28,35,36,41,42,43,51,56,57,58,],[-178,13,-178,-6,-7,-178,-4,-178,-8,-9,-178,-3,-5,-21,-36,-37,-178,-146,-150,-151,]),'DATAFRAME':([11,],[19,]),'INT':([11,27,66,173,],[20,20,20,20,]),'FLOAT':([11,27,66,173,],[21,21,21,21,]),'LPAR':([13,22,23,52,59,60,91,92,93,94,95,96,97,105,106,107,117,118,120,121,123,124,126,127,128,137,139,140,141,142,145,146,149,161,166,178,179,180,181,182,183,188,190,200,201,202,203,204,205,211,212,236,247,250,254,255,256,257,258,259,260,262,263,266,267,270,289,299,300,307,308,309,310,327,332,360,364,],[-178,34,-11,-178,66,-152,-178,122,123,124,125,-178,128,129,130,131,-178,141,-73,-178,149,149,166,-103,149,149,-138,182,-178,-72,149,-136,-178,-178,149,232,233,234,235,-178,149,149,149,-178,-178,-178,-178,-178,-178,-178,-73,149,-178,-178,149,-138,149,149,149,149,149,-178,-178,-178,-178,149,149,149,149,149,149,149,149,149,-178,149,149,]),'SEMICOLON':([16,29,30,31,32,33,37,44,46,47,49,53,67,68,75,76,77,119,135,143,144,153,154,155,156,157,158,159,160,161,162,163,175,176,177,196,197,198,199,206,207,208,209,210,212,213,214,215,216,230,231,240,241,243,246,248,249,251,252,253,261,264,265,268,272,279,293,294,296,301,302,303,304,305,306,316,317,318,319,320,330,333,334,335,336,337,338,339,340,341,356,358,368,369,370,371,377,382,386,387,390,391,393,397,399,400,401,419,421,],[28,-22,-178,-23,-25,-178,51,-24,-28,-26,-28,-27,-178,78,-29,-33,-34,-178,-178,-44,-45,-178,-178,-178,-178,-178,-131,-132,-133,-178,-178,-178,-32,-35,-178,-178,-142,-178,-178,-121,-178,-140,-178,-139,-47,-134,-143,-135,-145,280,-61,-178,295,297,-108,-110,-111,-113,-114,-141,-122,-125,-126,-129,315,-178,-178,-137,-178,-115,-116,-117,-118,-119,-120,346,347,348,-147,-154,-178,-46,-49,-130,-109,-112,-123,-124,-127,-128,-178,373,383,384,385,-178,-178,398,-178,-75,-178,402,-89,406,-62,-76,-48,-88,422,]),'VOID':([27,],[40,]),'READ':([28,41,42,43,55,63,64,65,69,70,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,114,171,280,294,295,297,311,315,342,345,346,347,348,356,361,365,371,373,379,383,384,385,386,387,389,398,399,400,402,406,407,408,409,410,411,412,413,414,416,422,423,424,],[-178,-21,-36,-37,-178,-178,-14,-15,92,-153,92,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-155,-156,-157,-158,-159,-160,-161,92,-178,-60,-137,-77,-79,92,-106,92,92,-171,-173,-175,-178,92,92,-178,-178,92,-165,-167,-169,-178,-75,-67,-163,-62,-76,-178,-178,-85,-91,92,92,-100,-105,92,92,92,-178,-93,-99,]),'WRITE':([28,41,42,43,55,63,64,65,69,70,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,114,171,280,294,295,297,311,315,342,345,346,347,348,356,361,365,371,373,379,383,384,385,386,387,389,398,399,400,402,406,407,408,409,410,411,412,413,414,416,422,423,424,],[-178,-21,-36,-37,-178,-178,-14,-15,93,-153,93,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-155,-156,-157,-158,-159,-160,-161,93,-178,-60,-137,-77,-79,93,-106,93,93,-171,-173,-175,-178,93,93,-178,-178,93,-165,-167,-169,-178,-75,-67,-163,-62,-76,-178,-178,-85,-91,93,93,-100,-105,93,93,93,-178,-93,-99,]),'IF':([28,41,42,43,55,63,64,65,69,70,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,114,171,280,294,295,297,311,315,342,345,346,347,348,356,361,365,371,373,379,383,384,385,386,387,389,398,399,400,402,406,407,408,409,410,411,412,413,414,416,422,423,424,],[-178,-21,-36,-37,-178,-178,-14,-15,94,-153,94,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-155,-156,-157,-158,-159,-160,-161,94,-178,-60,-137,-77,-79,94,-106,94,94,-171,-173,-175,-178,94,94,-178,-178,94,-165,-167,-169,-178,-75,-67,-163,-62,-76,-178,-178,-85,-91,94,94,-100,-105,94,94,94,-178,-93,-99,]),'FOR':([28,41,42,43,55,63,64,65,69,70,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,114,171,280,294,295,297,311,315,342,345,346,347,348,356,361,365,371,373,379,383,384,385,386,387,389,398,399,400,402,406,407,408,409,410,411,412,413,414,416,422,423,424,],[-178,-21,-36,-37,-178,-178,-14,-15,95,-153,95,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-155,-156,-157,-158,-159,-160,-161,95,-178,-60,-137,-77,-79,95,-106,95,95,-171,-173,-175,-178,95,95,-178,-178,95,-165,-167,-169,-178,-75,-67,-163,-62,-76,-178,-178,-85,-91,95,95,-100,-105,95,95,95,-178,-93,-99,]),'WHILE':([28,41,42,43,55,63,64,65,69,70,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,114,171,280,294,295,297,311,315,342,345,346,347,348,356,361,365,371,373,379,383,384,385,386,387,389,398,399,400,402,406,407,408,409,410,411,412,413,414,416,422,423,424,],[-178,-21,-36,-37,-178,-178,-14,-15,96,-153,96,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-155,-156,-157,-158,-159,-160,-161,96,-178,-60,-137,-77,-79,96,-106,96,96,-171,-173,-175,-178,96,96,-178,-178,96,-165,-167,-169,-178,-75,-67,-163,-62,-76,-178,-178,-85,-91,96,96,-100,-105,96,96,96,-178,-93,-99,]),'RETURN':([28,41,42,43,55,63,64,65,69,70,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,114,171,280,294,295,297,311,315,342,345,346,347,348,356,361,365,371,373,379,383,384,385,386,387,389,398,399,400,402,406,407,408,409,410,411,412,413,414,416,422,423,424,],[-178,-21,-36,-37,-178,-178,-14,-15,97,-153,97,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-155,-156,-157,-158,-159,-160,-161,97,-178,-60,-137,-77,-79,97,-106,97,97,-171,-173,-175,-178,97,97,-178,-178,97,-165,-167,-169,-178,-75,-67,-163,-62,-76,-178,-178,-85,-91,97,97,-100,-105,97,97,97,-178,-93,-99,]),'LINEAR_REG':([28,41,42,43,55,63,64,65,69,70,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,114,171,280,294,295,297,311,315,342,345,346,347,348,356,361,365,371,373,379,383,384,385,386,387,389,398,399,400,402,406,407,408,409,410,411,412,413,414,416,422,423,424,],[-178,-21,-36,-37,-178,-178,-14,-15,105,-153,105,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-155,-156,-157,-158,-159,-160,-161,105,-178,-60,-137,-77,-79,105,-106,105,105,-171,-173,-175,-178,105,105,-178,-178,105,-165,-167,-169,-178,-75,-67,-163,-62,-76,-178,-178,-85,-91,105,105,-100,-105,105,105,105,-178,-93,-99,]),'BOX_PLOT':([28,41,42,43,55,63,64,65,69,70,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,114,171,280,294,295,297,311,315,342,345,346,347,348,356,361,365,371,373,379,383,384,385,386,387,389,398,399,400,402,406,407,408,409,410,411,412,413,414,416,422,423,424,],[-178,-21,-36,-37,-178,-178,-14,-15,106,-153,106,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-155,-156,-157,-158,-159,-160,-161,106,-178,-60,-137,-77,-79,106,-106,106,106,-171,-173,-175,-178,106,106,-178,-178,106,-165,-167,-169,-178,-75,-67,-163,-62,-76,-178,-178,-85,-91,106,106,-100,-105,106,106,106,-178,-93,-99,]),'HISTOGRAM':([28,41,42,43,55,63,64,65,69,70,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,114,171,280,294,295,297,311,315,342,345,346,347,348,356,361,365,371,373,379,383,384,385,386,387,389,398,399,400,402,406,407,408,409,410,411,412,413,414,416,422,423,424,],[-178,-21,-36,-37,-178,-178,-14,-15,107,-153,107,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-155,-156,-157,-158,-159,-160,-161,107,-178,-60,-137,-77,-79,107,-106,107,107,-171,-173,-175,-178,107,107,-178,-178,107,-165,-167,-169,-178,-75,-67,-163,-62,-76,-178,-178,-85,-91,107,107,-100,-105,107,107,107,-178,-93,-99,]),'COMMA':([30,33,110,119,133,134,141,143,144,146,150,151,152,153,154,155,156,157,158,159,160,161,162,163,182,183,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,215,216,236,237,238,239,240,244,245,246,248,249,251,252,253,261,264,265,268,285,286,287,291,292,293,294,296,301,302,303,304,305,306,329,331,333,334,335,336,337,338,339,340,341,356,357,359,371,372,386,387,390,399,400,401,],[45,45,-178,-178,173,-42,-178,-44,-45,-136,190,-178,-178,-178,-178,-178,-178,-178,-131,-132,-133,-178,-178,-178,-178,-178,-80,-84,-178,-144,-178,-142,-178,-178,-121,-178,-140,-178,-139,-47,-134,-143,-135,-145,-178,289,-178,-69,-178,190,-81,-108,-110,-111,-113,-114,-141,-122,-125,-126,-129,327,-178,-64,-68,-74,-178,-137,-178,-115,-116,-117,-118,-119,-120,-63,-178,-46,-49,-130,-109,-112,-123,-124,-127,-128,-178,-178,289,-178,327,-178,-75,-178,-62,-76,-48,]),'L_S_BRACKET':([33,48,49,67,91,148,161,240,293,294,],[-178,54,-31,74,121,121,121,-178,332,-137,]),'RPAR':([34,66,71,73,108,109,110,119,133,134,141,143,144,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,170,172,173,174,182,183,185,186,187,189,191,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,215,216,217,218,221,222,223,224,225,226,227,229,236,237,238,239,240,242,244,245,246,248,249,251,252,253,261,264,265,268,273,274,275,276,277,278,281,282,283,284,285,286,287,288,290,291,292,293,294,296,298,301,302,303,304,305,306,321,322,323,324,325,326,328,329,331,333,334,335,336,337,338,339,340,341,349,350,351,352,353,354,355,356,357,359,366,367,371,372,374,378,386,387,388,390,394,395,399,400,401,],[50,-178,-178,-39,132,-43,-178,-178,-178,-42,-178,-44,-45,-136,-178,-178,-178,-178,-178,-178,-178,-178,-178,-178,-131,-132,-133,-178,-178,-178,-178,-178,-178,-178,-178,-38,-178,-41,-178,-178,241,-78,-47,243,-83,-80,-84,-178,-144,-178,-142,-178,-178,-121,-178,-140,-178,-139,-47,-134,-143,-135,-145,269,-90,271,272,-107,-178,-162,-178,-178,-40,-178,-178,-178,-69,-178,296,-178,-81,-108,-110,-111,-113,-114,-141,-122,-125,-126,-129,316,-172,317,-174,318,-176,-178,-178,-178,-178,-178,-178,-64,330,-71,-68,-74,-178,-137,-178,-82,-115,-116,-117,-118,-119,-120,-178,-177,-178,-178,-178,356,-66,-63,-178,-46,-49,-130,-109,-112,-123,-124,-127,-128,-178,368,-166,369,-168,370,-170,-178,-178,-178,382,-164,-178,-178,-70,-178,-178,-75,-65,-178,405,-98,-62,-76,-48,]),'L_C_BRACKET':([50,132,269,271,313,314,392,403,404,405,],[55,171,311,-178,345,-104,-178,409,-92,410,]),'CTE_I':([54,74,117,121,123,124,128,137,139,141,145,146,149,166,182,183,188,190,200,201,202,203,204,205,236,247,250,254,255,256,257,258,259,260,262,263,266,267,270,289,299,300,307,308,309,310,327,332,360,364,],[61,111,-178,-178,162,162,162,162,-138,-178,162,-136,-178,162,-178,162,162,162,-178,-178,-178,-178,-178,-178,162,-178,-178,162,-138,162,162,162,162,162,-178,-178,-178,-178,162,162,162,162,162,162,162,162,162,-178,162,162,]),'R_S_BRACKET':([61,111,119,143,144,153,154,155,156,157,158,159,160,161,162,163,184,196,197,198,199,206,207,208,209,210,212,213,214,215,216,240,246,248,249,251,252,253,261,264,265,268,293,294,296,301,302,303,304,305,306,333,334,335,336,337,338,339,340,341,356,371,375,386,387,390,399,400,401,],[67,135,-178,-44,-45,-178,-178,-178,-178,-178,-131,-132,-133,-178,-178,-178,240,-178,-142,-178,-178,-121,-178,-140,-178,-139,-47,-134,-143,-135,-145,-178,-108,-110,-111,-113,-114,-141,-122,-125,-126,-129,-178,-137,-178,-115,-116,-117,-118,-119,-120,-46,-49,-130,-109,-112,-123,-124,-127,-128,-178,-178,390,-178,-75,-178,-62,-76,-48,]),'R_C_BRACKET':([62,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,114,115,116,136,228,280,294,295,297,315,342,346,347,348,356,361,362,363,365,371,373,376,379,380,381,383,384,385,386,387,389,396,398,399,400,402,406,407,408,411,412,413,414,415,416,417,418,420,422,423,424,],[68,-178,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-155,-156,-157,-158,-159,-160,-161,-178,-13,-17,-16,279,-60,-137,-77,-79,-106,-178,-171,-173,-175,-178,-178,377,-87,-178,-178,-178,-86,-178,397,-102,-165,-167,-169,-178,-75,-67,-101,-163,-62,-76,-178,-178,-85,-91,-100,-105,-178,-178,419,-178,421,-95,-94,-178,-93,-99,]),'EQUAL':([90,91,119,120,143,144,165,219,220,240,293,294,333,334,390,401,],[117,-178,-178,-47,-44,-45,-178,270,-96,-178,-178,-137,-46,-49,-178,-48,]),'CTE_F':([117,121,123,124,128,137,139,141,145,146,149,166,182,183,188,190,200,201,202,203,204,205,236,247,250,254,255,256,257,258,259,260,262,263,266,267,270,289,299,300,307,308,309,310,327,332,360,364,],[-178,-178,163,163,163,163,-138,-178,163,-136,-178,163,-178,163,163,163,-178,-178,-178,-178,-178,-178,163,-178,-178,163,-138,163,163,163,163,163,-178,-178,-178,-178,163,163,163,163,163,163,163,163,163,-178,163,163,]),'CSV_READ':([117,138,139,],[-178,178,-162,]),'MEAN':([117,138,139,],[-178,179,-162,]),'MODE':([117,138,139,],[-178,180,-162,]),'MEDIAN':([117,138,139,],[-178,181,-162,]),'TIMES':([119,143,144,157,158,159,160,161,162,163,209,210,212,213,214,215,216,240,293,294,296,333,334,335,356,371,386,387,390,399,400,401,],[-178,-44,-45,-178,-131,-132,-133,-178,-178,-178,266,-139,-47,-134,-143,-135,-145,-178,-178,-137,-178,-46,-49,-130,-178,-178,-178,-75,-178,-62,-76,-48,]),'DIVIDE':([119,143,144,157,158,159,160,161,162,163,209,210,212,213,214,215,216,240,293,294,296,333,334,335,356,371,386,387,390,399,400,401,],[-178,-44,-45,-178,-131,-132,-133,-178,-178,-178,267,-139,-47,-134,-143,-135,-145,-178,-178,-137,-178,-46,-49,-130,-178,-178,-178,-75,-178,-62,-76,-48,]),'PLUS':([119,143,144,156,157,158,159,160,161,162,163,207,208,209,210,212,213,214,215,216,240,265,268,293,294,296,333,334,335,340,341,356,371,386,387,390,399,400,401,],[-178,-44,-45,-178,-178,-131,-132,-133,-178,-178,-178,262,-140,-178,-139,-47,-134,-143,-135,-145,-178,-126,-129,-178,-137,-178,-46,-49,-130,-127,-128,-178,-178,-178,-75,-178,-62,-76,-48,]),'MINUS':([119,143,144,156,157,158,159,160,161,162,163,207,208,209,210,212,213,214,215,216,240,265,268,293,294,296,333,334,335,340,341,356,371,386,387,390,399,400,401,],[-178,-44,-45,-178,-178,-131,-132,-133,-178,-178,-178,263,-140,-178,-139,-47,-134,-143,-135,-145,-178,-126,-129,-178,-137,-178,-46,-49,-130,-127,-128,-178,-178,-178,-75,-178,-62,-76,-48,]),'LESS_EQUAL':([119,143,144,155,156,157,158,159,160,161,162,163,207,208,209,210,212,213,214,215,216,240,261,264,265,268,293,294,296,333,334,335,338,339,340,341,356,371,386,387,390,399,400,401,],[-178,-44,-45,200,-178,-178,-131,-132,-133,-178,-178,-178,-178,-140,-178,-139,-47,-134,-143,-135,-145,-178,-122,-125,-126,-129,-178,-137,-178,-46,-49,-130,-123,-124,-127,-128,-178,-178,-178,-75,-178,-62,-76,-48,]),'LESS':([119,143,144,155,156,157,158,159,160,161,162,163,207,208,209,210,212,213,214,215,216,240,261,264,265,268,293,294,296,333,334,335,338,339,340,341,356,371,386,387,390,399,400,401,],[-178,-44,-45,201,-178,-178,-131,-132,-133,-178,-178,-178,-178,-140,-178,-139,-47,-134,-143,-135,-145,-178,-122,-125,-126,-129,-178,-137,-178,-46,-49,-130,-123,-124,-127,-128,-178,-178,-178,-75,-178,-62,-76,-48,]),'GREATER_EQUAL':([119,143,144,155,156,157,158,159,160,161,162,163,207,208,209,210,212,213,214,215,216,240,261,264,265,268,293,294,296,333,334,335,338,339,340,341,356,371,386,387,390,399,400,401,],[-178,-44,-45,202,-178,-178,-131,-132,-133,-178,-178,-178,-178,-140,-178,-139,-47,-134,-143,-135,-145,-178,-122,-125,-126,-129,-178,-137,-178,-46,-49,-130,-123,-124,-127,-128,-178,-178,-178,-75,-178,-62,-76,-48,]),'GREATER':([119,143,144,155,156,157,158,159,160,161,162,163,207,208,209,210,212,213,214,215,216,240,261,264,265,268,293,294,296,333,334,335,338,339,340,341,356,371,386,387,390,399,400,401,],[-178,-44,-45,203,-178,-178,-131,-132,-133,-178,-178,-178,-178,-140,-178,-139,-47,-134,-143,-135,-145,-178,-122,-125,-126,-129,-178,-137,-178,-46,-49,-130,-123,-124,-127,-128,-178,-178,-178,-75,-178,-62,-76,-48,]),'COMPARE':([119,143,144,155,156,157,158,159,160,161,162,163,207,208,209,210,212,213,214,215,216,240,261,264,265,268,293,294,296,333,334,335,338,339,340,341,356,371,386,387,390,399,400,401,],[-178,-44,-45,204,-178,-178,-131,-132,-133,-178,-178,-178,-178,-140,-178,-139,-47,-134,-143,-135,-145,-178,-122,-125,-126,-129,-178,-137,-178,-46,-49,-130,-123,-124,-127,-128,-178,-178,-178,-75,-178,-62,-76,-48,]),'NOT_EQUAL':([119,143,144,155,156,157,158,159,160,161,162,163,207,208,209,210,212,213,214,215,216,240,261,264,265,268,293,294,296,333,334,335,338,339,340,341,356,371,386,387,390,399,400,401,],[-178,-44,-45,205,-178,-178,-131,-132,-133,-178,-178,-178,-178,-140,-178,-139,-47,-134,-143,-135,-145,-178,-122,-125,-126,-129,-178,-137,-178,-46,-49,-130,-123,-124,-127,-128,-178,-178,-178,-75,-178,-62,-76,-48,]),'AND':([119,143,144,154,155,156,157,158,159,160,161,162,163,197,198,199,206,207,208,209,210,212,213,214,215,216,240,252,253,261,264,265,268,293,294,296,301,302,303,304,305,306,333,334,335,338,339,340,341,356,371,386,387,390,399,400,401,],[-178,-44,-45,-178,-178,-178,-178,-131,-132,-133,-178,-178,-178,-142,250,-178,-121,-178,-140,-178,-139,-47,-134,-143,-135,-145,-178,-114,-141,-122,-125,-126,-129,-178,-137,-178,-115,-116,-117,-118,-119,-120,-46,-49,-130,-123,-124,-127,-128,-178,-178,-178,-75,-178,-62,-76,-48,]),'OR':([119,143,144,153,154,155,156,157,158,159,160,161,162,163,196,197,198,199,206,207,208,209,210,212,213,214,215,216,240,249,251,252,253,261,264,265,268,293,294,296,301,302,303,304,305,306,333,334,335,337,338,339,340,341,356,371,386,387,390,399,400,401,],[-178,-44,-45,-178,-178,-178,-178,-178,-131,-132,-133,-178,-178,-178,247,-142,-178,-178,-121,-178,-140,-178,-139,-47,-134,-143,-135,-145,-178,-111,-113,-114,-141,-122,-125,-126,-129,-178,-137,-178,-115,-116,-117,-118,-119,-120,-46,-49,-130,-112,-123,-124,-127,-128,-178,-178,-178,-75,-178,-62,-76,-48,]),'TO':([119,143,144,153,154,155,156,157,158,159,160,161,162,163,196,197,198,199,206,207,208,209,210,212,213,214,215,216,240,246,248,249,251,252,253,261,264,265,268,293,294,296,301,302,303,304,305,306,312,333,334,335,336,337,338,339,340,341,343,344,356,371,386,387,390,399,400,401,],[-178,-44,-45,-178,-178,-178,-178,-178,-131,-132,-133,-178,-178,-178,-178,-142,-178,-178,-121,-178,-140,-178,-139,-47,-134,-143,-135,-145,-178,-108,-110,-111,-113,-114,-141,-122,-125,-126,-129,-178,-137,-178,-115,-116,-117,-118,-119,-120,-178,-46,-49,-130,-109,-112,-123,-124,-127,-128,364,-97,-178,-178,-178,-75,-178,-62,-76,-48,]),'CTE_S':([123,190,232,],[152,152,281,]),'ELSE':([377,],[392,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_point':([2,],[3,]),'empty':([2,6,8,13,14,24,28,30,33,51,52,55,63,66,67,71,78,79,91,96,110,114,117,118,119,121,133,135,141,147,148,149,150,151,152,153,154,155,156,157,161,162,163,164,165,167,168,169,170,171,173,177,182,183,194,196,198,199,200,201,202,203,204,205,207,209,211,224,226,227,236,237,238,240,244,247,250,262,263,266,267,271,279,281,282,283,284,285,286,293,296,312,321,323,324,325,330,331,332,342,349,356,357,359,361,365,371,372,373,377,378,379,386,390,392,402,406,413,414,416,422,],[4,10,15,23,26,36,43,46,49,58,60,65,70,73,77,109,113,116,120,127,134,116,139,142,144,146,174,176,146,186,187,146,191,193,195,197,197,206,208,210,212,214,216,218,220,223,225,225,225,65,73,231,146,239,193,248,251,253,255,255,255,255,255,255,264,268,142,274,276,278,287,290,292,294,191,255,255,255,255,255,255,314,320,322,225,225,225,328,292,334,294,344,195,351,353,355,294,292,146,363,367,294,292,290,363,381,387,328,387,393,395,381,400,294,404,408,412,363,418,418,424,]),'modules':([6,],[7,]),'modules_2':([6,],[8,]),'vars':([6,28,55,171,],[9,42,64,64,]),'main':([7,],[12,]),'modules_point':([8,],[14,]),'vars_2':([11,],[16,]),'tipo_comp':([11,],[17,]),'tipo_simple':([11,27,66,173,],[18,39,72,72,]),'main_point':([13,],[22,]),'modules_3':([14,],[24,]),'function':([14,51,],[25,57,]),'vars_3':([17,18,45,],[29,32,53,]),'vars_4':([18,],[31,]),'count_global_vars':([24,],[35,]),'function_2':([27,],[37,]),'function_3':([27,],[38,]),'vars_8':([28,],[41,]),'vars_5':([30,33,],[44,44,]),'vars_6':([33,],[47,]),'punto_id_especial':([33,],[48,]),'function_4':([51,],[56,]),'function_punto1':([52,],[59,]),'body':([55,171,],[62,228,]),'body_2':([55,171,],[63,63,]),'func_agrega_v':([63,],[69,]),'param':([66,173,],[71,229,]),'vars_7':([67,],[75,]),'var_array':([67,],[76,]),'estatuto':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[79,114,114,342,361,365,361,379,379,413,414,361,416,416,]),'asigna':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'llamada':([69,79,114,123,124,128,137,145,166,183,188,190,236,254,256,257,258,259,260,270,289,299,300,307,308,309,310,311,327,342,345,360,361,364,365,379,409,410,413,414,416,],[81,81,81,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,81,159,81,81,159,81,159,81,81,81,81,81,81,81,]),'llamada_void':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'read':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'write':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'if_1':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'for_l':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'while_l':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'return':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'funciones_especiales':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'variable':([69,79,114,122,123,124,128,129,130,131,137,145,166,183,188,190,233,234,235,236,254,256,257,258,259,260,270,289,299,300,307,308,309,310,311,327,342,345,360,361,364,365,379,409,410,413,414,416,],[90,90,90,147,158,158,158,168,169,170,158,158,158,158,158,158,282,283,284,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,90,158,90,90,158,90,158,90,90,90,90,90,90,90,]),'read_csv':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'mean_func':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'mode_func':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'median_func':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'linear_reg_func':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'box_plt':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'histogram_plt':([69,79,114,311,342,345,361,365,379,409,410,413,414,416,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'punto_param_2':([71,],[108,]),'main_final':([78,],[112,]),'body_3':([79,114,],[115,136,]),'verify_func':([91,161,],[118,211,]),'variable_2':([91,148,161,],[119,119,119,]),'while_point':([96,],[126,]),'punto_param':([110,],[133,]),'add_operator':([117,200,201,202,203,204,205,247,250,262,263,266,267,],[137,254,256,257,258,259,260,299,300,307,308,309,310,]),'check_df':([117,168,169,170,282,283,284,],[138,224,226,227,323,324,325,]),'not_void':([118,211,],[140,140,]),'variable_point':([119,],[143,]),'add_floor':([121,141,149,182,332,],[145,183,188,236,360,]),'write_2':([123,190,],[150,244,]),'exp':([123,124,128,137,145,166,183,188,190,236,270,289,299,327,360,364,],[151,164,167,177,184,221,238,242,151,286,312,331,336,357,375,378,]),'t_exp':([123,124,128,137,145,166,183,188,190,236,270,289,299,300,327,360,364,],[153,153,153,153,153,153,153,153,153,153,153,153,153,337,153,153,153,]),'g_exp':([123,124,128,137,145,166,183,188,190,236,270,289,299,300,327,360,364,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'m_exp':([123,124,128,137,145,166,183,188,190,236,254,256,257,258,259,260,270,289,299,300,307,308,327,360,364,],[155,155,155,155,155,155,155,155,155,155,301,302,303,304,305,306,155,155,155,155,338,339,155,155,155,]),'t':([123,124,128,137,145,166,183,188,190,236,254,256,257,258,259,260,270,289,299,300,307,308,309,310,327,360,364,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,340,341,156,156,156,]),'f':([123,124,128,137,145,166,183,188,190,236,254,256,257,258,259,260,270,289,299,300,307,308,309,310,327,360,364,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'f_2':([123,124,128,137,145,166,183,188,190,236,254,256,257,258,259,260,270,289,299,300,307,308,309,310,327,360,364,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'param_2':([133,],[172,]),'var_mat':([135,],[175,]),'read_point':([147,],[185,]),'write_3':([150,244,],[189,298,]),'write_point':([151,194,],[192,245,]),'add_constant_s':([152,321,],[194,349,]),'add_operator_4':([153,154,],[196,198,]),'g_exp_2':([155,],[199,]),'add_operator_2':([156,],[207,]),'add_operator_1':([157,],[209,]),'add_constant_i':([162,],[213,]),'add_constant_f':([163,],[215,]),'if_point':([164,],[217,]),'for_point_1':([165,],[219,]),'check_valid_func':([167,],[222,]),'asigna_point':([177,],[230,]),'llamada_void_2':([183,],[237,]),'exp_2':([196,],[246,]),'t_exp_2':([198,],[249,]),'add_operator_3':([199,],[252,]),'m_exp_2':([207,],[261,]),'t_2':([209,],[265,]),'add_quad_linearR':([224,],[273,]),'add_quad_box':([226,],[275,]),'add_quad_hist':([227,],[277,]),'llamada_2':([236,],[285,]),'llamada_void_3':([237,359,],[288,374,]),'verify_parameter':([238,286,331,357,],[291,329,359,372,]),'remove_floor':([240,296,330,356,390,],[293,335,358,371,401,]),'while_point_2':([271,],[313,]),'final_func_point':([279,],[319,]),'check_name':([281,],[321,]),'llamada_3':([285,372,],[326,388,]),'variable_3':([293,],[333,]),'for_point_2':([312,],[343,]),'add_quad_mean':([323,],[350,]),'add_quad_mode':([324,],[352,]),'add_quad_median':([325,],[354,]),'if_2':([342,361,413,],[362,376,415,]),'add_quad_readCSV':([349,],[366,]),'while_l_2':([365,379,],[380,396,]),'gosub':([371,373,],[386,389,]),'if_3':([377,],[391,]),'for_point_3':([378,],[394,]),'add_temp':([386,],[399,]),'if_point_3':([392,],[403,]),'if_point_2':([402,],[407,]),'while_point_3':([406,],[411,]),'for_l_2':([414,416,],[417,420,]),'for_point_4':([422,],[423,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM program_point ID COLON modules main','program',6,'p_program','virtual_machine.py',67),
  ('program_point -> empty','program_point',1,'p_program_point','virtual_machine.py',72),
  ('modules -> modules_2 modules_point modules_3 count_global_vars','modules',4,'p_modules','virtual_machine.py',81),
  ('modules_point -> empty','modules_point',1,'p_modules_point','virtual_machine.py',86),
  ('count_global_vars -> empty','count_global_vars',1,'p_count_global_vars','virtual_machine.py',99),
  ('modules_2 -> vars','modules_2',1,'p_modules_2','virtual_machine.py',122),
  ('modules_2 -> empty','modules_2',1,'p_modules_2','virtual_machine.py',123),
  ('modules_3 -> function','modules_3',1,'p_modules_3','virtual_machine.py',128),
  ('modules_3 -> empty','modules_3',1,'p_modules_3','virtual_machine.py',129),
  ('main -> MAIN main_point LPAR RPAR L_C_BRACKET body R_C_BRACKET SEMICOLON main_final','main',9,'p_main','virtual_machine.py',134),
  ('main_point -> empty','main_point',1,'p_main_point','virtual_machine.py',139),
  ('main_final -> empty','main_final',1,'p_main_final','virtual_machine.py',151),
  ('body -> body_2 func_agrega_v estatuto body_3','body',4,'p_body','virtual_machine.py',181),
  ('body_2 -> vars','body_2',1,'p_body_2','virtual_machine.py',186),
  ('body_2 -> empty','body_2',1,'p_body_2','virtual_machine.py',187),
  ('body_3 -> estatuto body_3','body_3',2,'p_body_3','virtual_machine.py',192),
  ('body_3 -> empty','body_3',1,'p_body_3','virtual_machine.py',193),
  ('tipo_simple -> INT','tipo_simple',1,'p_tipo_simple','virtual_machine.py',198),
  ('tipo_simple -> FLOAT','tipo_simple',1,'p_tipo_simple','virtual_machine.py',199),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','virtual_machine.py',206),
  ('vars -> VAR vars_2 SEMICOLON vars_8','vars',4,'p_vars','virtual_machine.py',213),
  ('vars_2 -> tipo_comp vars_3','vars_2',2,'p_vars_2','virtual_machine.py',218),
  ('vars_2 -> tipo_simple vars_4','vars_2',2,'p_vars_2','virtual_machine.py',219),
  ('vars_3 -> ID vars_5','vars_3',2,'p_vars_3','virtual_machine.py',224),
  ('vars_4 -> vars_3','vars_4',1,'p_vars_4','virtual_machine.py',239),
  ('vars_4 -> ID vars_6','vars_4',2,'p_vars_4','virtual_machine.py',240),
  ('vars_5 -> COMMA vars_3','vars_5',2,'p_vars_5','virtual_machine.py',245),
  ('vars_5 -> empty','vars_5',1,'p_vars_5','virtual_machine.py',246),
  ('vars_6 -> punto_id_especial L_S_BRACKET CTE_I R_S_BRACKET vars_7','vars_6',5,'p_vars_6','virtual_machine.py',251),
  ('vars_6 -> empty','vars_6',1,'p_vars_6','virtual_machine.py',252),
  ('punto_id_especial -> empty','punto_id_especial',1,'p_punto_id_especial','virtual_machine.py',257),
  ('vars_7 -> L_S_BRACKET CTE_I R_S_BRACKET var_mat','vars_7',4,'p_vars_7','virtual_machine.py',264),
  ('vars_7 -> var_array','vars_7',1,'p_vars_7','virtual_machine.py',265),
  ('var_array -> empty','var_array',1,'p_var_array','virtual_machine.py',270),
  ('var_mat -> empty','var_mat',1,'p_var_mat','virtual_machine.py',278),
  ('vars_8 -> vars','vars_8',1,'p_vars_8','virtual_machine.py',288),
  ('vars_8 -> empty','vars_8',1,'p_vars_8','virtual_machine.py',289),
  ('param -> tipo_simple ID punto_param param_2','param',4,'p_param','virtual_machine.py',294),
  ('param -> empty','param',1,'p_param','virtual_machine.py',295),
  ('param_2 -> COMMA param','param_2',2,'p_param_2','virtual_machine.py',300),
  ('param_2 -> empty','param_2',1,'p_param_2','virtual_machine.py',301),
  ('punto_param -> empty','punto_param',1,'p_punto_param','virtual_machine.py',306),
  ('punto_param_2 -> empty','punto_param_2',1,'p_punto_param_2','virtual_machine.py',317),
  ('variable -> ID variable_2 variable_point','variable',3,'p_variable','virtual_machine.py',325),
  ('variable_point -> empty','variable_point',1,'p_variable_point','virtual_machine.py',330),
  ('variable_2 -> L_S_BRACKET add_floor exp R_S_BRACKET remove_floor variable_3','variable_2',6,'p_variable_2','virtual_machine.py',436),
  ('variable_2 -> empty','variable_2',1,'p_variable_2','virtual_machine.py',437),
  ('variable_3 -> L_S_BRACKET add_floor exp R_S_BRACKET remove_floor','variable_3',5,'p_variable_3','virtual_machine.py',442),
  ('variable_3 -> empty','variable_3',1,'p_variable_3','virtual_machine.py',443),
  ('estatuto -> asigna','estatuto',1,'p_estatuto','virtual_machine.py',448),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','virtual_machine.py',449),
  ('estatuto -> llamada_void','estatuto',1,'p_estatuto','virtual_machine.py',450),
  ('estatuto -> read','estatuto',1,'p_estatuto','virtual_machine.py',451),
  ('estatuto -> write','estatuto',1,'p_estatuto','virtual_machine.py',452),
  ('estatuto -> if_1','estatuto',1,'p_estatuto','virtual_machine.py',453),
  ('estatuto -> for_l','estatuto',1,'p_estatuto','virtual_machine.py',454),
  ('estatuto -> while_l','estatuto',1,'p_estatuto','virtual_machine.py',455),
  ('estatuto -> return','estatuto',1,'p_estatuto','virtual_machine.py',456),
  ('estatuto -> funciones_especiales','estatuto',1,'p_estatuto','virtual_machine.py',457),
  ('asigna -> variable EQUAL add_operator exp asigna_point SEMICOLON','asigna',6,'p_asigna','virtual_machine.py',462),
  ('asigna_point -> empty','asigna_point',1,'p_asigna_point','virtual_machine.py',467),
  ('llamada -> ID verify_func not_void LPAR add_floor llamada_2 llamada_3 RPAR remove_floor gosub add_temp','llamada',11,'p_llamada','virtual_machine.py',493),
  ('llamada_2 -> exp verify_parameter','llamada_2',2,'p_llamada_2','virtual_machine.py',498),
  ('llamada_2 -> empty','llamada_2',1,'p_llamada_2','virtual_machine.py',499),
  ('llamada_3 -> COMMA exp verify_parameter llamada_3','llamada_3',4,'p_llamada_3','virtual_machine.py',504),
  ('llamada_3 -> empty','llamada_3',1,'p_llamada_3','virtual_machine.py',505),
  ('llamada_void -> ID verify_func LPAR add_floor llamada_void_2 llamada_void_3 RPAR remove_floor SEMICOLON gosub','llamada_void',10,'p_llamada_void','virtual_machine.py',510),
  ('llamada_void_2 -> exp verify_parameter','llamada_void_2',2,'p_llamada_void_2','virtual_machine.py',515),
  ('llamada_void_2 -> empty','llamada_void_2',1,'p_llamada_void_2','virtual_machine.py',516),
  ('llamada_void_3 -> COMMA exp verify_parameter llamada_void_3','llamada_void_3',4,'p_llamada_void_3','virtual_machine.py',521),
  ('llamada_void_3 -> empty','llamada_void_3',1,'p_llamada_void_3','virtual_machine.py',522),
  ('not_void -> empty','not_void',1,'p_not_void','virtual_machine.py',527),
  ('verify_func -> empty','verify_func',1,'p_verify_func','virtual_machine.py',536),
  ('verify_parameter -> empty','verify_parameter',1,'p_verify_parameter','virtual_machine.py',553),
  ('gosub -> empty','gosub',1,'p_gosub','virtual_machine.py',578),
  ('add_temp -> empty','add_temp',1,'p_add_temp','virtual_machine.py',589),
  ('read -> READ LPAR variable read_point RPAR SEMICOLON','read',6,'p_read','virtual_machine.py',605),
  ('read_point -> empty','read_point',1,'p_read_point','virtual_machine.py',610),
  ('write -> WRITE LPAR write_2 write_3 RPAR SEMICOLON','write',6,'p_write','virtual_machine.py',621),
  ('write_2 -> exp write_point','write_2',2,'p_write_2','virtual_machine.py',626),
  ('write_2 -> CTE_S add_constant_s write_point','write_2',3,'p_write_2','virtual_machine.py',627),
  ('write_3 -> COMMA write_2 write_3','write_3',3,'p_write_3','virtual_machine.py',632),
  ('write_3 -> empty','write_3',1,'p_write_3','virtual_machine.py',633),
  ('write_point -> empty','write_point',1,'p_write_point','virtual_machine.py',638),
  ('if_1 -> IF LPAR exp if_point RPAR L_C_BRACKET estatuto if_2 R_C_BRACKET if_3 SEMICOLON if_point_2','if_1',12,'p_if_1','virtual_machine.py',649),
  ('if_2 -> estatuto if_2','if_2',2,'p_if_2','virtual_machine.py',654),
  ('if_2 -> empty','if_2',1,'p_if_2','virtual_machine.py',655),
  ('if_3 -> ELSE if_point_3 L_C_BRACKET estatuto if_2 R_C_BRACKET','if_3',6,'p_if_3','virtual_machine.py',660),
  ('if_3 -> empty','if_3',1,'p_if_3','virtual_machine.py',661),
  ('if_point -> empty','if_point',1,'p_if_point','virtual_machine.py',666),
  ('if_point_2 -> empty','if_point_2',1,'p_if_point_2','virtual_machine.py',684),
  ('if_point_3 -> empty','if_point_3',1,'p_if_point_3','virtual_machine.py',694),
  ('for_l -> FOR LPAR ID for_point_1 EQUAL exp for_point_2 TO exp for_point_3 RPAR L_C_BRACKET estatuto for_l_2 R_C_BRACKET SEMICOLON for_point_4','for_l',17,'p_for_l','virtual_machine.py',706),
  ('for_l_2 -> estatuto for_l_2','for_l_2',2,'p_for_l_2','virtual_machine.py',711),
  ('for_l_2 -> empty','for_l_2',1,'p_for_l_2','virtual_machine.py',712),
  ('for_point_1 -> empty','for_point_1',1,'p_for_point_1','virtual_machine.py',717),
  ('for_point_2 -> empty','for_point_2',1,'p_for_point_2','virtual_machine.py',733),
  ('for_point_3 -> empty','for_point_3',1,'p_for_point_3','virtual_machine.py',758),
  ('for_point_4 -> empty','for_point_4',1,'p_for_point_4','virtual_machine.py',784),
  ('while_l -> WHILE while_point LPAR exp RPAR while_point_2 L_C_BRACKET estatuto while_l_2 R_C_BRACKET SEMICOLON while_point_3','while_l',12,'p_while_l','virtual_machine.py',820),
  ('while_l_2 -> estatuto while_l_2','while_l_2',2,'p_while_l_2','virtual_machine.py',825),
  ('while_l_2 -> empty','while_l_2',1,'p_while_l_2','virtual_machine.py',826),
  ('while_point -> empty','while_point',1,'p_while_point','virtual_machine.py',831),
  ('while_point_2 -> empty','while_point_2',1,'p_while_point_2','virtual_machine.py',839),
  ('while_point_3 -> empty','while_point_3',1,'p_while_point_3','virtual_machine.py',857),
  ('return -> RETURN LPAR exp check_valid_func RPAR SEMICOLON','return',6,'p_return','virtual_machine.py',868),
  ('check_valid_func -> empty','check_valid_func',1,'p_check_valid_func','virtual_machine.py',873),
  ('exp -> t_exp add_operator_4 exp_2','exp',3,'p_exp','virtual_machine.py',899),
  ('exp_2 -> OR add_operator exp','exp_2',3,'p_exp_2','virtual_machine.py',904),
  ('exp_2 -> empty','exp_2',1,'p_exp_2','virtual_machine.py',905),
  ('t_exp -> g_exp add_operator_4 t_exp_2','t_exp',3,'p_t_exp','virtual_machine.py',910),
  ('t_exp_2 -> AND add_operator t_exp','t_exp_2',3,'p_t_exp_2','virtual_machine.py',915),
  ('t_exp_2 -> empty','t_exp_2',1,'p_t_exp_2','virtual_machine.py',916),
  ('g_exp -> m_exp g_exp_2 add_operator_3','g_exp',3,'p_g_exp','virtual_machine.py',921),
  ('g_exp_2 -> LESS_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','virtual_machine.py',926),
  ('g_exp_2 -> LESS add_operator m_exp','g_exp_2',3,'p_g_exp_2','virtual_machine.py',927),
  ('g_exp_2 -> GREATER_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','virtual_machine.py',928),
  ('g_exp_2 -> GREATER add_operator m_exp','g_exp_2',3,'p_g_exp_2','virtual_machine.py',929),
  ('g_exp_2 -> COMPARE add_operator m_exp','g_exp_2',3,'p_g_exp_2','virtual_machine.py',930),
  ('g_exp_2 -> NOT_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','virtual_machine.py',931),
  ('g_exp_2 -> empty','g_exp_2',1,'p_g_exp_2','virtual_machine.py',932),
  ('m_exp -> t add_operator_2 m_exp_2','m_exp',3,'p_m_exp','virtual_machine.py',937),
  ('m_exp_2 -> PLUS add_operator m_exp','m_exp_2',3,'p_m_exp_2','virtual_machine.py',942),
  ('m_exp_2 -> MINUS add_operator m_exp','m_exp_2',3,'p_m_exp_2','virtual_machine.py',943),
  ('m_exp_2 -> empty','m_exp_2',1,'p_m_exp_2','virtual_machine.py',944),
  ('t -> f add_operator_1 t_2','t',3,'p_t','virtual_machine.py',949),
  ('t_2 -> TIMES add_operator t','t_2',3,'p_t_2','virtual_machine.py',954),
  ('t_2 -> DIVIDE add_operator t','t_2',3,'p_t_2','virtual_machine.py',955),
  ('t_2 -> empty','t_2',1,'p_t_2','virtual_machine.py',956),
  ('f -> LPAR add_floor exp RPAR remove_floor','f',5,'p_f','virtual_machine.py',961),
  ('f -> variable','f',1,'p_f','virtual_machine.py',962),
  ('f -> llamada','f',1,'p_f','virtual_machine.py',963),
  ('f -> f_2','f',1,'p_f','virtual_machine.py',964),
  ('f_2 -> CTE_I add_constant_i','f_2',2,'p_f_2','virtual_machine.py',969),
  ('f_2 -> CTE_F add_constant_f','f_2',2,'p_f_2','virtual_machine.py',970),
  ('add_floor -> empty','add_floor',1,'p_add_floor','virtual_machine.py',975),
  ('remove_floor -> empty','remove_floor',1,'p_remove_floor','virtual_machine.py',982),
  ('add_operator -> empty','add_operator',1,'p_add_operator','virtual_machine.py',989),
  ('add_operator_1 -> empty','add_operator_1',1,'p_add_operator_1','virtual_machine.py',998),
  ('add_operator_2 -> empty','add_operator_2',1,'p_add_operator_2','virtual_machine.py',1026),
  ('add_operator_3 -> empty','add_operator_3',1,'p_add_operator_3','virtual_machine.py',1054),
  ('add_operator_4 -> empty','add_operator_4',1,'p_add_operator_4','virtual_machine.py',1083),
  ('add_constant_i -> empty','add_constant_i',1,'p_add_constant_i','virtual_machine.py',1111),
  ('add_constant_s -> empty','add_constant_s',1,'p_add_constant_s','virtual_machine.py',1129),
  ('add_constant_f -> empty','add_constant_f',1,'p_add_constant_f','virtual_machine.py',1146),
  ('function -> FUNC function_2 SEMICOLON function_4','function',4,'p_function','virtual_machine.py',1163),
  ('function_2 -> function_3 ID function_punto1 LPAR param punto_param_2 RPAR L_C_BRACKET body R_C_BRACKET final_func_point','function_2',11,'p_function_2','virtual_machine.py',1168),
  ('function_3 -> tipo_simple','function_3',1,'p_function_3','virtual_machine.py',1173),
  ('function_3 -> VOID','function_3',1,'p_function_3','virtual_machine.py',1174),
  ('function_4 -> function','function_4',1,'p_function_4','virtual_machine.py',1182),
  ('function_4 -> empty','function_4',1,'p_function_4','virtual_machine.py',1183),
  ('function_punto1 -> empty','function_punto1',1,'p_function_punto1','virtual_machine.py',1188),
  ('func_agrega_v -> empty','func_agrega_v',1,'p_func_agrega_v','virtual_machine.py',1207),
  ('final_func_point -> empty','final_func_point',1,'p_final_func_point','virtual_machine.py',1235),
  ('funciones_especiales -> read_csv','funciones_especiales',1,'p_funciones_especiales','virtual_machine.py',1268),
  ('funciones_especiales -> mean_func','funciones_especiales',1,'p_funciones_especiales','virtual_machine.py',1269),
  ('funciones_especiales -> mode_func','funciones_especiales',1,'p_funciones_especiales','virtual_machine.py',1270),
  ('funciones_especiales -> median_func','funciones_especiales',1,'p_funciones_especiales','virtual_machine.py',1271),
  ('funciones_especiales -> linear_reg_func','funciones_especiales',1,'p_funciones_especiales','virtual_machine.py',1272),
  ('funciones_especiales -> box_plt','funciones_especiales',1,'p_funciones_especiales','virtual_machine.py',1273),
  ('funciones_especiales -> histogram_plt','funciones_especiales',1,'p_funciones_especiales','virtual_machine.py',1274),
  ('check_df -> empty','check_df',1,'p_check_df','virtual_machine.py',1279),
  ('read_csv -> variable EQUAL check_df CSV_READ LPAR CTE_S check_name add_constant_s add_quad_readCSV RPAR SEMICOLON','read_csv',11,'p_read_csv','virtual_machine.py',1287),
  ('add_quad_readCSV -> empty','add_quad_readCSV',1,'p_add_quad_readCSV','virtual_machine.py',1292),
  ('mean_func -> variable EQUAL check_df MEAN LPAR variable check_df add_quad_mean RPAR SEMICOLON','mean_func',10,'p_mean_func','virtual_machine.py',1303),
  ('add_quad_mean -> empty','add_quad_mean',1,'p_add_quad_mean','virtual_machine.py',1308),
  ('mode_func -> variable EQUAL check_df MODE LPAR variable check_df add_quad_mode RPAR SEMICOLON','mode_func',10,'p_mode_func','virtual_machine.py',1320),
  ('add_quad_mode -> empty','add_quad_mode',1,'p_add_quad_mode','virtual_machine.py',1326),
  ('median_func -> variable EQUAL check_df MEDIAN LPAR variable check_df add_quad_median RPAR SEMICOLON','median_func',10,'p_median_func','virtual_machine.py',1338),
  ('add_quad_median -> empty','add_quad_median',1,'p_add_quad_median','virtual_machine.py',1344),
  ('linear_reg_func -> LINEAR_REG LPAR variable check_df add_quad_linearR RPAR SEMICOLON','linear_reg_func',7,'p_linear_reg_func','virtual_machine.py',1356),
  ('add_quad_linearR -> empty','add_quad_linearR',1,'p_add_quad_linearR','virtual_machine.py',1361),
  ('box_plt -> BOX_PLOT LPAR variable check_df add_quad_box RPAR SEMICOLON','box_plt',7,'p_box_plt','virtual_machine.py',1370),
  ('add_quad_box -> empty','add_quad_box',1,'p_add_quad_box','virtual_machine.py',1375),
  ('histogram_plt -> HISTOGRAM LPAR variable check_df add_quad_hist RPAR SEMICOLON','histogram_plt',7,'p_histogram_plt','virtual_machine.py',1384),
  ('add_quad_hist -> empty','add_quad_hist',1,'p_add_quad_hist','virtual_machine.py',1389),
  ('check_name -> empty','check_name',1,'p_check_name','virtual_machine.py',1398),
  ('empty -> <empty>','empty',0,'p_empty','virtual_machine.py',1409),
]
