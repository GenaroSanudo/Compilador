
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COLON COMMA COMPARE CTE_F CTE_I CTE_S DATAFRAME DIVIDE ELSE EQUAL FLOAT FOR FUNC GREATER GREATER_EQUAL ID IF INT LESS LESS_EQUAL LPAR L_C_BRACKET L_S_BRACKET MAIN MINUS NOT_EQUAL OR PLUS PROGRAM READ RETURN RPAR R_C_BRACKET R_S_BRACKET SEMICOLON STRING TIMES TO VAR VOID WHILE WRITE\n    program : PROGRAM program_point ID COLON modules main\n    \n    program_point : empty\n    \n    modules : modules_2 modules_point modules_3\n    \n    modules_point : empty\n    \n    modules_2 : vars\n                | empty\n    \n    modules_3 : function\n                    | empty\n    \n    main : MAIN main_point LPAR RPAR L_C_BRACKET body R_C_BRACKET SEMICOLON\n    \n    main_point : empty\n    \n    body : vars func_agrega_v estatuto body_2\n    \n    body_2 : estatuto body_2\n                | empty\n    \n    tipo_simple : INT \n                | FLOAT\n                | CHAR\n    \n    tipo_comp : DATAFRAME\n    \n    vars : VAR vars_2 SEMICOLON vars_8\n    \n    vars_2 : tipo_comp vars_3\n                        | tipo_simple vars_4\n    \n    vars_3 : ID vars_5\n    \n    vars_4 : vars_3 \n                | ID vars_6\n    \n    vars_5 : COMMA vars_3\n            | empty\n    \n    vars_6 : punto_id_especial L_S_BRACKET CTE_I R_S_BRACKET vars_7\n                | empty\n    \n    punto_id_especial : empty\n    \n    vars_7 : L_S_BRACKET CTE_I R_S_BRACKET var_mat\n                | var_array\n    \n    var_array : empty\n    \n    var_mat : empty\n    \n    vars_8 : vars \n                | empty\n    \n    param : tipo_simple ID punto_param param_2\n                | empty\n    \n    param_2 : COMMA param\n                | empty\n    \n    punto_param : empty\n    \n    variable : ID variable_2 variable_point\n    \n    variable_point : empty\n    \n    variable_2 : L_S_BRACKET exp R_S_BRACKET variable_3 \n                    | empty\n    \n    variable_3 : L_S_BRACKET exp R_S_BRACKET\n                    | empty\n    \n    estatuto : asigna\n                | llamada\n                | read\n                | write\n                | if_1\n                | for_l\n                | while_l\n                | func_extra\n    \n    asigna : variable EQUAL add_operator exp asigna_point SEMICOLON\n    \n    asigna_point : empty\n    \n    llamada : ID LPAR exp llamada_2 RPAR SEMICOLON\n    \n    llamada_2 : COMMA exp llamada_2 \n                | empty\n    \n    read : READ LPAR variable read_point RPAR SEMICOLON\n    \n    read_point : empty\n    \n    write : WRITE LPAR write_2 write_3 RPAR SEMICOLON\n    \n    write_2 : exp write_point\n                | CTE_S add_constant_s write_point\n    \n    write_3 : COMMA write_2 write_3 \n                | empty\n    \n    write_point : empty\n    \n    if_1 : IF LPAR exp RPAR L_C_BRACKET estatuto if_2 R_C_BRACKET if_3 SEMICOLON\n    \n    if_2 : estatuto if_2 \n            | empty\n    \n    if_3 : ELSE L_C_BRACKET estatuto if_2 R_C_BRACKET\n    \n    for_l : FOR LPAR ID RPAR EQUAL exp TO exp RPAR L_C_BRACKET estatuto for_l_2 R_C_BRACKET SEMICOLON\n    \n    for_l_2 : estatuto for_l_2\n                | empty\n    \n    while_l : WHILE LPAR exp RPAR L_C_BRACKET estatuto while_l_2 R_C_BRACKET SEMICOLON\n    \n    while_l_2 : estatuto while_l_2\n                    | empty\n    \n    func_extra : empty\n    \n    exp : t_exp add_operator_4 exp_2 \n    \n    exp_2 : OR add_operator exp \n            | empty\n    \n    t_exp : g_exp add_operator_4 t_exp_2 \n    \n    t_exp_2 : AND add_operator t_exp \n                | empty\n    \n    g_exp : m_exp g_exp_2 add_operator_3\n    \n    g_exp_2 : LESS_EQUAL add_operator m_exp \n                | LESS add_operator m_exp \n                | GREATER_EQUAL add_operator m_exp \n                | GREATER add_operator m_exp \n                | COMPARE add_operator m_exp \n                | NOT_EQUAL add_operator m_exp \n                | empty\n    \n    m_exp : t add_operator_2 m_exp_2\n    \n    m_exp_2 : PLUS add_operator m_exp \n                | MINUS add_operator m_exp\n                | empty\n    \n    t : f add_operator_1 t_2\n    \n    t_2 : TIMES add_operator t \n            | DIVIDE add_operator t\n            | empty\n    \n    f : LPAR add_floor exp RPAR remove_floor\n            | variable\n            | llamada\n            | f_2\n    \n    f_2 : CTE_I add_constant_i\n            | CTE_F add_constant_f\n    \n    add_floor : empty\n    \n    remove_floor : empty\n    \n    add_operator : empty \n    \n    add_operator_1 : empty \n    \n    add_operator_2 : empty \n    \n    add_operator_3 : empty \n    \n    add_operator_4 : empty \n    \n    add_constant_i : empty\n    \n    add_constant_s : empty\n    \n    add_constant_f : empty\n    \n    function : FUNC function_2 SEMICOLON function_3\n    \n    function_2 : tipo_simple ID function_punto1 LPAR param RPAR L_C_BRACKET body RETURN LPAR exp RPAR SEMICOLON R_C_BRACKET \n                    | VOID ID function_punto2 LPAR param RPAR L_C_BRACKET body R_C_BRACKET\n    \n    function_3 : function\n                    | empty\n    \n    function_punto1 : empty\n    \n    function_punto2 : empty\n    \n    func_agrega_v : empty\n    \n    empty : \n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,79,],[0,-1,-9,]),'ID':([2,3,4,17,18,19,20,21,22,29,37,38,39,40,41,43,64,69,70,71,80,81,82,83,84,85,86,87,88,96,101,103,104,105,107,109,110,111,112,113,120,121,123,154,155,157,163,164,165,166,167,168,182,200,203,207,208,209,210,211,212,214,215,218,219,221,228,229,230,231,232,234,236,237,244,245,246,247,249,250,252,254,265,267,268,269,271,282,284,285,286,287,288,290,292,296,],[-124,5,-2,31,34,-17,-14,-15,-16,-124,50,51,-18,-33,-34,31,-124,90,-123,97,90,-46,-47,-48,-49,-50,-51,-52,-53,-77,90,-77,-124,122,122,139,122,122,144,122,122,-108,-124,122,-106,122,-124,-124,-124,-124,-124,-124,122,-124,-124,122,122,122,122,122,122,-124,-124,-124,-124,122,90,122,90,122,-54,-56,122,122,122,122,122,122,-59,-61,90,90,90,-77,122,90,-77,-74,-67,90,90,90,90,90,-77,-71,]),'COLON':([5,],[6,]),'VAR':([6,29,54,116,117,],[11,11,11,11,11,]),'FUNC':([6,8,9,10,14,15,29,39,40,41,49,],[-124,-124,-5,-6,28,-4,-124,-18,-33,-34,28,]),'MAIN':([6,7,8,9,10,14,15,25,26,27,29,39,40,41,49,55,56,57,],[-124,13,-124,-5,-6,-124,-4,-3,-7,-8,-124,-18,-33,-34,-124,-116,-119,-120,]),'DATAFRAME':([11,],[19,]),'INT':([11,28,65,66,147,],[20,20,20,20,20,]),'FLOAT':([11,28,65,66,147,],[21,21,21,21,21,]),'CHAR':([11,28,65,66,147,],[22,22,22,22,22,]),'LPAR':([13,23,24,50,51,58,59,60,61,90,91,92,93,94,95,104,105,107,110,111,113,120,121,122,123,154,155,157,163,164,165,166,167,168,182,192,200,203,207,208,209,210,211,212,214,215,218,219,221,229,231,236,237,244,245,246,247,268,],[-124,35,-10,-124,-124,65,-121,66,-122,105,109,110,111,112,113,-124,123,123,123,123,123,123,-108,105,-124,123,-106,123,-124,-124,-124,-124,-124,-124,123,231,-124,-124,123,123,123,123,123,123,-124,-124,-124,-124,123,123,123,123,123,123,123,123,123,123,]),'SEMICOLON':([16,30,31,32,33,34,36,42,44,45,47,52,67,68,76,77,78,106,108,118,122,125,126,127,128,129,130,131,132,133,134,135,136,151,152,153,159,160,161,162,169,170,171,172,173,174,175,176,177,178,193,194,195,197,199,201,202,204,205,206,213,216,217,220,222,223,224,225,233,234,238,239,240,241,242,243,256,257,258,259,260,261,262,263,264,272,277,279,283,293,295,],[29,-19,-124,-20,-22,-124,49,-21,-25,-23,-25,-24,-124,79,-26,-30,-31,-124,-43,-124,-124,-124,-124,-124,-124,-124,-101,-102,-103,-124,-124,-40,-41,-29,-32,-124,-124,-112,-124,-124,-91,-124,-110,-124,-109,-104,-113,-105,-115,-124,-118,232,-55,234,-78,-80,-81,-83,-84,-111,-92,-95,-96,-99,-42,-45,249,250,-124,-56,-85,-86,-87,-88,-89,-90,-100,-107,-79,-82,-93,-94,-97,-98,-44,278,282,284,-117,-70,296,]),'VOID':([28,],[38,]),'READ':([29,39,40,41,64,69,70,80,81,82,83,84,85,86,87,88,96,101,103,228,230,232,234,249,250,252,254,265,267,269,271,282,284,285,286,287,288,290,292,296,],[-124,-18,-33,-34,-124,91,-123,91,-46,-47,-48,-49,-50,-51,-52,-53,-77,91,-77,91,91,-54,-56,-59,-61,91,91,91,-77,91,-77,-74,-67,91,91,91,91,91,-77,-71,]),'WRITE':([29,39,40,41,64,69,70,80,81,82,83,84,85,86,87,88,96,101,103,228,230,232,234,249,250,252,254,265,267,269,271,282,284,285,286,287,288,290,292,296,],[-124,-18,-33,-34,-124,92,-123,92,-46,-47,-48,-49,-50,-51,-52,-53,-77,92,-77,92,92,-54,-56,-59,-61,92,92,92,-77,92,-77,-74,-67,92,92,92,92,92,-77,-71,]),'IF':([29,39,40,41,64,69,70,80,81,82,83,84,85,86,87,88,96,101,103,228,230,232,234,249,250,252,254,265,267,269,271,282,284,285,286,287,288,290,292,296,],[-124,-18,-33,-34,-124,93,-123,93,-46,-47,-48,-49,-50,-51,-52,-53,-77,93,-77,93,93,-54,-56,-59,-61,93,93,93,-77,93,-77,-74,-67,93,93,93,93,93,-77,-71,]),'FOR':([29,39,40,41,64,69,70,80,81,82,83,84,85,86,87,88,96,101,103,228,230,232,234,249,250,252,254,265,267,269,271,282,284,285,286,287,288,290,292,296,],[-124,-18,-33,-34,-124,94,-123,94,-46,-47,-48,-49,-50,-51,-52,-53,-77,94,-77,94,94,-54,-56,-59,-61,94,94,94,-77,94,-77,-74,-67,94,94,94,94,94,-77,-71,]),'WHILE':([29,39,40,41,64,69,70,80,81,82,83,84,85,86,87,88,96,101,103,228,230,232,234,249,250,252,254,265,267,269,271,282,284,285,286,287,288,290,292,296,],[-124,-18,-33,-34,-124,95,-123,95,-46,-47,-48,-49,-50,-51,-52,-53,-77,95,-77,95,95,-54,-56,-59,-61,95,95,95,-77,95,-77,-74,-67,95,95,95,95,95,-77,-71,]),'R_C_BRACKET':([29,39,40,41,63,64,69,70,80,81,82,83,84,85,86,87,88,96,101,102,103,119,150,228,230,232,234,249,250,252,254,265,266,267,269,270,271,273,276,278,282,284,285,286,287,288,289,290,291,292,294,296,],[-124,-18,-33,-34,68,-124,-124,-123,-124,-46,-47,-48,-49,-50,-51,-52,-53,-77,-124,-11,-13,-12,193,-124,-124,-54,-56,-59,-61,-124,-124,-124,274,-69,-124,277,-76,-68,-75,283,-74,-67,-124,-124,-124,-124,293,-124,295,-73,-72,-71,]),'RETURN':([29,39,40,41,64,69,70,80,81,82,83,84,85,86,87,88,96,101,102,103,119,149,232,234,249,250,282,284,296,],[-124,-18,-33,-34,-124,-124,-123,-124,-46,-47,-48,-49,-50,-51,-52,-53,-77,-124,-11,-13,-12,192,-54,-56,-59,-61,-74,-67,-71,]),'COMMA':([31,34,97,106,108,114,115,122,124,125,126,127,128,129,130,131,132,133,134,135,136,140,141,142,159,160,161,162,169,170,171,172,173,174,175,176,177,178,184,185,186,187,198,199,201,202,204,205,206,213,216,217,220,222,223,226,227,233,234,238,239,240,241,242,243,256,257,258,259,260,261,262,263,264,],[43,43,-124,-124,-43,147,-39,-124,157,-124,-124,-124,-124,-124,-101,-102,-103,-124,-124,-40,-41,182,-124,-124,-124,-112,-124,-124,-91,-124,-110,-124,-109,-104,-113,-105,-115,-124,-62,-66,-124,-114,157,-78,-80,-81,-83,-84,-111,-92,-95,-96,-99,-42,-45,182,-63,-124,-56,-85,-86,-87,-88,-89,-90,-100,-107,-79,-82,-93,-94,-97,-98,-44,]),'L_S_BRACKET':([34,46,47,67,90,122,139,178,],[-124,53,-28,75,107,107,107,221,]),'RPAR':([35,65,66,72,73,74,97,106,108,114,115,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,156,158,159,160,161,162,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,191,196,198,199,201,202,204,205,206,213,216,217,220,222,223,226,227,233,234,235,238,239,240,241,242,243,251,255,256,257,258,259,260,261,262,263,264,275,],[48,-124,-124,98,-36,99,-124,-124,-43,-124,-39,-124,-124,-124,-124,-124,-124,-124,-101,-102,-103,-124,-124,-40,-41,-124,-124,-124,-124,-124,188,189,190,-35,-124,-38,197,-58,-124,-112,-124,-124,-91,-124,-110,-124,-109,-104,-113,-105,-115,-124,224,-60,225,-65,-62,-66,-124,-114,-37,233,-124,-78,-80,-81,-83,-84,-111,-92,-95,-96,-99,-42,-45,-124,-63,-124,-56,-57,-85,-86,-87,-88,-89,-90,-64,272,-100,-107,-79,-82,-93,-94,-97,-98,-44,281,]),'L_C_BRACKET':([48,98,99,188,190,280,281,],[54,116,117,228,230,285,286,]),'CTE_I':([53,75,104,105,107,110,111,113,120,121,123,154,155,157,163,164,165,166,167,168,182,200,203,207,208,209,210,211,212,214,215,218,219,221,229,231,236,237,244,245,246,247,268,],[62,100,-124,133,133,133,133,133,133,-108,-124,133,-106,133,-124,-124,-124,-124,-124,-124,133,-124,-124,133,133,133,133,133,133,-124,-124,-124,-124,133,133,133,133,133,133,133,133,133,133,]),'R_S_BRACKET':([62,100,106,108,122,125,126,127,128,129,130,131,132,133,134,135,136,137,159,160,161,162,169,170,171,172,173,174,175,176,177,178,199,201,202,204,205,206,213,216,217,220,222,223,233,234,238,239,240,241,242,243,248,256,257,258,259,260,261,262,263,264,],[67,118,-124,-43,-124,-124,-124,-124,-124,-124,-101,-102,-103,-124,-124,-40,-41,178,-124,-112,-124,-124,-91,-124,-110,-124,-109,-104,-113,-105,-115,-124,-78,-80,-81,-83,-84,-111,-92,-95,-96,-99,-42,-45,-124,-56,-85,-86,-87,-88,-89,-90,264,-100,-107,-79,-82,-93,-94,-97,-98,-44,]),'EQUAL':([89,90,106,108,135,136,178,189,222,223,264,],[104,-124,-124,-43,-40,-41,-124,229,-42,-45,-44,]),'CTE_F':([104,105,107,110,111,113,120,121,123,154,155,157,163,164,165,166,167,168,182,200,203,207,208,209,210,211,212,214,215,218,219,221,229,231,236,237,244,245,246,247,268,],[-124,134,134,134,134,134,134,-108,-124,134,-106,134,-124,-124,-124,-124,-124,-124,134,-124,-124,134,134,134,134,134,134,-124,-124,-124,-124,134,134,134,134,134,134,134,134,134,134,]),'TIMES':([106,108,122,129,130,131,132,133,134,135,136,172,173,174,175,176,177,178,222,223,233,234,256,257,264,],[-124,-43,-124,-124,-101,-102,-103,-124,-124,-40,-41,218,-109,-104,-113,-105,-115,-124,-42,-45,-124,-56,-100,-107,-44,]),'DIVIDE':([106,108,122,129,130,131,132,133,134,135,136,172,173,174,175,176,177,178,222,223,233,234,256,257,264,],[-124,-43,-124,-124,-101,-102,-103,-124,-124,-40,-41,219,-109,-104,-113,-105,-115,-124,-42,-45,-124,-56,-100,-107,-44,]),'PLUS':([106,108,122,128,129,130,131,132,133,134,135,136,170,171,172,173,174,175,176,177,178,217,220,222,223,233,234,256,257,262,263,264,],[-124,-43,-124,-124,-124,-101,-102,-103,-124,-124,-40,-41,214,-110,-124,-109,-104,-113,-105,-115,-124,-96,-99,-42,-45,-124,-56,-100,-107,-97,-98,-44,]),'MINUS':([106,108,122,128,129,130,131,132,133,134,135,136,170,171,172,173,174,175,176,177,178,217,220,222,223,233,234,256,257,262,263,264,],[-124,-43,-124,-124,-124,-101,-102,-103,-124,-124,-40,-41,215,-110,-124,-109,-104,-113,-105,-115,-124,-96,-99,-42,-45,-124,-56,-100,-107,-97,-98,-44,]),'LESS_EQUAL':([106,108,122,127,128,129,130,131,132,133,134,135,136,170,171,172,173,174,175,176,177,178,213,216,217,220,222,223,233,234,256,257,260,261,262,263,264,],[-124,-43,-124,163,-124,-124,-101,-102,-103,-124,-124,-40,-41,-124,-110,-124,-109,-104,-113,-105,-115,-124,-92,-95,-96,-99,-42,-45,-124,-56,-100,-107,-93,-94,-97,-98,-44,]),'LESS':([106,108,122,127,128,129,130,131,132,133,134,135,136,170,171,172,173,174,175,176,177,178,213,216,217,220,222,223,233,234,256,257,260,261,262,263,264,],[-124,-43,-124,164,-124,-124,-101,-102,-103,-124,-124,-40,-41,-124,-110,-124,-109,-104,-113,-105,-115,-124,-92,-95,-96,-99,-42,-45,-124,-56,-100,-107,-93,-94,-97,-98,-44,]),'GREATER_EQUAL':([106,108,122,127,128,129,130,131,132,133,134,135,136,170,171,172,173,174,175,176,177,178,213,216,217,220,222,223,233,234,256,257,260,261,262,263,264,],[-124,-43,-124,165,-124,-124,-101,-102,-103,-124,-124,-40,-41,-124,-110,-124,-109,-104,-113,-105,-115,-124,-92,-95,-96,-99,-42,-45,-124,-56,-100,-107,-93,-94,-97,-98,-44,]),'GREATER':([106,108,122,127,128,129,130,131,132,133,134,135,136,170,171,172,173,174,175,176,177,178,213,216,217,220,222,223,233,234,256,257,260,261,262,263,264,],[-124,-43,-124,166,-124,-124,-101,-102,-103,-124,-124,-40,-41,-124,-110,-124,-109,-104,-113,-105,-115,-124,-92,-95,-96,-99,-42,-45,-124,-56,-100,-107,-93,-94,-97,-98,-44,]),'COMPARE':([106,108,122,127,128,129,130,131,132,133,134,135,136,170,171,172,173,174,175,176,177,178,213,216,217,220,222,223,233,234,256,257,260,261,262,263,264,],[-124,-43,-124,167,-124,-124,-101,-102,-103,-124,-124,-40,-41,-124,-110,-124,-109,-104,-113,-105,-115,-124,-92,-95,-96,-99,-42,-45,-124,-56,-100,-107,-93,-94,-97,-98,-44,]),'NOT_EQUAL':([106,108,122,127,128,129,130,131,132,133,134,135,136,170,171,172,173,174,175,176,177,178,213,216,217,220,222,223,233,234,256,257,260,261,262,263,264,],[-124,-43,-124,168,-124,-124,-101,-102,-103,-124,-124,-40,-41,-124,-110,-124,-109,-104,-113,-105,-115,-124,-92,-95,-96,-99,-42,-45,-124,-56,-100,-107,-93,-94,-97,-98,-44,]),'AND':([106,108,122,126,127,128,129,130,131,132,133,134,135,136,160,161,162,169,170,171,172,173,174,175,176,177,178,205,206,213,216,217,220,222,223,233,234,238,239,240,241,242,243,256,257,260,261,262,263,264,],[-124,-43,-124,-124,-124,-124,-124,-101,-102,-103,-124,-124,-40,-41,-112,203,-124,-91,-124,-110,-124,-109,-104,-113,-105,-115,-124,-84,-111,-92,-95,-96,-99,-42,-45,-124,-56,-85,-86,-87,-88,-89,-90,-100,-107,-93,-94,-97,-98,-44,]),'OR':([106,108,122,125,126,127,128,129,130,131,132,133,134,135,136,159,160,161,162,169,170,171,172,173,174,175,176,177,178,202,204,205,206,213,216,217,220,222,223,233,234,238,239,240,241,242,243,256,257,259,260,261,262,263,264,],[-124,-43,-124,-124,-124,-124,-124,-124,-101,-102,-103,-124,-124,-40,-41,200,-112,-124,-124,-91,-124,-110,-124,-109,-104,-113,-105,-115,-124,-81,-83,-84,-111,-92,-95,-96,-99,-42,-45,-124,-56,-85,-86,-87,-88,-89,-90,-100,-107,-82,-93,-94,-97,-98,-44,]),'TO':([106,108,122,125,126,127,128,129,130,131,132,133,134,135,136,159,160,161,162,169,170,171,172,173,174,175,176,177,178,199,201,202,204,205,206,213,216,217,220,222,223,233,234,238,239,240,241,242,243,253,256,257,258,259,260,261,262,263,264,],[-124,-43,-124,-124,-124,-124,-124,-124,-101,-102,-103,-124,-124,-40,-41,-124,-112,-124,-124,-91,-124,-110,-124,-109,-104,-113,-105,-115,-124,-78,-80,-81,-83,-84,-111,-92,-95,-96,-99,-42,-45,-124,-56,-85,-86,-87,-88,-89,-90,268,-100,-107,-79,-82,-93,-94,-97,-98,-44,]),'CTE_S':([110,182,],[142,142,]),'ELSE':([274,],[280,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_point':([2,],[3,]),'empty':([2,6,8,13,14,29,31,34,49,50,51,64,65,66,67,69,80,90,97,101,104,106,114,118,122,123,124,125,126,127,128,129,133,134,138,139,140,141,142,147,153,159,161,162,163,164,165,166,167,168,170,172,178,186,198,200,203,214,215,218,219,226,228,230,233,252,254,265,269,285,286,287,288,290,],[4,10,15,24,27,41,44,47,57,59,61,70,73,73,78,96,103,108,115,103,121,136,148,152,108,155,158,160,160,169,171,173,175,177,180,108,183,185,187,73,195,201,204,206,121,121,121,121,121,121,216,220,223,185,158,121,121,121,121,121,121,183,96,96,257,267,271,267,271,96,96,267,292,292,]),'modules':([6,],[7,]),'modules_2':([6,],[8,]),'vars':([6,29,54,116,117,],[9,40,64,64,64,]),'main':([7,],[12,]),'modules_point':([8,],[14,]),'vars_2':([11,],[16,]),'tipo_comp':([11,],[17,]),'tipo_simple':([11,28,65,66,147,],[18,37,71,71,71,]),'main_point':([13,],[23,]),'modules_3':([14,],[25,]),'function':([14,49,],[26,56,]),'vars_3':([17,18,43,],[30,33,52,]),'vars_4':([18,],[32,]),'function_2':([28,],[36,]),'vars_8':([29,],[39,]),'vars_5':([31,34,],[42,42,]),'vars_6':([34,],[45,]),'punto_id_especial':([34,],[46,]),'function_3':([49,],[55,]),'function_punto1':([50,],[58,]),'function_punto2':([51,],[60,]),'body':([54,116,117,],[63,149,150,]),'func_agrega_v':([64,],[69,]),'param':([65,66,147,],[72,74,191,]),'vars_7':([67,],[76,]),'var_array':([67,],[77,]),'estatuto':([69,80,101,228,230,252,254,265,269,285,286,287,288,290,],[80,101,101,252,254,265,269,265,269,287,288,265,290,290,]),'asigna':([69,80,101,228,230,252,254,265,269,285,286,287,288,290,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'llamada':([69,80,101,105,107,110,111,113,120,154,157,182,207,208,209,210,211,212,221,228,229,230,231,236,237,244,245,246,247,252,254,265,268,269,285,286,287,288,290,],[82,82,82,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,82,131,82,131,131,131,131,131,131,131,82,82,82,131,82,82,82,82,82,82,]),'read':([69,80,101,228,230,252,254,265,269,285,286,287,288,290,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'write':([69,80,101,228,230,252,254,265,269,285,286,287,288,290,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'if_1':([69,80,101,228,230,252,254,265,269,285,286,287,288,290,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'for_l':([69,80,101,228,230,252,254,265,269,285,286,287,288,290,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'while_l':([69,80,101,228,230,252,254,265,269,285,286,287,288,290,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'func_extra':([69,80,101,228,230,252,254,265,269,285,286,287,288,290,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'variable':([69,80,101,105,107,109,110,111,113,120,154,157,182,207,208,209,210,211,212,221,228,229,230,231,236,237,244,245,246,247,252,254,265,268,269,285,286,287,288,290,],[89,89,89,130,130,138,130,130,130,130,130,130,130,130,130,130,130,130,130,130,89,130,89,130,130,130,130,130,130,130,89,89,89,130,89,89,89,89,89,89,]),'body_2':([80,101,],[102,119,]),'variable_2':([90,122,139,],[106,106,106,]),'punto_param':([97,],[114,]),'add_operator':([104,163,164,165,166,167,168,200,203,214,215,218,219,],[120,207,208,209,210,211,212,236,237,244,245,246,247,]),'exp':([105,107,110,111,113,120,154,157,182,221,229,231,236,268,],[124,137,141,143,145,153,196,198,141,248,253,255,258,275,]),'t_exp':([105,107,110,111,113,120,154,157,182,221,229,231,236,237,268,],[125,125,125,125,125,125,125,125,125,125,125,125,125,259,125,]),'g_exp':([105,107,110,111,113,120,154,157,182,221,229,231,236,237,268,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'m_exp':([105,107,110,111,113,120,154,157,182,207,208,209,210,211,212,221,229,231,236,237,244,245,268,],[127,127,127,127,127,127,127,127,127,238,239,240,241,242,243,127,127,127,127,127,260,261,127,]),'t':([105,107,110,111,113,120,154,157,182,207,208,209,210,211,212,221,229,231,236,237,244,245,246,247,268,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,262,263,128,]),'f':([105,107,110,111,113,120,154,157,182,207,208,209,210,211,212,221,229,231,236,237,244,245,246,247,268,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'f_2':([105,107,110,111,113,120,154,157,182,207,208,209,210,211,212,221,229,231,236,237,244,245,246,247,268,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'variable_point':([106,],[135,]),'write_2':([110,182,],[140,226,]),'param_2':([114,],[146,]),'var_mat':([118,],[151,]),'add_floor':([123,],[154,]),'llamada_2':([124,198,],[156,235,]),'add_operator_4':([125,126,],[159,161,]),'g_exp_2':([127,],[162,]),'add_operator_2':([128,],[170,]),'add_operator_1':([129,],[172,]),'add_constant_i':([133,],[174,]),'add_constant_f':([134,],[176,]),'read_point':([138,],[179,]),'write_3':([140,226,],[181,251,]),'write_point':([141,186,],[184,227,]),'add_constant_s':([142,],[186,]),'asigna_point':([153,],[194,]),'exp_2':([159,],[199,]),'t_exp_2':([161,],[202,]),'add_operator_3':([162,],[205,]),'m_exp_2':([170,],[213,]),'t_2':([172,],[217,]),'variable_3':([178,],[222,]),'remove_floor':([233,],[256,]),'if_2':([252,265,287,],[266,273,289,]),'while_l_2':([254,269,],[270,276,]),'if_3':([274,],[279,]),'for_l_2':([288,290,],[291,294,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM program_point ID COLON modules main','program',6,'p_program','parser_1.py',55),
  ('program_point -> empty','program_point',1,'p_program_point','parser_1.py',60),
  ('modules -> modules_2 modules_point modules_3','modules',3,'p_modules','parser_1.py',68),
  ('modules_point -> empty','modules_point',1,'p_modules_point','parser_1.py',73),
  ('modules_2 -> vars','modules_2',1,'p_modules_2','parser_1.py',88),
  ('modules_2 -> empty','modules_2',1,'p_modules_2','parser_1.py',89),
  ('modules_3 -> function','modules_3',1,'p_modules_3','parser_1.py',94),
  ('modules_3 -> empty','modules_3',1,'p_modules_3','parser_1.py',95),
  ('main -> MAIN main_point LPAR RPAR L_C_BRACKET body R_C_BRACKET SEMICOLON','main',8,'p_main','parser_1.py',100),
  ('main_point -> empty','main_point',1,'p_main_point','parser_1.py',105),
  ('body -> vars func_agrega_v estatuto body_2','body',4,'p_body','parser_1.py',112),
  ('body_2 -> estatuto body_2','body_2',2,'p_body_2','parser_1.py',118),
  ('body_2 -> empty','body_2',1,'p_body_2','parser_1.py',119),
  ('tipo_simple -> INT','tipo_simple',1,'p_tipo_simple','parser_1.py',124),
  ('tipo_simple -> FLOAT','tipo_simple',1,'p_tipo_simple','parser_1.py',125),
  ('tipo_simple -> CHAR','tipo_simple',1,'p_tipo_simple','parser_1.py',126),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','parser_1.py',133),
  ('vars -> VAR vars_2 SEMICOLON vars_8','vars',4,'p_vars','parser_1.py',140),
  ('vars_2 -> tipo_comp vars_3','vars_2',2,'p_vars_2','parser_1.py',146),
  ('vars_2 -> tipo_simple vars_4','vars_2',2,'p_vars_2','parser_1.py',147),
  ('vars_3 -> ID vars_5','vars_3',2,'p_vars_3','parser_1.py',152),
  ('vars_4 -> vars_3','vars_4',1,'p_vars_4','parser_1.py',166),
  ('vars_4 -> ID vars_6','vars_4',2,'p_vars_4','parser_1.py',167),
  ('vars_5 -> COMMA vars_3','vars_5',2,'p_vars_5','parser_1.py',172),
  ('vars_5 -> empty','vars_5',1,'p_vars_5','parser_1.py',173),
  ('vars_6 -> punto_id_especial L_S_BRACKET CTE_I R_S_BRACKET vars_7','vars_6',5,'p_vars_6','parser_1.py',178),
  ('vars_6 -> empty','vars_6',1,'p_vars_6','parser_1.py',179),
  ('punto_id_especial -> empty','punto_id_especial',1,'p_punto_id_especial','parser_1.py',183),
  ('vars_7 -> L_S_BRACKET CTE_I R_S_BRACKET var_mat','vars_7',4,'p_vars_7','parser_1.py',190),
  ('vars_7 -> var_array','vars_7',1,'p_vars_7','parser_1.py',191),
  ('var_array -> empty','var_array',1,'p_var_array','parser_1.py',196),
  ('var_mat -> empty','var_mat',1,'p_var_mat','parser_1.py',206),
  ('vars_8 -> vars','vars_8',1,'p_vars_8','parser_1.py',217),
  ('vars_8 -> empty','vars_8',1,'p_vars_8','parser_1.py',218),
  ('param -> tipo_simple ID punto_param param_2','param',4,'p_param','parser_1.py',223),
  ('param -> empty','param',1,'p_param','parser_1.py',224),
  ('param_2 -> COMMA param','param_2',2,'p_param_2','parser_1.py',229),
  ('param_2 -> empty','param_2',1,'p_param_2','parser_1.py',230),
  ('punto_param -> empty','punto_param',1,'p_punto_param','parser_1.py',235),
  ('variable -> ID variable_2 variable_point','variable',3,'p_variable','parser_1.py',243),
  ('variable_point -> empty','variable_point',1,'p_variable_point','parser_1.py',248),
  ('variable_2 -> L_S_BRACKET exp R_S_BRACKET variable_3','variable_2',4,'p_variable_2','parser_1.py',270),
  ('variable_2 -> empty','variable_2',1,'p_variable_2','parser_1.py',271),
  ('variable_3 -> L_S_BRACKET exp R_S_BRACKET','variable_3',3,'p_variable_3','parser_1.py',276),
  ('variable_3 -> empty','variable_3',1,'p_variable_3','parser_1.py',277),
  ('estatuto -> asigna','estatuto',1,'p_estatuto','parser_1.py',282),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','parser_1.py',283),
  ('estatuto -> read','estatuto',1,'p_estatuto','parser_1.py',284),
  ('estatuto -> write','estatuto',1,'p_estatuto','parser_1.py',285),
  ('estatuto -> if_1','estatuto',1,'p_estatuto','parser_1.py',286),
  ('estatuto -> for_l','estatuto',1,'p_estatuto','parser_1.py',287),
  ('estatuto -> while_l','estatuto',1,'p_estatuto','parser_1.py',288),
  ('estatuto -> func_extra','estatuto',1,'p_estatuto','parser_1.py',289),
  ('asigna -> variable EQUAL add_operator exp asigna_point SEMICOLON','asigna',6,'p_asigna','parser_1.py',294),
  ('asigna_point -> empty','asigna_point',1,'p_asigna_point','parser_1.py',299),
  ('llamada -> ID LPAR exp llamada_2 RPAR SEMICOLON','llamada',6,'p_llamada','parser_1.py',325),
  ('llamada_2 -> COMMA exp llamada_2','llamada_2',3,'p_llamada_2','parser_1.py',330),
  ('llamada_2 -> empty','llamada_2',1,'p_llamada_2','parser_1.py',331),
  ('read -> READ LPAR variable read_point RPAR SEMICOLON','read',6,'p_read','parser_1.py',336),
  ('read_point -> empty','read_point',1,'p_read_point','parser_1.py',341),
  ('write -> WRITE LPAR write_2 write_3 RPAR SEMICOLON','write',6,'p_write','parser_1.py',352),
  ('write_2 -> exp write_point','write_2',2,'p_write_2','parser_1.py',357),
  ('write_2 -> CTE_S add_constant_s write_point','write_2',3,'p_write_2','parser_1.py',358),
  ('write_3 -> COMMA write_2 write_3','write_3',3,'p_write_3','parser_1.py',363),
  ('write_3 -> empty','write_3',1,'p_write_3','parser_1.py',364),
  ('write_point -> empty','write_point',1,'p_write_point','parser_1.py',369),
  ('if_1 -> IF LPAR exp RPAR L_C_BRACKET estatuto if_2 R_C_BRACKET if_3 SEMICOLON','if_1',10,'p_if_1','parser_1.py',382),
  ('if_2 -> estatuto if_2','if_2',2,'p_if_2','parser_1.py',387),
  ('if_2 -> empty','if_2',1,'p_if_2','parser_1.py',388),
  ('if_3 -> ELSE L_C_BRACKET estatuto if_2 R_C_BRACKET','if_3',5,'p_if_3','parser_1.py',393),
  ('for_l -> FOR LPAR ID RPAR EQUAL exp TO exp RPAR L_C_BRACKET estatuto for_l_2 R_C_BRACKET SEMICOLON','for_l',14,'p_for_l','parser_1.py',398),
  ('for_l_2 -> estatuto for_l_2','for_l_2',2,'p_for_l_2','parser_1.py',403),
  ('for_l_2 -> empty','for_l_2',1,'p_for_l_2','parser_1.py',404),
  ('while_l -> WHILE LPAR exp RPAR L_C_BRACKET estatuto while_l_2 R_C_BRACKET SEMICOLON','while_l',9,'p_while_l','parser_1.py',409),
  ('while_l_2 -> estatuto while_l_2','while_l_2',2,'p_while_l_2','parser_1.py',414),
  ('while_l_2 -> empty','while_l_2',1,'p_while_l_2','parser_1.py',415),
  ('func_extra -> empty','func_extra',1,'p_func_extra','parser_1.py',420),
  ('exp -> t_exp add_operator_4 exp_2','exp',3,'p_exp','parser_1.py',425),
  ('exp_2 -> OR add_operator exp','exp_2',3,'p_exp_2','parser_1.py',430),
  ('exp_2 -> empty','exp_2',1,'p_exp_2','parser_1.py',431),
  ('t_exp -> g_exp add_operator_4 t_exp_2','t_exp',3,'p_t_exp','parser_1.py',436),
  ('t_exp_2 -> AND add_operator t_exp','t_exp_2',3,'p_t_exp_2','parser_1.py',441),
  ('t_exp_2 -> empty','t_exp_2',1,'p_t_exp_2','parser_1.py',442),
  ('g_exp -> m_exp g_exp_2 add_operator_3','g_exp',3,'p_g_exp','parser_1.py',447),
  ('g_exp_2 -> LESS_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',452),
  ('g_exp_2 -> LESS add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',453),
  ('g_exp_2 -> GREATER_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',454),
  ('g_exp_2 -> GREATER add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',455),
  ('g_exp_2 -> COMPARE add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',456),
  ('g_exp_2 -> NOT_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',457),
  ('g_exp_2 -> empty','g_exp_2',1,'p_g_exp_2','parser_1.py',458),
  ('m_exp -> t add_operator_2 m_exp_2','m_exp',3,'p_m_exp','parser_1.py',463),
  ('m_exp_2 -> PLUS add_operator m_exp','m_exp_2',3,'p_m_exp_2','parser_1.py',468),
  ('m_exp_2 -> MINUS add_operator m_exp','m_exp_2',3,'p_m_exp_2','parser_1.py',469),
  ('m_exp_2 -> empty','m_exp_2',1,'p_m_exp_2','parser_1.py',470),
  ('t -> f add_operator_1 t_2','t',3,'p_t','parser_1.py',475),
  ('t_2 -> TIMES add_operator t','t_2',3,'p_t_2','parser_1.py',480),
  ('t_2 -> DIVIDE add_operator t','t_2',3,'p_t_2','parser_1.py',481),
  ('t_2 -> empty','t_2',1,'p_t_2','parser_1.py',482),
  ('f -> LPAR add_floor exp RPAR remove_floor','f',5,'p_f','parser_1.py',487),
  ('f -> variable','f',1,'p_f','parser_1.py',488),
  ('f -> llamada','f',1,'p_f','parser_1.py',489),
  ('f -> f_2','f',1,'p_f','parser_1.py',490),
  ('f_2 -> CTE_I add_constant_i','f_2',2,'p_f_2','parser_1.py',495),
  ('f_2 -> CTE_F add_constant_f','f_2',2,'p_f_2','parser_1.py',496),
  ('add_floor -> empty','add_floor',1,'p_add_floor','parser_1.py',501),
  ('remove_floor -> empty','remove_floor',1,'p_remove_floor','parser_1.py',508),
  ('add_operator -> empty','add_operator',1,'p_add_operator','parser_1.py',515),
  ('add_operator_1 -> empty','add_operator_1',1,'p_add_operator_1','parser_1.py',524),
  ('add_operator_2 -> empty','add_operator_2',1,'p_add_operator_2','parser_1.py',554),
  ('add_operator_3 -> empty','add_operator_3',1,'p_add_operator_3','parser_1.py',584),
  ('add_operator_4 -> empty','add_operator_4',1,'p_add_operator_4','parser_1.py',614),
  ('add_constant_i -> empty','add_constant_i',1,'p_add_constant_i','parser_1.py',643),
  ('add_constant_s -> empty','add_constant_s',1,'p_add_constant_s','parser_1.py',661),
  ('add_constant_f -> empty','add_constant_f',1,'p_add_constant_f','parser_1.py',678),
  ('function -> FUNC function_2 SEMICOLON function_3','function',4,'p_function','parser_1.py',696),
  ('function_2 -> tipo_simple ID function_punto1 LPAR param RPAR L_C_BRACKET body RETURN LPAR exp RPAR SEMICOLON R_C_BRACKET','function_2',14,'p_function_2','parser_1.py',701),
  ('function_2 -> VOID ID function_punto2 LPAR param RPAR L_C_BRACKET body R_C_BRACKET','function_2',9,'p_function_2','parser_1.py',702),
  ('function_3 -> function','function_3',1,'p_function_3','parser_1.py',707),
  ('function_3 -> empty','function_3',1,'p_function_3','parser_1.py',708),
  ('function_punto1 -> empty','function_punto1',1,'p_function_punto1','parser_1.py',713),
  ('function_punto2 -> empty','function_punto2',1,'p_function_punto2','parser_1.py',723),
  ('func_agrega_v -> empty','func_agrega_v',1,'p_func_agrega_v','parser_1.py',731),
  ('empty -> <empty>','empty',0,'p_empty','parser_1.py',742),
]
