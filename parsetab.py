
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COLON COMMA COMPARE CTE_F CTE_I CTE_S DATAFRAME DIVIDE ELSE EQUAL FLOAT FOR FUNC GREATER GREATER_EQUAL ID IF INT LESS LESS_EQUAL LPAR L_C_BRACKET L_S_BRACKET MAIN MINUS NOT_EQUAL OR PLUS PROGRAM READ RETURN RPAR R_C_BRACKET R_S_BRACKET SEMICOLON STRING TIMES TO VAR VOID WHILE WRITE\n    program : PROGRAM program_point ID COLON modules main\n    \n    program_point : empty\n    \n    modules : modules_2 modules_point modules_3 count_global_vars\n    \n    modules_point : empty\n    \n    count_global_vars : empty\n    \n    modules_2 : vars\n                | empty\n    \n    modules_3 : function\n                    | empty\n    \n    main : MAIN main_point LPAR RPAR L_C_BRACKET body R_C_BRACKET SEMICOLON main_final\n    \n    main_point : empty\n    \n    main_final : empty\n    \n    body : body_2 func_agrega_v estatuto body_3\n    \n    body_2 : vars\n                | empty\n    \n    body_3 : estatuto body_3\n                | empty\n    \n    tipo_simple : INT \n                | FLOAT\n                | CHAR\n    \n    tipo_comp : DATAFRAME\n    \n    vars : VAR vars_2 SEMICOLON vars_8\n    \n    vars_2 : tipo_comp vars_3\n                        | tipo_simple vars_4\n    \n    vars_3 : ID vars_5\n    \n    vars_4 : vars_3 \n                | ID vars_6\n    \n    vars_5 : COMMA vars_3\n            | empty\n    \n    vars_6 : punto_id_especial L_S_BRACKET CTE_I R_S_BRACKET vars_7\n                | empty\n    \n    punto_id_especial : empty\n    \n    vars_7 : L_S_BRACKET CTE_I R_S_BRACKET var_mat\n                | var_array\n    \n    var_array : empty\n    \n    var_mat : empty\n    \n    vars_8 : vars \n                | empty\n    \n    param : tipo_simple ID punto_param param_2 \n                | empty\n    \n    param_2 : COMMA param\n                | empty\n    \n    punto_param : empty\n    \n    punto_param_2 : empty\n    \n    variable : ID variable_2 variable_point\n    \n    variable_point : empty\n    \n    variable_2 : L_S_BRACKET add_floor exp R_S_BRACKET remove_floor variable_3 \n                    | empty\n    \n    variable_3 : L_S_BRACKET add_floor exp R_S_BRACKET remove_floor\n                    | empty\n    \n    estatuto : asigna\n                | llamada\n                | llamada_void\n                | read\n                | write\n                | if_1\n                | for_l\n                | while_l\n                | return\n                | func_extra\n    \n    asigna : variable EQUAL add_operator exp asigna_point SEMICOLON\n    \n    asigna_point : empty\n    \n    llamada : ID verify_func not_void LPAR add_floor llamada_2 llamada_3 RPAR remove_floor SEMICOLON gosub add_temp\n    \n    llamada_2 : exp verify_parameter\n                | empty\n    \n    llamada_3 : COMMA exp verify_parameter llamada_3\n                | empty\n    \n    llamada_void : ID verify_func LPAR add_floor llamada_void_2 llamada_void_3 RPAR remove_floor SEMICOLON gosub \n    \n    llamada_void_2 : exp verify_parameter\n                | empty\n    \n    llamada_void_3 : COMMA exp verify_parameter llamada_void_3\n                | empty\n    \n    not_void : empty\n    \n    verify_func : empty\n    \n    verify_parameter : empty\n    \n    gosub : empty\n    \n    add_temp : empty\n    \n    read : READ LPAR variable read_point RPAR SEMICOLON\n    \n    read_point : empty\n    \n    write : WRITE LPAR write_2 write_3 RPAR SEMICOLON\n    \n    write_2 : exp write_point\n                | CTE_S add_constant_s write_point\n    \n    write_3 : COMMA write_2 write_3 \n                | empty\n    \n    write_point : empty\n    \n    if_1 : IF LPAR exp if_point RPAR L_C_BRACKET estatuto if_2 R_C_BRACKET if_3 SEMICOLON if_point_2\n    \n    if_2 :  estatuto if_2 \n            | empty\n    \n    if_3 : ELSE if_point_3 L_C_BRACKET estatuto if_2 R_C_BRACKET\n            | empty\n    \n    if_point : empty\n    \n    if_point_2 : empty\n    \n    if_point_3 : empty\n    \n    for_l : FOR LPAR ID for_point_1 EQUAL exp for_point_2 TO exp for_point_3 RPAR L_C_BRACKET estatuto for_l_2 R_C_BRACKET SEMICOLON for_point_4\n    \n    for_l_2 : estatuto for_l_2\n                | empty\n    \n    for_point_1 : empty\n    \n    for_point_2 : empty\n    \n    for_point_3 : empty\n    \n    for_point_4 : empty\n    \n    while_l : WHILE while_point LPAR exp RPAR while_point_2 L_C_BRACKET estatuto while_l_2 R_C_BRACKET SEMICOLON while_point_3\n    \n    while_l_2 : estatuto while_l_2\n                    | empty\n    \n    while_point : empty\n    \n    while_point_2 : empty\n    \n    while_point_3 : empty\n    \n    return : RETURN LPAR exp check_valid_func RPAR SEMICOLON\n    \n    check_valid_func : empty\n    \n    func_extra : empty\n    \n    exp : t_exp add_operator_4 exp_2 \n    \n    exp_2 : OR add_operator exp \n            | empty\n    \n    t_exp : g_exp add_operator_4 t_exp_2 \n    \n    t_exp_2 : AND add_operator t_exp \n                | empty\n    \n    g_exp : m_exp g_exp_2 add_operator_3\n    \n    g_exp_2 : LESS_EQUAL add_operator m_exp \n                | LESS add_operator m_exp \n                | GREATER_EQUAL add_operator m_exp \n                | GREATER add_operator m_exp \n                | COMPARE add_operator m_exp \n                | NOT_EQUAL add_operator m_exp \n                | empty\n    \n    m_exp : t add_operator_2 m_exp_2\n    \n    m_exp_2 : PLUS add_operator m_exp \n                | MINUS add_operator m_exp\n                | empty\n    \n    t : f add_operator_1 t_2\n    \n    t_2 : TIMES add_operator t \n            | DIVIDE add_operator t\n            | empty\n    \n    f : LPAR add_floor exp RPAR remove_floor\n            | variable\n            | llamada\n            | f_2\n    \n    f_2 : CTE_I add_constant_i\n            | CTE_F add_constant_f\n    \n    add_floor : empty\n    \n    remove_floor : empty\n    \n    add_operator : empty \n    \n    add_operator_1 : empty \n    \n    add_operator_2 : empty \n    \n    add_operator_3 : empty \n    \n    add_operator_4 : empty \n    \n    add_constant_i : empty\n    \n    add_constant_s : empty\n    \n    add_constant_f : empty\n    \n    function : FUNC function_2 SEMICOLON function_4\n    \n    function_2 : function_3 ID function_punto1 LPAR param punto_param_2 RPAR L_C_BRACKET body R_C_BRACKET final_func_point\n    \n    function_3 : tipo_simple\n                    | VOID\n    \n    function_4 : function\n                    | empty\n    \n    function_punto1 : empty\n    \n    func_agrega_v : empty\n    \n    final_func_point : empty\n    \n    empty : \n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,79,104,105,],[0,-1,-157,-10,-12,]),'ID':([2,3,4,17,18,19,20,21,22,29,39,40,41,42,43,44,46,56,64,65,66,70,71,73,80,81,82,83,84,85,86,87,88,89,90,99,106,108,109,113,114,115,116,117,120,126,127,129,133,134,137,154,156,163,164,169,171,181,182,183,184,185,186,209,220,223,227,228,229,230,231,232,234,235,238,239,242,246,251,257,259,261,262,269,270,271,272,273,277,281,286,296,299,304,305,307,308,309,312,318,320,321,323,324,333,335,339,340,341,342,343,344,345,346,347,348,349,351,353,357,358,359,],[-157,5,-2,31,34,-21,-18,-19,-20,-157,53,-150,-151,-22,-37,-38,31,-157,-157,-14,-15,92,-155,102,92,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-109,92,-109,-157,-157,136,149,149,153,149,149,-140,-157,149,-138,-157,149,-157,-157,149,149,149,-157,-157,-157,-157,-157,-157,149,-157,-157,149,149,149,149,149,149,-157,-157,-157,-157,149,-61,149,-78,-80,149,149,149,149,149,149,92,-107,149,-157,92,92,149,92,-109,149,92,-157,92,-109,-157,-68,-76,-157,-157,-157,-63,-77,-86,-92,92,92,-101,-106,92,92,92,-109,-157,-94,-100,]),'COLON':([5,],[6,]),'VAR':([6,29,56,156,],[11,11,11,11,]),'FUNC':([6,8,9,10,14,15,29,42,43,44,52,],[-157,-157,-6,-7,28,-4,-157,-22,-37,-38,28,]),'MAIN':([6,7,8,9,10,14,15,25,26,27,29,36,37,42,43,44,52,57,58,59,],[-157,13,-157,-6,-7,-157,-4,-157,-8,-9,-157,-3,-5,-22,-37,-38,-157,-148,-152,-153,]),'DATAFRAME':([11,],[19,]),'INT':([11,28,67,158,],[20,20,20,20,]),'FLOAT':([11,28,67,158,],[21,21,21,21,]),'CHAR':([11,28,67,158,],[22,22,22,22,]),'LPAR':([13,23,24,53,60,61,92,93,94,95,96,97,98,109,110,112,113,115,116,118,119,120,126,127,128,129,130,133,134,137,149,154,163,164,169,171,181,182,183,184,185,186,192,193,209,220,223,227,228,229,230,231,232,234,235,238,239,242,251,261,262,269,270,271,272,281,286,304,308,],[-157,35,-11,-157,67,-154,-157,114,115,116,117,-157,120,-157,129,-74,-157,137,137,154,-104,137,137,-140,163,-157,-73,137,-138,-157,-157,137,-157,137,137,137,-157,-157,-157,-157,-157,-157,-157,-74,137,-157,-157,137,137,137,137,137,137,-157,-157,-157,-157,137,137,137,137,137,137,137,137,137,-157,137,137,]),'SEMICOLON':([16,30,31,32,33,34,38,45,47,48,50,54,68,69,76,77,78,111,124,131,132,141,142,143,144,145,146,147,148,149,150,151,160,161,162,177,178,179,180,187,188,189,190,191,193,194,195,196,197,207,208,213,214,216,219,221,222,224,225,226,233,236,237,240,244,245,255,256,258,263,264,265,266,267,268,278,279,284,287,288,289,290,291,292,293,294,295,300,302,310,316,321,324,325,326,328,332,333,334,340,341,354,356,],[29,-23,-157,-24,-26,-157,52,-25,-29,-27,-29,-28,-157,79,-30,-34,-35,-157,-157,-45,-46,-157,-157,-157,-157,-157,-133,-134,-135,-157,-157,-157,-33,-36,-157,-157,-144,-157,-157,-123,-157,-142,-157,-141,-48,-136,-145,-137,-147,246,-62,-157,257,259,-110,-112,-113,-115,-116,-143,-124,-127,-128,-131,277,-157,-157,-139,-157,-117,-118,-119,-120,-121,-122,-149,-156,-157,-47,-50,-132,-111,-114,-125,-126,-129,-130,-157,312,321,-157,-157,-76,-157,335,-90,339,-157,-49,-63,-77,-89,357,]),'VOID':([28,],[41,]),'READ':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,99,106,108,156,246,257,259,273,277,296,299,305,307,309,312,318,320,321,323,324,333,335,339,340,341,342,343,344,345,346,347,348,349,351,353,357,358,359,],[-157,-22,-37,-38,-157,-157,-14,-15,93,-155,93,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-109,93,-109,-157,-61,-78,-80,93,-107,93,93,93,-109,93,-157,93,-109,-157,-68,-76,-157,-157,-157,-63,-77,-86,-92,93,93,-101,-106,93,93,93,-109,-157,-94,-100,]),'WRITE':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,99,106,108,156,246,257,259,273,277,296,299,305,307,309,312,318,320,321,323,324,333,335,339,340,341,342,343,344,345,346,347,348,349,351,353,357,358,359,],[-157,-22,-37,-38,-157,-157,-14,-15,94,-155,94,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-109,94,-109,-157,-61,-78,-80,94,-107,94,94,94,-109,94,-157,94,-109,-157,-68,-76,-157,-157,-157,-63,-77,-86,-92,94,94,-101,-106,94,94,94,-109,-157,-94,-100,]),'IF':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,99,106,108,156,246,257,259,273,277,296,299,305,307,309,312,318,320,321,323,324,333,335,339,340,341,342,343,344,345,346,347,348,349,351,353,357,358,359,],[-157,-22,-37,-38,-157,-157,-14,-15,95,-155,95,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-109,95,-109,-157,-61,-78,-80,95,-107,95,95,95,-109,95,-157,95,-109,-157,-68,-76,-157,-157,-157,-63,-77,-86,-92,95,95,-101,-106,95,95,95,-109,-157,-94,-100,]),'FOR':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,99,106,108,156,246,257,259,273,277,296,299,305,307,309,312,318,320,321,323,324,333,335,339,340,341,342,343,344,345,346,347,348,349,351,353,357,358,359,],[-157,-22,-37,-38,-157,-157,-14,-15,96,-155,96,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-109,96,-109,-157,-61,-78,-80,96,-107,96,96,96,-109,96,-157,96,-109,-157,-68,-76,-157,-157,-157,-63,-77,-86,-92,96,96,-101,-106,96,96,96,-109,-157,-94,-100,]),'WHILE':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,99,106,108,156,246,257,259,273,277,296,299,305,307,309,312,318,320,321,323,324,333,335,339,340,341,342,343,344,345,346,347,348,349,351,353,357,358,359,],[-157,-22,-37,-38,-157,-157,-14,-15,97,-155,97,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-109,97,-109,-157,-61,-78,-80,97,-107,97,97,97,-109,97,-157,97,-109,-157,-68,-76,-157,-157,-157,-63,-77,-86,-92,97,97,-101,-106,97,97,97,-109,-157,-94,-100,]),'RETURN':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,99,106,108,156,246,257,259,273,277,296,299,305,307,309,312,318,320,321,323,324,333,335,339,340,341,342,343,344,345,346,347,348,349,351,353,357,358,359,],[-157,-22,-37,-38,-157,-157,-14,-15,98,-155,98,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-109,98,-109,-157,-61,-78,-80,98,-107,98,98,98,-109,98,-157,98,-109,-157,-68,-76,-157,-157,-157,-63,-77,-86,-92,98,98,-101,-106,98,98,98,-109,-157,-94,-100,]),'R_C_BRACKET':([29,42,43,44,56,63,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,99,106,107,108,125,156,205,246,257,259,273,277,296,299,305,306,307,309,312,315,318,319,320,321,323,324,331,333,335,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,357,358,359,],[-157,-22,-37,-38,-157,69,-157,-14,-15,-157,-155,-157,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-109,-157,-13,-17,-16,-157,245,-61,-78,-80,-157,-107,-157,-157,-157,316,-88,-157,-157,-87,-157,332,-103,-157,-68,-76,-102,-157,-157,-157,-63,-77,-86,-92,-157,-157,-101,-106,-157,-157,354,-157,356,-96,-95,-157,-94,-100,]),'COMMA':([31,34,102,111,122,123,129,131,132,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,163,164,173,174,175,176,177,178,179,180,187,188,189,190,191,193,194,195,196,197,209,210,211,212,213,217,218,219,221,222,224,225,226,233,236,237,240,247,248,249,253,254,255,256,258,263,264,265,266,267,268,283,285,287,288,289,290,291,292,293,294,295,301,303,311,321,324,325,333,334,340,341,],[46,46,-157,-157,158,-43,-157,-45,-46,-138,171,-157,-157,-157,-157,-157,-157,-157,-133,-134,-135,-157,-157,-157,-157,-157,-81,-85,-157,-146,-157,-144,-157,-157,-123,-157,-142,-157,-141,-48,-136,-145,-137,-147,-157,251,-157,-70,-157,171,-82,-110,-112,-113,-115,-116,-143,-124,-127,-128,-131,281,-157,-65,-69,-75,-157,-139,-157,-117,-118,-119,-120,-121,-122,-64,-157,-47,-50,-132,-111,-114,-125,-126,-129,-130,-157,251,281,-157,-76,-157,-157,-49,-63,-77,]),'L_S_BRACKET':([34,49,50,68,92,136,149,213,255,256,],[-157,55,-32,75,113,113,113,-157,286,-139,]),'RPAR':([35,67,72,74,100,101,102,111,122,123,129,131,132,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,158,159,163,164,166,167,168,170,172,173,174,175,176,177,178,179,180,187,188,189,190,191,193,194,195,196,197,198,199,202,203,204,206,209,210,211,212,213,215,217,218,219,221,222,224,225,226,233,236,237,240,247,248,249,250,252,253,254,255,256,258,260,263,264,265,266,267,268,280,282,283,285,287,288,289,290,291,292,293,294,295,301,303,311,313,317,321,322,324,325,329,330,333,334,340,341,],[51,-157,-157,-40,121,-44,-157,-157,-157,-43,-157,-45,-46,-138,-157,-157,-157,-157,-157,-157,-157,-157,-157,-157,-133,-134,-135,-157,-157,-157,-157,-157,-39,-157,-42,-157,-157,214,-79,-48,216,-84,-81,-85,-157,-146,-157,-144,-157,-157,-123,-157,-142,-157,-141,-48,-136,-145,-137,-147,241,-91,243,244,-108,-41,-157,-157,-157,-70,-157,258,-157,-82,-110,-112,-113,-115,-116,-143,-124,-127,-128,-131,-157,-157,-65,284,-72,-69,-75,-157,-139,-157,-83,-117,-118,-119,-120,-121,-122,300,-67,-64,-157,-47,-50,-132,-111,-114,-125,-126,-129,-130,-157,-157,-157,-71,-157,-157,-66,-76,-157,338,-99,-157,-49,-63,-77,]),'L_C_BRACKET':([51,121,241,243,275,276,327,336,337,338,],[56,156,273,-157,299,-105,-157,344,-93,345,]),'CTE_I':([55,75,109,113,115,116,120,126,127,129,133,134,137,154,163,164,169,171,181,182,183,184,185,186,209,220,223,227,228,229,230,231,232,234,235,238,239,242,251,261,262,269,270,271,272,281,286,304,308,],[62,103,-157,-157,150,150,150,150,-140,-157,150,-138,-157,150,-157,150,150,150,-157,-157,-157,-157,-157,-157,150,-157,-157,150,150,150,150,150,150,-157,-157,-157,-157,150,150,150,150,150,150,150,150,150,-157,150,150,]),'R_S_BRACKET':([62,103,111,131,132,141,142,143,144,145,146,147,148,149,150,151,165,177,178,179,180,187,188,189,190,191,193,194,195,196,197,213,219,221,222,224,225,226,233,236,237,240,255,256,258,263,264,265,266,267,268,287,288,289,290,291,292,293,294,295,314,321,324,325,333,334,340,341,],[68,124,-157,-45,-46,-157,-157,-157,-157,-157,-133,-134,-135,-157,-157,-157,213,-157,-144,-157,-157,-123,-157,-142,-157,-141,-48,-136,-145,-137,-147,-157,-110,-112,-113,-115,-116,-143,-124,-127,-128,-131,-157,-139,-157,-117,-118,-119,-120,-121,-122,-47,-50,-132,-111,-114,-125,-126,-129,-130,325,-157,-76,-157,-157,-49,-63,-77,]),'EQUAL':([91,92,111,112,131,132,153,200,201,213,255,256,287,288,325,334,],[109,-157,-157,-48,-45,-46,-157,242,-97,-157,-157,-139,-47,-50,-157,-49,]),'CTE_F':([109,113,115,116,120,126,127,129,133,134,137,154,163,164,169,171,181,182,183,184,185,186,209,220,223,227,228,229,230,231,232,234,235,238,239,242,251,261,262,269,270,271,272,281,286,304,308,],[-157,-157,151,151,151,151,-140,-157,151,-138,-157,151,-157,151,151,151,-157,-157,-157,-157,-157,-157,151,-157,-157,151,151,151,151,151,151,-157,-157,-157,-157,151,151,151,151,151,151,151,151,151,-157,151,151,]),'TIMES':([111,131,132,145,146,147,148,149,150,151,190,191,193,194,195,196,197,213,255,256,258,287,288,289,321,324,325,333,334,340,341,],[-157,-45,-46,-157,-133,-134,-135,-157,-157,-157,238,-141,-48,-136,-145,-137,-147,-157,-157,-139,-157,-47,-50,-132,-157,-76,-157,-157,-49,-63,-77,]),'DIVIDE':([111,131,132,145,146,147,148,149,150,151,190,191,193,194,195,196,197,213,255,256,258,287,288,289,321,324,325,333,334,340,341,],[-157,-45,-46,-157,-133,-134,-135,-157,-157,-157,239,-141,-48,-136,-145,-137,-147,-157,-157,-139,-157,-47,-50,-132,-157,-76,-157,-157,-49,-63,-77,]),'PLUS':([111,131,132,144,145,146,147,148,149,150,151,188,189,190,191,193,194,195,196,197,213,237,240,255,256,258,287,288,289,294,295,321,324,325,333,334,340,341,],[-157,-45,-46,-157,-157,-133,-134,-135,-157,-157,-157,234,-142,-157,-141,-48,-136,-145,-137,-147,-157,-128,-131,-157,-139,-157,-47,-50,-132,-129,-130,-157,-76,-157,-157,-49,-63,-77,]),'MINUS':([111,131,132,144,145,146,147,148,149,150,151,188,189,190,191,193,194,195,196,197,213,237,240,255,256,258,287,288,289,294,295,321,324,325,333,334,340,341,],[-157,-45,-46,-157,-157,-133,-134,-135,-157,-157,-157,235,-142,-157,-141,-48,-136,-145,-137,-147,-157,-128,-131,-157,-139,-157,-47,-50,-132,-129,-130,-157,-76,-157,-157,-49,-63,-77,]),'LESS_EQUAL':([111,131,132,143,144,145,146,147,148,149,150,151,188,189,190,191,193,194,195,196,197,213,233,236,237,240,255,256,258,287,288,289,292,293,294,295,321,324,325,333,334,340,341,],[-157,-45,-46,181,-157,-157,-133,-134,-135,-157,-157,-157,-157,-142,-157,-141,-48,-136,-145,-137,-147,-157,-124,-127,-128,-131,-157,-139,-157,-47,-50,-132,-125,-126,-129,-130,-157,-76,-157,-157,-49,-63,-77,]),'LESS':([111,131,132,143,144,145,146,147,148,149,150,151,188,189,190,191,193,194,195,196,197,213,233,236,237,240,255,256,258,287,288,289,292,293,294,295,321,324,325,333,334,340,341,],[-157,-45,-46,182,-157,-157,-133,-134,-135,-157,-157,-157,-157,-142,-157,-141,-48,-136,-145,-137,-147,-157,-124,-127,-128,-131,-157,-139,-157,-47,-50,-132,-125,-126,-129,-130,-157,-76,-157,-157,-49,-63,-77,]),'GREATER_EQUAL':([111,131,132,143,144,145,146,147,148,149,150,151,188,189,190,191,193,194,195,196,197,213,233,236,237,240,255,256,258,287,288,289,292,293,294,295,321,324,325,333,334,340,341,],[-157,-45,-46,183,-157,-157,-133,-134,-135,-157,-157,-157,-157,-142,-157,-141,-48,-136,-145,-137,-147,-157,-124,-127,-128,-131,-157,-139,-157,-47,-50,-132,-125,-126,-129,-130,-157,-76,-157,-157,-49,-63,-77,]),'GREATER':([111,131,132,143,144,145,146,147,148,149,150,151,188,189,190,191,193,194,195,196,197,213,233,236,237,240,255,256,258,287,288,289,292,293,294,295,321,324,325,333,334,340,341,],[-157,-45,-46,184,-157,-157,-133,-134,-135,-157,-157,-157,-157,-142,-157,-141,-48,-136,-145,-137,-147,-157,-124,-127,-128,-131,-157,-139,-157,-47,-50,-132,-125,-126,-129,-130,-157,-76,-157,-157,-49,-63,-77,]),'COMPARE':([111,131,132,143,144,145,146,147,148,149,150,151,188,189,190,191,193,194,195,196,197,213,233,236,237,240,255,256,258,287,288,289,292,293,294,295,321,324,325,333,334,340,341,],[-157,-45,-46,185,-157,-157,-133,-134,-135,-157,-157,-157,-157,-142,-157,-141,-48,-136,-145,-137,-147,-157,-124,-127,-128,-131,-157,-139,-157,-47,-50,-132,-125,-126,-129,-130,-157,-76,-157,-157,-49,-63,-77,]),'NOT_EQUAL':([111,131,132,143,144,145,146,147,148,149,150,151,188,189,190,191,193,194,195,196,197,213,233,236,237,240,255,256,258,287,288,289,292,293,294,295,321,324,325,333,334,340,341,],[-157,-45,-46,186,-157,-157,-133,-134,-135,-157,-157,-157,-157,-142,-157,-141,-48,-136,-145,-137,-147,-157,-124,-127,-128,-131,-157,-139,-157,-47,-50,-132,-125,-126,-129,-130,-157,-76,-157,-157,-49,-63,-77,]),'AND':([111,131,132,142,143,144,145,146,147,148,149,150,151,178,179,180,187,188,189,190,191,193,194,195,196,197,213,225,226,233,236,237,240,255,256,258,263,264,265,266,267,268,287,288,289,292,293,294,295,321,324,325,333,334,340,341,],[-157,-45,-46,-157,-157,-157,-157,-133,-134,-135,-157,-157,-157,-144,223,-157,-123,-157,-142,-157,-141,-48,-136,-145,-137,-147,-157,-116,-143,-124,-127,-128,-131,-157,-139,-157,-117,-118,-119,-120,-121,-122,-47,-50,-132,-125,-126,-129,-130,-157,-76,-157,-157,-49,-63,-77,]),'OR':([111,131,132,141,142,143,144,145,146,147,148,149,150,151,177,178,179,180,187,188,189,190,191,193,194,195,196,197,213,222,224,225,226,233,236,237,240,255,256,258,263,264,265,266,267,268,287,288,289,291,292,293,294,295,321,324,325,333,334,340,341,],[-157,-45,-46,-157,-157,-157,-157,-157,-133,-134,-135,-157,-157,-157,220,-144,-157,-157,-123,-157,-142,-157,-141,-48,-136,-145,-137,-147,-157,-113,-115,-116,-143,-124,-127,-128,-131,-157,-139,-157,-117,-118,-119,-120,-121,-122,-47,-50,-132,-114,-125,-126,-129,-130,-157,-76,-157,-157,-49,-63,-77,]),'TO':([111,131,132,141,142,143,144,145,146,147,148,149,150,151,177,178,179,180,187,188,189,190,191,193,194,195,196,197,213,219,221,222,224,225,226,233,236,237,240,255,256,258,263,264,265,266,267,268,274,287,288,289,290,291,292,293,294,295,297,298,321,324,325,333,334,340,341,],[-157,-45,-46,-157,-157,-157,-157,-157,-133,-134,-135,-157,-157,-157,-157,-144,-157,-157,-123,-157,-142,-157,-141,-48,-136,-145,-137,-147,-157,-110,-112,-113,-115,-116,-143,-124,-127,-128,-131,-157,-139,-157,-117,-118,-119,-120,-121,-122,-157,-47,-50,-132,-111,-114,-125,-126,-129,-130,308,-98,-157,-76,-157,-157,-49,-63,-77,]),'CTE_S':([115,171,],[140,140,]),'ELSE':([316,],[327,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_point':([2,],[3,]),'empty':([2,6,8,13,14,25,29,31,34,52,53,56,64,67,68,70,72,79,80,92,97,102,106,109,110,111,113,122,124,129,135,136,137,138,139,140,141,142,143,144,145,149,150,151,152,153,155,156,158,162,163,164,175,177,179,180,181,182,183,184,185,186,188,190,192,209,210,211,213,217,220,223,234,235,238,239,243,245,247,248,255,258,273,274,284,285,286,296,299,300,301,303,305,309,311,312,316,317,318,321,325,327,333,335,339,344,345,348,349,351,357,],[4,10,15,24,27,37,44,47,50,59,61,66,71,74,78,99,101,105,108,112,119,123,108,127,130,132,134,159,161,134,167,168,134,172,174,176,178,178,187,189,191,193,195,197,199,201,204,66,74,208,134,212,174,221,224,226,127,127,127,127,127,127,236,240,130,249,252,254,256,172,127,127,127,127,127,127,276,279,282,254,288,256,99,298,256,254,134,307,99,256,254,252,307,320,282,324,328,330,320,324,256,337,341,343,347,99,99,307,353,353,359,]),'modules':([6,],[7,]),'modules_2':([6,],[8,]),'vars':([6,29,56,156,],[9,43,65,65,]),'main':([7,],[12,]),'modules_point':([8,],[14,]),'vars_2':([11,],[16,]),'tipo_comp':([11,],[17,]),'tipo_simple':([11,28,67,158,],[18,40,73,73,]),'main_point':([13,],[23,]),'modules_3':([14,],[25,]),'function':([14,52,],[26,58,]),'vars_3':([17,18,46,],[30,33,54,]),'vars_4':([18,],[32,]),'count_global_vars':([25,],[36,]),'function_2':([28,],[38,]),'function_3':([28,],[39,]),'vars_8':([29,],[42,]),'vars_5':([31,34,],[45,45,]),'vars_6':([34,],[48,]),'punto_id_especial':([34,],[49,]),'function_4':([52,],[57,]),'function_punto1':([53,],[60,]),'body':([56,156,],[63,205,]),'body_2':([56,156,],[64,64,]),'func_agrega_v':([64,],[70,]),'param':([67,158,],[72,206,]),'vars_7':([68,],[76,]),'var_array':([68,],[77,]),'estatuto':([70,80,106,273,296,299,305,309,318,344,345,348,349,351,],[80,106,106,296,305,309,305,318,318,348,349,305,351,351,]),'asigna':([70,80,106,273,296,299,305,309,318,344,345,348,349,351,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'llamada':([70,80,106,115,116,120,126,133,154,164,169,171,209,227,228,229,230,231,232,242,251,261,262,269,270,271,272,273,281,296,299,304,305,308,309,318,344,345,348,349,351,],[82,82,82,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,82,147,82,82,147,82,147,82,82,82,82,82,82,82,]),'llamada_void':([70,80,106,273,296,299,305,309,318,344,345,348,349,351,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'read':([70,80,106,273,296,299,305,309,318,344,345,348,349,351,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'write':([70,80,106,273,296,299,305,309,318,344,345,348,349,351,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'if_1':([70,80,106,273,296,299,305,309,318,344,345,348,349,351,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'for_l':([70,80,106,273,296,299,305,309,318,344,345,348,349,351,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'while_l':([70,80,106,273,296,299,305,309,318,344,345,348,349,351,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'return':([70,80,106,273,296,299,305,309,318,344,345,348,349,351,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'func_extra':([70,80,106,273,296,299,305,309,318,344,345,348,349,351,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'variable':([70,80,106,114,115,116,120,126,133,154,164,169,171,209,227,228,229,230,231,232,242,251,261,262,269,270,271,272,273,281,296,299,304,305,308,309,318,344,345,348,349,351,],[91,91,91,135,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,91,146,91,91,146,91,146,91,91,91,91,91,91,91,]),'punto_param_2':([72,],[100,]),'main_final':([79,],[104,]),'body_3':([80,106,],[107,125,]),'verify_func':([92,149,],[110,192,]),'variable_2':([92,136,149,],[111,111,111,]),'while_point':([97,],[118,]),'punto_param':([102,],[122,]),'add_operator':([109,181,182,183,184,185,186,220,223,234,235,238,239,],[126,227,228,229,230,231,232,261,262,269,270,271,272,]),'not_void':([110,192,],[128,128,]),'variable_point':([111,],[131,]),'add_floor':([113,129,137,163,286,],[133,164,169,209,304,]),'write_2':([115,171,],[138,217,]),'exp':([115,116,120,126,133,154,164,169,171,209,242,251,261,281,304,308,],[139,152,155,162,165,202,211,215,139,248,274,285,290,301,314,317,]),'t_exp':([115,116,120,126,133,154,164,169,171,209,242,251,261,262,281,304,308,],[141,141,141,141,141,141,141,141,141,141,141,141,141,291,141,141,141,]),'g_exp':([115,116,120,126,133,154,164,169,171,209,242,251,261,262,281,304,308,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'m_exp':([115,116,120,126,133,154,164,169,171,209,227,228,229,230,231,232,242,251,261,262,269,270,281,304,308,],[143,143,143,143,143,143,143,143,143,143,263,264,265,266,267,268,143,143,143,143,292,293,143,143,143,]),'t':([115,116,120,126,133,154,164,169,171,209,227,228,229,230,231,232,242,251,261,262,269,270,271,272,281,304,308,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,294,295,144,144,144,]),'f':([115,116,120,126,133,154,164,169,171,209,227,228,229,230,231,232,242,251,261,262,269,270,271,272,281,304,308,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'f_2':([115,116,120,126,133,154,164,169,171,209,227,228,229,230,231,232,242,251,261,262,269,270,271,272,281,304,308,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'param_2':([122,],[157,]),'var_mat':([124,],[160,]),'read_point':([135,],[166,]),'write_3':([138,217,],[170,260,]),'write_point':([139,175,],[173,218,]),'add_constant_s':([140,],[175,]),'add_operator_4':([141,142,],[177,179,]),'g_exp_2':([143,],[180,]),'add_operator_2':([144,],[188,]),'add_operator_1':([145,],[190,]),'add_constant_i':([150,],[194,]),'add_constant_f':([151,],[196,]),'if_point':([152,],[198,]),'for_point_1':([153,],[200,]),'check_valid_func':([155,],[203,]),'asigna_point':([162,],[207,]),'llamada_void_2':([164,],[210,]),'exp_2':([177,],[219,]),'t_exp_2':([179,],[222,]),'add_operator_3':([180,],[225,]),'m_exp_2':([188,],[233,]),'t_2':([190,],[237,]),'llamada_2':([209,],[247,]),'llamada_void_3':([210,303,],[250,313,]),'verify_parameter':([211,248,285,301,],[253,283,303,311,]),'remove_floor':([213,258,284,300,325,],[255,289,302,310,334,]),'while_point_2':([243,],[275,]),'final_func_point':([245,],[278,]),'llamada_3':([247,311,],[280,322,]),'variable_3':([255,],[287,]),'for_point_2':([274,],[297,]),'if_2':([296,305,348,],[306,315,350,]),'while_l_2':([309,318,],[319,331,]),'gosub':([312,321,],[323,333,]),'if_3':([316,],[326,]),'for_point_3':([317,],[329,]),'if_point_3':([327,],[336,]),'add_temp':([333,],[340,]),'if_point_2':([335,],[342,]),'while_point_3':([339,],[346,]),'for_l_2':([349,351,],[352,355,]),'for_point_4':([357,],[358,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM program_point ID COLON modules main','program',6,'p_program','parser_1.py',61),
  ('program_point -> empty','program_point',1,'p_program_point','parser_1.py',66),
  ('modules -> modules_2 modules_point modules_3 count_global_vars','modules',4,'p_modules','parser_1.py',75),
  ('modules_point -> empty','modules_point',1,'p_modules_point','parser_1.py',80),
  ('count_global_vars -> empty','count_global_vars',1,'p_count_global_vars','parser_1.py',93),
  ('modules_2 -> vars','modules_2',1,'p_modules_2','parser_1.py',114),
  ('modules_2 -> empty','modules_2',1,'p_modules_2','parser_1.py',115),
  ('modules_3 -> function','modules_3',1,'p_modules_3','parser_1.py',120),
  ('modules_3 -> empty','modules_3',1,'p_modules_3','parser_1.py',121),
  ('main -> MAIN main_point LPAR RPAR L_C_BRACKET body R_C_BRACKET SEMICOLON main_final','main',9,'p_main','parser_1.py',126),
  ('main_point -> empty','main_point',1,'p_main_point','parser_1.py',131),
  ('main_final -> empty','main_final',1,'p_main_final','parser_1.py',143),
  ('body -> body_2 func_agrega_v estatuto body_3','body',4,'p_body','parser_1.py',162),
  ('body_2 -> vars','body_2',1,'p_body_2','parser_1.py',167),
  ('body_2 -> empty','body_2',1,'p_body_2','parser_1.py',168),
  ('body_3 -> estatuto body_3','body_3',2,'p_body_3','parser_1.py',173),
  ('body_3 -> empty','body_3',1,'p_body_3','parser_1.py',174),
  ('tipo_simple -> INT','tipo_simple',1,'p_tipo_simple','parser_1.py',179),
  ('tipo_simple -> FLOAT','tipo_simple',1,'p_tipo_simple','parser_1.py',180),
  ('tipo_simple -> CHAR','tipo_simple',1,'p_tipo_simple','parser_1.py',181),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','parser_1.py',188),
  ('vars -> VAR vars_2 SEMICOLON vars_8','vars',4,'p_vars','parser_1.py',195),
  ('vars_2 -> tipo_comp vars_3','vars_2',2,'p_vars_2','parser_1.py',201),
  ('vars_2 -> tipo_simple vars_4','vars_2',2,'p_vars_2','parser_1.py',202),
  ('vars_3 -> ID vars_5','vars_3',2,'p_vars_3','parser_1.py',207),
  ('vars_4 -> vars_3','vars_4',1,'p_vars_4','parser_1.py',222),
  ('vars_4 -> ID vars_6','vars_4',2,'p_vars_4','parser_1.py',223),
  ('vars_5 -> COMMA vars_3','vars_5',2,'p_vars_5','parser_1.py',228),
  ('vars_5 -> empty','vars_5',1,'p_vars_5','parser_1.py',229),
  ('vars_6 -> punto_id_especial L_S_BRACKET CTE_I R_S_BRACKET vars_7','vars_6',5,'p_vars_6','parser_1.py',234),
  ('vars_6 -> empty','vars_6',1,'p_vars_6','parser_1.py',235),
  ('punto_id_especial -> empty','punto_id_especial',1,'p_punto_id_especial','parser_1.py',239),
  ('vars_7 -> L_S_BRACKET CTE_I R_S_BRACKET var_mat','vars_7',4,'p_vars_7','parser_1.py',246),
  ('vars_7 -> var_array','vars_7',1,'p_vars_7','parser_1.py',247),
  ('var_array -> empty','var_array',1,'p_var_array','parser_1.py',252),
  ('var_mat -> empty','var_mat',1,'p_var_mat','parser_1.py',260),
  ('vars_8 -> vars','vars_8',1,'p_vars_8','parser_1.py',271),
  ('vars_8 -> empty','vars_8',1,'p_vars_8','parser_1.py',272),
  ('param -> tipo_simple ID punto_param param_2','param',4,'p_param','parser_1.py',277),
  ('param -> empty','param',1,'p_param','parser_1.py',278),
  ('param_2 -> COMMA param','param_2',2,'p_param_2','parser_1.py',283),
  ('param_2 -> empty','param_2',1,'p_param_2','parser_1.py',284),
  ('punto_param -> empty','punto_param',1,'p_punto_param','parser_1.py',289),
  ('punto_param_2 -> empty','punto_param_2',1,'p_punto_param_2','parser_1.py',301),
  ('variable -> ID variable_2 variable_point','variable',3,'p_variable','parser_1.py',310),
  ('variable_point -> empty','variable_point',1,'p_variable_point','parser_1.py',315),
  ('variable_2 -> L_S_BRACKET add_floor exp R_S_BRACKET remove_floor variable_3','variable_2',6,'p_variable_2','parser_1.py',379),
  ('variable_2 -> empty','variable_2',1,'p_variable_2','parser_1.py',380),
  ('variable_3 -> L_S_BRACKET add_floor exp R_S_BRACKET remove_floor','variable_3',5,'p_variable_3','parser_1.py',385),
  ('variable_3 -> empty','variable_3',1,'p_variable_3','parser_1.py',386),
  ('estatuto -> asigna','estatuto',1,'p_estatuto','parser_1.py',391),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','parser_1.py',392),
  ('estatuto -> llamada_void','estatuto',1,'p_estatuto','parser_1.py',393),
  ('estatuto -> read','estatuto',1,'p_estatuto','parser_1.py',394),
  ('estatuto -> write','estatuto',1,'p_estatuto','parser_1.py',395),
  ('estatuto -> if_1','estatuto',1,'p_estatuto','parser_1.py',396),
  ('estatuto -> for_l','estatuto',1,'p_estatuto','parser_1.py',397),
  ('estatuto -> while_l','estatuto',1,'p_estatuto','parser_1.py',398),
  ('estatuto -> return','estatuto',1,'p_estatuto','parser_1.py',399),
  ('estatuto -> func_extra','estatuto',1,'p_estatuto','parser_1.py',400),
  ('asigna -> variable EQUAL add_operator exp asigna_point SEMICOLON','asigna',6,'p_asigna','parser_1.py',405),
  ('asigna_point -> empty','asigna_point',1,'p_asigna_point','parser_1.py',410),
  ('llamada -> ID verify_func not_void LPAR add_floor llamada_2 llamada_3 RPAR remove_floor SEMICOLON gosub add_temp','llamada',12,'p_llamada','parser_1.py',438),
  ('llamada_2 -> exp verify_parameter','llamada_2',2,'p_llamada_2','parser_1.py',443),
  ('llamada_2 -> empty','llamada_2',1,'p_llamada_2','parser_1.py',444),
  ('llamada_3 -> COMMA exp verify_parameter llamada_3','llamada_3',4,'p_llamada_3','parser_1.py',449),
  ('llamada_3 -> empty','llamada_3',1,'p_llamada_3','parser_1.py',450),
  ('llamada_void -> ID verify_func LPAR add_floor llamada_void_2 llamada_void_3 RPAR remove_floor SEMICOLON gosub','llamada_void',10,'p_llamada_void','parser_1.py',455),
  ('llamada_void_2 -> exp verify_parameter','llamada_void_2',2,'p_llamada_void_2','parser_1.py',460),
  ('llamada_void_2 -> empty','llamada_void_2',1,'p_llamada_void_2','parser_1.py',461),
  ('llamada_void_3 -> COMMA exp verify_parameter llamada_void_3','llamada_void_3',4,'p_llamada_void_3','parser_1.py',466),
  ('llamada_void_3 -> empty','llamada_void_3',1,'p_llamada_void_3','parser_1.py',467),
  ('not_void -> empty','not_void',1,'p_not_void','parser_1.py',472),
  ('verify_func -> empty','verify_func',1,'p_verify_func','parser_1.py',483),
  ('verify_parameter -> empty','verify_parameter',1,'p_verify_parameter','parser_1.py',501),
  ('gosub -> empty','gosub',1,'p_gosub','parser_1.py',526),
  ('add_temp -> empty','add_temp',1,'p_add_temp','parser_1.py',537),
  ('read -> READ LPAR variable read_point RPAR SEMICOLON','read',6,'p_read','parser_1.py',553),
  ('read_point -> empty','read_point',1,'p_read_point','parser_1.py',558),
  ('write -> WRITE LPAR write_2 write_3 RPAR SEMICOLON','write',6,'p_write','parser_1.py',569),
  ('write_2 -> exp write_point','write_2',2,'p_write_2','parser_1.py',574),
  ('write_2 -> CTE_S add_constant_s write_point','write_2',3,'p_write_2','parser_1.py',575),
  ('write_3 -> COMMA write_2 write_3','write_3',3,'p_write_3','parser_1.py',580),
  ('write_3 -> empty','write_3',1,'p_write_3','parser_1.py',581),
  ('write_point -> empty','write_point',1,'p_write_point','parser_1.py',586),
  ('if_1 -> IF LPAR exp if_point RPAR L_C_BRACKET estatuto if_2 R_C_BRACKET if_3 SEMICOLON if_point_2','if_1',12,'p_if_1','parser_1.py',599),
  ('if_2 -> estatuto if_2','if_2',2,'p_if_2','parser_1.py',604),
  ('if_2 -> empty','if_2',1,'p_if_2','parser_1.py',605),
  ('if_3 -> ELSE if_point_3 L_C_BRACKET estatuto if_2 R_C_BRACKET','if_3',6,'p_if_3','parser_1.py',610),
  ('if_3 -> empty','if_3',1,'p_if_3','parser_1.py',611),
  ('if_point -> empty','if_point',1,'p_if_point','parser_1.py',616),
  ('if_point_2 -> empty','if_point_2',1,'p_if_point_2','parser_1.py',634),
  ('if_point_3 -> empty','if_point_3',1,'p_if_point_3','parser_1.py',644),
  ('for_l -> FOR LPAR ID for_point_1 EQUAL exp for_point_2 TO exp for_point_3 RPAR L_C_BRACKET estatuto for_l_2 R_C_BRACKET SEMICOLON for_point_4','for_l',17,'p_for_l','parser_1.py',656),
  ('for_l_2 -> estatuto for_l_2','for_l_2',2,'p_for_l_2','parser_1.py',662),
  ('for_l_2 -> empty','for_l_2',1,'p_for_l_2','parser_1.py',663),
  ('for_point_1 -> empty','for_point_1',1,'p_for_point_1','parser_1.py',668),
  ('for_point_2 -> empty','for_point_2',1,'p_for_point_2','parser_1.py',684),
  ('for_point_3 -> empty','for_point_3',1,'p_for_point_3','parser_1.py',709),
  ('for_point_4 -> empty','for_point_4',1,'p_for_point_4','parser_1.py',735),
  ('while_l -> WHILE while_point LPAR exp RPAR while_point_2 L_C_BRACKET estatuto while_l_2 R_C_BRACKET SEMICOLON while_point_3','while_l',12,'p_while_l','parser_1.py',771),
  ('while_l_2 -> estatuto while_l_2','while_l_2',2,'p_while_l_2','parser_1.py',776),
  ('while_l_2 -> empty','while_l_2',1,'p_while_l_2','parser_1.py',777),
  ('while_point -> empty','while_point',1,'p_while_point','parser_1.py',782),
  ('while_point_2 -> empty','while_point_2',1,'p_while_point_2','parser_1.py',790),
  ('while_point_3 -> empty','while_point_3',1,'p_while_point_3','parser_1.py',809),
  ('return -> RETURN LPAR exp check_valid_func RPAR SEMICOLON','return',6,'p_return','parser_1.py',820),
  ('check_valid_func -> empty','check_valid_func',1,'p_check_valid_func','parser_1.py',825),
  ('func_extra -> empty','func_extra',1,'p_func_extra','parser_1.py',856),
  ('exp -> t_exp add_operator_4 exp_2','exp',3,'p_exp','parser_1.py',861),
  ('exp_2 -> OR add_operator exp','exp_2',3,'p_exp_2','parser_1.py',866),
  ('exp_2 -> empty','exp_2',1,'p_exp_2','parser_1.py',867),
  ('t_exp -> g_exp add_operator_4 t_exp_2','t_exp',3,'p_t_exp','parser_1.py',872),
  ('t_exp_2 -> AND add_operator t_exp','t_exp_2',3,'p_t_exp_2','parser_1.py',877),
  ('t_exp_2 -> empty','t_exp_2',1,'p_t_exp_2','parser_1.py',878),
  ('g_exp -> m_exp g_exp_2 add_operator_3','g_exp',3,'p_g_exp','parser_1.py',883),
  ('g_exp_2 -> LESS_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',888),
  ('g_exp_2 -> LESS add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',889),
  ('g_exp_2 -> GREATER_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',890),
  ('g_exp_2 -> GREATER add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',891),
  ('g_exp_2 -> COMPARE add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',892),
  ('g_exp_2 -> NOT_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',893),
  ('g_exp_2 -> empty','g_exp_2',1,'p_g_exp_2','parser_1.py',894),
  ('m_exp -> t add_operator_2 m_exp_2','m_exp',3,'p_m_exp','parser_1.py',899),
  ('m_exp_2 -> PLUS add_operator m_exp','m_exp_2',3,'p_m_exp_2','parser_1.py',904),
  ('m_exp_2 -> MINUS add_operator m_exp','m_exp_2',3,'p_m_exp_2','parser_1.py',905),
  ('m_exp_2 -> empty','m_exp_2',1,'p_m_exp_2','parser_1.py',906),
  ('t -> f add_operator_1 t_2','t',3,'p_t','parser_1.py',911),
  ('t_2 -> TIMES add_operator t','t_2',3,'p_t_2','parser_1.py',916),
  ('t_2 -> DIVIDE add_operator t','t_2',3,'p_t_2','parser_1.py',917),
  ('t_2 -> empty','t_2',1,'p_t_2','parser_1.py',918),
  ('f -> LPAR add_floor exp RPAR remove_floor','f',5,'p_f','parser_1.py',923),
  ('f -> variable','f',1,'p_f','parser_1.py',924),
  ('f -> llamada','f',1,'p_f','parser_1.py',925),
  ('f -> f_2','f',1,'p_f','parser_1.py',926),
  ('f_2 -> CTE_I add_constant_i','f_2',2,'p_f_2','parser_1.py',931),
  ('f_2 -> CTE_F add_constant_f','f_2',2,'p_f_2','parser_1.py',932),
  ('add_floor -> empty','add_floor',1,'p_add_floor','parser_1.py',937),
  ('remove_floor -> empty','remove_floor',1,'p_remove_floor','parser_1.py',944),
  ('add_operator -> empty','add_operator',1,'p_add_operator','parser_1.py',951),
  ('add_operator_1 -> empty','add_operator_1',1,'p_add_operator_1','parser_1.py',960),
  ('add_operator_2 -> empty','add_operator_2',1,'p_add_operator_2','parser_1.py',989),
  ('add_operator_3 -> empty','add_operator_3',1,'p_add_operator_3','parser_1.py',1018),
  ('add_operator_4 -> empty','add_operator_4',1,'p_add_operator_4','parser_1.py',1047),
  ('add_constant_i -> empty','add_constant_i',1,'p_add_constant_i','parser_1.py',1075),
  ('add_constant_s -> empty','add_constant_s',1,'p_add_constant_s','parser_1.py',1093),
  ('add_constant_f -> empty','add_constant_f',1,'p_add_constant_f','parser_1.py',1110),
  ('function -> FUNC function_2 SEMICOLON function_4','function',4,'p_function','parser_1.py',1127),
  ('function_2 -> function_3 ID function_punto1 LPAR param punto_param_2 RPAR L_C_BRACKET body R_C_BRACKET final_func_point','function_2',11,'p_function_2','parser_1.py',1132),
  ('function_3 -> tipo_simple','function_3',1,'p_function_3','parser_1.py',1137),
  ('function_3 -> VOID','function_3',1,'p_function_3','parser_1.py',1138),
  ('function_4 -> function','function_4',1,'p_function_4','parser_1.py',1146),
  ('function_4 -> empty','function_4',1,'p_function_4','parser_1.py',1147),
  ('function_punto1 -> empty','function_punto1',1,'p_function_punto1','parser_1.py',1152),
  ('func_agrega_v -> empty','func_agrega_v',1,'p_func_agrega_v','parser_1.py',1171),
  ('final_func_point -> empty','final_func_point',1,'p_final_func_point','parser_1.py',1197),
  ('empty -> <empty>','empty',0,'p_empty','parser_1.py',1221),
]
