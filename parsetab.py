
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOX_PLOT CHAR COLON COMMA COMMENT COMPARE CSV_READ CTE_F CTE_I CTE_S DATAFRAME DIVIDE ELSE EQUAL FLOAT FOR FUNC GREATER GREATER_EQUAL HISTOGRAM ID IF INT LESS LESS_EQUAL LINEAR_REG LPAR L_C_BRACKET L_S_BRACKET MAIN MEAN MEDIAN MINUS MODE NOT_EQUAL OR PLUS PROGRAM READ RETURN RPAR R_C_BRACKET R_S_BRACKET SEMICOLON STRING TIMES TO VAR VOID WHILE WRITE\n    program : PROGRAM program_point ID COLON modules main\n    \n    program_point : empty\n    \n    modules : modules_2 modules_point modules_3 count_global_vars\n    \n    modules_point : empty\n    \n    count_global_vars : empty\n    \n    modules_2 : vars\n                | empty\n    \n    modules_3 : function\n                    | empty\n    \n    main : MAIN main_point LPAR RPAR L_C_BRACKET body R_C_BRACKET SEMICOLON main_final\n    \n    main_point : empty\n    \n    main_final : empty\n    \n    body : body_2 func_agrega_v estatuto body_3\n    \n    body_2 : vars\n                | empty\n    \n    body_3 : estatuto body_3\n                | empty\n    \n    tipo_simple : INT \n                | FLOAT\n                | CHAR\n    \n    tipo_comp : DATAFRAME\n    \n    vars : VAR vars_2 SEMICOLON vars_8\n    \n    vars_2 : tipo_comp vars_3\n                        | tipo_simple vars_4\n    \n    vars_3 : ID vars_5\n    \n    vars_4 : vars_3 \n                | ID vars_6\n    \n    vars_5 : COMMA vars_3\n            | empty\n    \n    vars_6 : punto_id_especial L_S_BRACKET CTE_I R_S_BRACKET vars_7\n                | empty\n    \n    punto_id_especial : empty\n    \n    vars_7 : L_S_BRACKET CTE_I R_S_BRACKET var_mat\n                | var_array\n    \n    var_array : empty\n    \n    var_mat : empty\n    \n    vars_8 : vars \n                | empty\n    \n    param : tipo_simple ID punto_param param_2 \n                | empty\n    \n    param_2 : COMMA param\n                | empty\n    \n    punto_param : empty\n    \n    punto_param_2 : empty\n    \n    variable : ID variable_2 variable_point\n    \n    variable_point : empty\n    \n    variable_2 : L_S_BRACKET add_floor exp R_S_BRACKET remove_floor variable_3 \n                    | empty\n    \n    variable_3 : L_S_BRACKET add_floor exp R_S_BRACKET remove_floor\n                    | empty\n    \n    estatuto : asigna\n                | llamada\n                | llamada_void\n                | read\n                | write\n                | if_1\n                | for_l\n                | while_l\n                | return\n                | func_extra\n                | funciones_especiales\n    \n    asigna : variable EQUAL add_operator exp asigna_point SEMICOLON\n    \n    asigna_point : empty\n    \n    llamada : ID verify_func not_void LPAR add_floor llamada_2 llamada_3 RPAR remove_floor SEMICOLON gosub add_temp\n    \n    llamada_2 : exp verify_parameter\n                | empty\n    \n    llamada_3 : COMMA exp verify_parameter llamada_3\n                | empty\n    \n    llamada_void : ID verify_func LPAR add_floor llamada_void_2 llamada_void_3 RPAR remove_floor SEMICOLON gosub \n    \n    llamada_void_2 : exp verify_parameter\n                | empty\n    \n    llamada_void_3 : COMMA exp verify_parameter llamada_void_3\n                | empty\n    \n    not_void : empty\n    \n    verify_func : empty\n    \n    verify_parameter : empty\n    \n    gosub : empty\n    \n    add_temp : empty\n    \n    read : READ LPAR variable read_point RPAR SEMICOLON\n    \n    read_point : empty\n    \n    write : WRITE LPAR write_2 write_3 RPAR SEMICOLON\n    \n    write_2 : exp write_point\n                | CTE_S add_constant_s write_point\n    \n    write_3 : COMMA write_2 write_3 \n                | empty\n    \n    write_point : empty\n    \n    if_1 : IF LPAR exp if_point RPAR L_C_BRACKET estatuto if_2 R_C_BRACKET if_3 SEMICOLON if_point_2\n    \n    if_2 :  estatuto if_2 \n            | empty\n    \n    if_3 : ELSE if_point_3 L_C_BRACKET estatuto if_2 R_C_BRACKET\n            | empty\n    \n    if_point : empty\n    \n    if_point_2 : empty\n    \n    if_point_3 : empty\n    \n    for_l : FOR LPAR ID for_point_1 EQUAL exp for_point_2 TO exp for_point_3 RPAR L_C_BRACKET estatuto for_l_2 R_C_BRACKET SEMICOLON for_point_4\n    \n    for_l_2 : estatuto for_l_2\n                | empty\n    \n    for_point_1 : empty\n    \n    for_point_2 : empty\n    \n    for_point_3 : empty\n    \n    for_point_4 : empty\n    \n    while_l : WHILE while_point LPAR exp RPAR while_point_2 L_C_BRACKET estatuto while_l_2 R_C_BRACKET SEMICOLON while_point_3\n    \n    while_l_2 : estatuto while_l_2\n                    | empty\n    \n    while_point : empty\n    \n    while_point_2 : empty\n    \n    while_point_3 : empty\n    \n    return : RETURN LPAR exp check_valid_func RPAR SEMICOLON\n    \n    check_valid_func : empty\n    \n    func_extra : empty\n    \n    exp : t_exp add_operator_4 exp_2 \n    \n    exp_2 : OR add_operator exp \n            | empty\n    \n    t_exp : g_exp add_operator_4 t_exp_2 \n    \n    t_exp_2 : AND add_operator t_exp \n                | empty\n    \n    g_exp : m_exp g_exp_2 add_operator_3\n    \n    g_exp_2 : LESS_EQUAL add_operator m_exp \n                | LESS add_operator m_exp \n                | GREATER_EQUAL add_operator m_exp \n                | GREATER add_operator m_exp \n                | COMPARE add_operator m_exp \n                | NOT_EQUAL add_operator m_exp \n                | empty\n    \n    m_exp : t add_operator_2 m_exp_2\n    \n    m_exp_2 : PLUS add_operator m_exp \n                | MINUS add_operator m_exp\n                | empty\n    \n    t : f add_operator_1 t_2\n    \n    t_2 : TIMES add_operator t \n            | DIVIDE add_operator t\n            | empty\n    \n    f : LPAR add_floor exp RPAR remove_floor\n            | variable\n            | llamada\n            | f_2\n    \n    f_2 : CTE_I add_constant_i\n            | CTE_F add_constant_f\n    \n    add_floor : empty\n    \n    remove_floor : empty\n    \n    add_operator : empty \n    \n    add_operator_1 : empty \n    \n    add_operator_2 : empty \n    \n    add_operator_3 : empty \n    \n    add_operator_4 : empty \n    \n    add_constant_i : empty\n    \n    add_constant_s : empty\n    \n    add_constant_f : empty\n    \n    function : FUNC function_2 SEMICOLON function_4\n    \n    function_2 : function_3 ID function_punto1 LPAR param punto_param_2 RPAR L_C_BRACKET body R_C_BRACKET final_func_point\n    \n    function_3 : tipo_simple\n                    | VOID\n    \n    function_4 : function\n                    | empty\n    \n    function_punto1 : empty\n    \n    func_agrega_v : empty\n    \n    final_func_point : empty\n    \n    funciones_especiales : read_csv\n                            | mean_func\n                            | mode_func\n                            | median_func\n                            | linear_reg_func\n                            | box_plt\n                            | histogram_plt\n    \n    check_df : empty\n    \n    read_csv : variable EQUAL check_df CSV_READ LPAR CTE_S check_name add_constant_s add_quad_readCSV RPAR SEMICOLON\n    \n    add_quad_readCSV : empty\n    \n    mean_func : variable EQUAL check_df MEAN LPAR variable check_df add_quad_mean RPAR SEMICOLON\n    \n    add_quad_mean : empty\n    \n    mode_func : variable EQUAL check_df MODE LPAR variable check_df add_quad_mode RPAR SEMICOLON\n    \n    add_quad_mode : empty\n    \n    median_func : variable EQUAL check_df MEDIAN LPAR variable check_df add_quad_median RPAR SEMICOLON\n    \n    add_quad_median : empty\n    \n    linear_reg_func : LINEAR_REG LPAR variable check_df add_quad_linearR RPAR SEMICOLON\n    \n    add_quad_linearR : empty\n    \n    box_plt : BOX_PLOT LPAR variable check_df add_quad_box RPAR SEMICOLON\n    \n    add_quad_box : empty\n    \n    histogram_plt : HISTOGRAM LPAR variable check_df add_quad_hist RPAR SEMICOLON\n    \n    add_quad_hist : empty\n    \n    check_name : empty\n    \n    empty : \n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,79,115,116,],[0,-1,-181,-10,-12,]),'ID':([2,3,4,17,18,19,20,21,22,29,39,40,41,42,43,44,46,56,64,65,66,70,71,73,80,81,82,83,84,85,86,87,88,89,90,91,100,101,102,103,104,105,106,107,117,119,120,124,125,126,127,128,131,132,133,134,140,142,144,148,149,152,169,174,185,186,191,193,203,204,205,206,207,208,236,237,238,239,250,253,257,258,259,260,261,262,263,265,266,269,270,273,283,292,298,300,302,303,310,311,312,313,314,318,330,335,345,348,349,350,351,363,364,366,367,368,376,382,384,386,387,388,389,391,392,401,402,404,408,409,410,411,412,413,414,415,416,417,418,420,422,426,427,428,],[-181,5,-2,31,34,-21,-18,-19,-20,-181,53,-151,-152,-22,-37,-38,31,-181,-181,-14,-15,93,-156,113,93,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-110,-158,-159,-160,-161,-162,-163,-164,93,-110,-181,-181,151,164,164,168,164,151,151,151,164,-141,-181,164,-139,-181,164,-181,-181,164,164,164,-181,-181,-181,-181,-181,-181,151,151,151,164,-181,-181,164,-141,164,164,164,164,164,-181,-181,-181,-181,164,-62,164,-79,-81,164,164,164,164,164,164,93,-108,164,-181,93,93,-174,-176,-178,164,93,-110,164,93,-181,93,-110,-168,-170,-172,-181,-69,-77,-166,-181,-181,-181,-64,-78,-87,-93,93,93,-102,-107,93,93,93,-110,-181,-95,-101,]),'COLON':([5,],[6,]),'VAR':([6,29,56,174,],[11,11,11,11,]),'FUNC':([6,8,9,10,14,15,29,42,43,44,52,],[-181,-181,-6,-7,28,-4,-181,-22,-37,-38,28,]),'MAIN':([6,7,8,9,10,14,15,25,26,27,29,36,37,42,43,44,52,57,58,59,],[-181,13,-181,-6,-7,-181,-4,-181,-8,-9,-181,-3,-5,-22,-37,-38,-181,-149,-153,-154,]),'DATAFRAME':([11,],[19,]),'INT':([11,28,67,176,],[20,20,20,20,]),'FLOAT':([11,28,67,176,],[21,21,21,21,]),'CHAR':([11,28,67,176,],[22,22,22,22,]),'LPAR':([13,23,24,53,60,61,93,94,95,96,97,98,99,108,109,110,120,121,123,124,126,127,129,130,131,140,142,143,144,145,148,149,152,164,169,181,182,183,184,185,186,191,193,203,204,205,206,207,208,214,215,239,250,253,257,258,259,260,261,262,263,265,266,269,270,273,292,302,303,310,311,312,313,330,335,363,367,],[-181,35,-11,-181,67,-155,-181,125,126,127,128,-181,131,132,133,134,-181,144,-75,-181,152,152,169,-105,152,152,-141,185,-181,-74,152,-139,-181,-181,152,235,236,237,238,-181,152,152,152,-181,-181,-181,-181,-181,-181,-181,-75,152,-181,-181,152,-141,152,152,152,152,152,-181,-181,-181,-181,152,152,152,152,152,152,152,152,152,-181,152,152,]),'SEMICOLON':([16,30,31,32,33,34,38,45,47,48,50,54,68,69,76,77,78,122,138,146,147,156,157,158,159,160,161,162,163,164,165,166,178,179,180,199,200,201,202,209,210,211,212,213,215,216,217,218,219,233,234,243,244,246,249,251,252,254,255,256,264,267,268,271,275,282,296,297,299,304,305,306,307,308,309,319,320,321,322,323,333,336,337,338,339,340,341,342,343,344,359,361,371,372,373,374,380,385,389,392,393,394,396,400,402,403,409,410,423,425,],[29,-23,-181,-24,-26,-181,52,-25,-29,-27,-29,-28,-181,79,-30,-34,-35,-181,-181,-45,-46,-181,-181,-181,-181,-181,-134,-135,-136,-181,-181,-181,-33,-36,-181,-181,-145,-181,-181,-124,-181,-143,-181,-142,-48,-137,-146,-138,-148,283,-63,-181,298,300,-111,-113,-114,-116,-117,-144,-125,-128,-129,-132,318,-181,-181,-140,-181,-118,-119,-120,-121,-122,-123,349,350,351,-150,-157,-181,-47,-50,-133,-112,-115,-126,-127,-130,-131,-181,376,386,387,388,389,-181,401,-181,-77,-181,404,-91,408,-181,-49,-64,-78,-90,426,]),'VOID':([28,],[41,]),'READ':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,91,100,101,102,103,104,105,106,107,117,119,174,283,298,300,314,318,345,348,349,350,351,364,366,368,376,382,384,386,387,388,389,391,392,401,402,404,408,409,410,411,412,413,414,415,416,417,418,420,422,426,427,428,],[-181,-22,-37,-38,-181,-181,-14,-15,94,-156,94,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-110,-158,-159,-160,-161,-162,-163,-164,94,-110,-181,-62,-79,-81,94,-108,94,94,-174,-176,-178,94,-110,94,-181,94,-110,-168,-170,-172,-181,-69,-77,-166,-181,-181,-181,-64,-78,-87,-93,94,94,-102,-107,94,94,94,-110,-181,-95,-101,]),'WRITE':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,91,100,101,102,103,104,105,106,107,117,119,174,283,298,300,314,318,345,348,349,350,351,364,366,368,376,382,384,386,387,388,389,391,392,401,402,404,408,409,410,411,412,413,414,415,416,417,418,420,422,426,427,428,],[-181,-22,-37,-38,-181,-181,-14,-15,95,-156,95,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-110,-158,-159,-160,-161,-162,-163,-164,95,-110,-181,-62,-79,-81,95,-108,95,95,-174,-176,-178,95,-110,95,-181,95,-110,-168,-170,-172,-181,-69,-77,-166,-181,-181,-181,-64,-78,-87,-93,95,95,-102,-107,95,95,95,-110,-181,-95,-101,]),'IF':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,91,100,101,102,103,104,105,106,107,117,119,174,283,298,300,314,318,345,348,349,350,351,364,366,368,376,382,384,386,387,388,389,391,392,401,402,404,408,409,410,411,412,413,414,415,416,417,418,420,422,426,427,428,],[-181,-22,-37,-38,-181,-181,-14,-15,96,-156,96,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-110,-158,-159,-160,-161,-162,-163,-164,96,-110,-181,-62,-79,-81,96,-108,96,96,-174,-176,-178,96,-110,96,-181,96,-110,-168,-170,-172,-181,-69,-77,-166,-181,-181,-181,-64,-78,-87,-93,96,96,-102,-107,96,96,96,-110,-181,-95,-101,]),'FOR':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,91,100,101,102,103,104,105,106,107,117,119,174,283,298,300,314,318,345,348,349,350,351,364,366,368,376,382,384,386,387,388,389,391,392,401,402,404,408,409,410,411,412,413,414,415,416,417,418,420,422,426,427,428,],[-181,-22,-37,-38,-181,-181,-14,-15,97,-156,97,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-110,-158,-159,-160,-161,-162,-163,-164,97,-110,-181,-62,-79,-81,97,-108,97,97,-174,-176,-178,97,-110,97,-181,97,-110,-168,-170,-172,-181,-69,-77,-166,-181,-181,-181,-64,-78,-87,-93,97,97,-102,-107,97,97,97,-110,-181,-95,-101,]),'WHILE':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,91,100,101,102,103,104,105,106,107,117,119,174,283,298,300,314,318,345,348,349,350,351,364,366,368,376,382,384,386,387,388,389,391,392,401,402,404,408,409,410,411,412,413,414,415,416,417,418,420,422,426,427,428,],[-181,-22,-37,-38,-181,-181,-14,-15,98,-156,98,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-110,-158,-159,-160,-161,-162,-163,-164,98,-110,-181,-62,-79,-81,98,-108,98,98,-174,-176,-178,98,-110,98,-181,98,-110,-168,-170,-172,-181,-69,-77,-166,-181,-181,-181,-64,-78,-87,-93,98,98,-102,-107,98,98,98,-110,-181,-95,-101,]),'RETURN':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,91,100,101,102,103,104,105,106,107,117,119,174,283,298,300,314,318,345,348,349,350,351,364,366,368,376,382,384,386,387,388,389,391,392,401,402,404,408,409,410,411,412,413,414,415,416,417,418,420,422,426,427,428,],[-181,-22,-37,-38,-181,-181,-14,-15,99,-156,99,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-110,-158,-159,-160,-161,-162,-163,-164,99,-110,-181,-62,-79,-81,99,-108,99,99,-174,-176,-178,99,-110,99,-181,99,-110,-168,-170,-172,-181,-69,-77,-166,-181,-181,-181,-64,-78,-87,-93,99,99,-102,-107,99,99,99,-110,-181,-95,-101,]),'LINEAR_REG':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,91,100,101,102,103,104,105,106,107,117,119,174,283,298,300,314,318,345,348,349,350,351,364,366,368,376,382,384,386,387,388,389,391,392,401,402,404,408,409,410,411,412,413,414,415,416,417,418,420,422,426,427,428,],[-181,-22,-37,-38,-181,-181,-14,-15,108,-156,108,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-110,-158,-159,-160,-161,-162,-163,-164,108,-110,-181,-62,-79,-81,108,-108,108,108,-174,-176,-178,108,-110,108,-181,108,-110,-168,-170,-172,-181,-69,-77,-166,-181,-181,-181,-64,-78,-87,-93,108,108,-102,-107,108,108,108,-110,-181,-95,-101,]),'BOX_PLOT':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,91,100,101,102,103,104,105,106,107,117,119,174,283,298,300,314,318,345,348,349,350,351,364,366,368,376,382,384,386,387,388,389,391,392,401,402,404,408,409,410,411,412,413,414,415,416,417,418,420,422,426,427,428,],[-181,-22,-37,-38,-181,-181,-14,-15,109,-156,109,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-110,-158,-159,-160,-161,-162,-163,-164,109,-110,-181,-62,-79,-81,109,-108,109,109,-174,-176,-178,109,-110,109,-181,109,-110,-168,-170,-172,-181,-69,-77,-166,-181,-181,-181,-64,-78,-87,-93,109,109,-102,-107,109,109,109,-110,-181,-95,-101,]),'HISTOGRAM':([29,42,43,44,56,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,91,100,101,102,103,104,105,106,107,117,119,174,283,298,300,314,318,345,348,349,350,351,364,366,368,376,382,384,386,387,388,389,391,392,401,402,404,408,409,410,411,412,413,414,415,416,417,418,420,422,426,427,428,],[-181,-22,-37,-38,-181,-181,-14,-15,110,-156,110,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-110,-158,-159,-160,-161,-162,-163,-164,110,-110,-181,-62,-79,-81,110,-108,110,110,-174,-176,-178,110,-110,110,-181,110,-110,-168,-170,-172,-181,-69,-77,-166,-181,-181,-181,-64,-78,-87,-93,110,110,-102,-107,110,110,110,-110,-181,-95,-101,]),'R_C_BRACKET':([29,42,43,44,56,63,64,65,66,70,71,80,81,82,83,84,85,86,87,88,89,90,91,100,101,102,103,104,105,106,107,117,118,119,139,174,231,283,298,300,314,318,345,348,349,350,351,364,365,366,368,376,379,382,383,384,386,387,388,389,391,392,399,401,402,404,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,424,426,427,428,],[-181,-22,-37,-38,-181,69,-181,-14,-15,-181,-156,-181,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-110,-158,-159,-160,-161,-162,-163,-164,-181,-13,-17,-16,-181,282,-62,-79,-81,-181,-108,-181,-181,-174,-176,-178,-181,380,-89,-181,-181,-88,-181,400,-104,-168,-170,-172,-181,-69,-77,-103,-166,-181,-181,-181,-64,-78,-87,-93,-181,-181,-102,-107,-181,-181,423,-181,425,-97,-96,-181,-95,-101,]),'COMMA':([31,34,113,122,136,137,144,146,147,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,185,186,195,196,197,198,199,200,201,202,209,210,211,212,213,215,216,217,218,219,239,240,241,242,243,247,248,249,251,252,254,255,256,264,267,268,271,288,289,290,294,295,296,297,299,304,305,306,307,308,309,332,334,336,337,338,339,340,341,342,343,344,360,362,375,389,392,393,402,403,409,410,],[46,46,-181,-181,176,-43,-181,-45,-46,-139,193,-181,-181,-181,-181,-181,-181,-181,-134,-135,-136,-181,-181,-181,-181,-181,-82,-86,-181,-147,-181,-145,-181,-181,-124,-181,-143,-181,-142,-48,-137,-146,-138,-148,-181,292,-181,-71,-181,193,-83,-111,-113,-114,-116,-117,-144,-125,-128,-129,-132,330,-181,-66,-70,-76,-181,-140,-181,-118,-119,-120,-121,-122,-123,-65,-181,-47,-50,-133,-112,-115,-126,-127,-130,-131,-181,292,330,-181,-77,-181,-181,-49,-64,-78,]),'L_S_BRACKET':([34,49,50,68,93,151,164,243,296,297,],[-181,55,-32,75,124,124,124,-181,335,-140,]),'RPAR':([35,67,72,74,111,112,113,122,136,137,144,146,147,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,175,176,177,185,186,188,189,190,192,194,195,196,197,198,199,200,201,202,209,210,211,212,213,215,216,217,218,219,220,221,224,225,226,227,228,229,230,232,239,240,241,242,243,245,247,248,249,251,252,254,255,256,264,267,268,271,276,277,278,279,280,281,284,285,286,287,288,289,290,291,293,294,295,296,297,299,301,304,305,306,307,308,309,324,325,326,327,328,329,331,332,334,336,337,338,339,340,341,342,343,344,352,353,354,355,356,357,358,360,362,369,370,375,377,381,389,390,392,393,397,398,402,403,409,410,],[51,-181,-181,-40,135,-44,-181,-181,-181,-43,-181,-45,-46,-139,-181,-181,-181,-181,-181,-181,-181,-181,-181,-181,-134,-135,-136,-181,-181,-181,-181,-181,-181,-181,-181,-39,-181,-42,-181,-181,244,-80,-48,246,-85,-82,-86,-181,-147,-181,-145,-181,-181,-124,-181,-143,-181,-142,-48,-137,-146,-138,-148,272,-92,274,275,-109,-181,-165,-181,-181,-41,-181,-181,-181,-71,-181,299,-181,-83,-111,-113,-114,-116,-117,-144,-125,-128,-129,-132,319,-175,320,-177,321,-179,-181,-181,-181,-181,-181,-181,-66,333,-73,-70,-76,-181,-140,-181,-84,-118,-119,-120,-121,-122,-123,-181,-180,-181,-181,-181,359,-68,-65,-181,-47,-50,-133,-112,-115,-126,-127,-130,-131,-181,371,-169,372,-171,373,-173,-181,-181,385,-167,-181,-72,-181,-181,-67,-77,-181,407,-100,-181,-49,-64,-78,]),'L_C_BRACKET':([51,135,272,274,316,317,395,405,406,407,],[56,174,314,-181,348,-106,-181,413,-94,414,]),'CTE_I':([55,75,120,124,126,127,131,140,142,144,148,149,152,169,185,186,191,193,203,204,205,206,207,208,239,250,253,257,258,259,260,261,262,263,265,266,269,270,273,292,302,303,310,311,312,313,330,335,363,367,],[62,114,-181,-181,165,165,165,165,-141,-181,165,-139,-181,165,-181,165,165,165,-181,-181,-181,-181,-181,-181,165,-181,-181,165,-141,165,165,165,165,165,-181,-181,-181,-181,165,165,165,165,165,165,165,165,165,-181,165,165,]),'R_S_BRACKET':([62,114,122,146,147,156,157,158,159,160,161,162,163,164,165,166,187,199,200,201,202,209,210,211,212,213,215,216,217,218,219,243,249,251,252,254,255,256,264,267,268,271,296,297,299,304,305,306,307,308,309,336,337,338,339,340,341,342,343,344,378,389,392,393,402,403,409,410,],[68,138,-181,-45,-46,-181,-181,-181,-181,-181,-134,-135,-136,-181,-181,-181,243,-181,-145,-181,-181,-124,-181,-143,-181,-142,-48,-137,-146,-138,-148,-181,-111,-113,-114,-116,-117,-144,-125,-128,-129,-132,-181,-140,-181,-118,-119,-120,-121,-122,-123,-47,-50,-133,-112,-115,-126,-127,-130,-131,393,-181,-77,-181,-181,-49,-64,-78,]),'EQUAL':([92,93,122,123,146,147,168,222,223,243,296,297,336,337,393,403,],[120,-181,-181,-48,-45,-46,-181,273,-98,-181,-181,-140,-47,-50,-181,-49,]),'CTE_F':([120,124,126,127,131,140,142,144,148,149,152,169,185,186,191,193,203,204,205,206,207,208,239,250,253,257,258,259,260,261,262,263,265,266,269,270,273,292,302,303,310,311,312,313,330,335,363,367,],[-181,-181,166,166,166,166,-141,-181,166,-139,-181,166,-181,166,166,166,-181,-181,-181,-181,-181,-181,166,-181,-181,166,-141,166,166,166,166,166,-181,-181,-181,-181,166,166,166,166,166,166,166,166,166,-181,166,166,]),'CSV_READ':([120,141,142,],[-181,181,-165,]),'MEAN':([120,141,142,],[-181,182,-165,]),'MODE':([120,141,142,],[-181,183,-165,]),'MEDIAN':([120,141,142,],[-181,184,-165,]),'TIMES':([122,146,147,160,161,162,163,164,165,166,212,213,215,216,217,218,219,243,296,297,299,336,337,338,389,392,393,402,403,409,410,],[-181,-45,-46,-181,-134,-135,-136,-181,-181,-181,269,-142,-48,-137,-146,-138,-148,-181,-181,-140,-181,-47,-50,-133,-181,-77,-181,-181,-49,-64,-78,]),'DIVIDE':([122,146,147,160,161,162,163,164,165,166,212,213,215,216,217,218,219,243,296,297,299,336,337,338,389,392,393,402,403,409,410,],[-181,-45,-46,-181,-134,-135,-136,-181,-181,-181,270,-142,-48,-137,-146,-138,-148,-181,-181,-140,-181,-47,-50,-133,-181,-77,-181,-181,-49,-64,-78,]),'PLUS':([122,146,147,159,160,161,162,163,164,165,166,210,211,212,213,215,216,217,218,219,243,268,271,296,297,299,336,337,338,343,344,389,392,393,402,403,409,410,],[-181,-45,-46,-181,-181,-134,-135,-136,-181,-181,-181,265,-143,-181,-142,-48,-137,-146,-138,-148,-181,-129,-132,-181,-140,-181,-47,-50,-133,-130,-131,-181,-77,-181,-181,-49,-64,-78,]),'MINUS':([122,146,147,159,160,161,162,163,164,165,166,210,211,212,213,215,216,217,218,219,243,268,271,296,297,299,336,337,338,343,344,389,392,393,402,403,409,410,],[-181,-45,-46,-181,-181,-134,-135,-136,-181,-181,-181,266,-143,-181,-142,-48,-137,-146,-138,-148,-181,-129,-132,-181,-140,-181,-47,-50,-133,-130,-131,-181,-77,-181,-181,-49,-64,-78,]),'LESS_EQUAL':([122,146,147,158,159,160,161,162,163,164,165,166,210,211,212,213,215,216,217,218,219,243,264,267,268,271,296,297,299,336,337,338,341,342,343,344,389,392,393,402,403,409,410,],[-181,-45,-46,203,-181,-181,-134,-135,-136,-181,-181,-181,-181,-143,-181,-142,-48,-137,-146,-138,-148,-181,-125,-128,-129,-132,-181,-140,-181,-47,-50,-133,-126,-127,-130,-131,-181,-77,-181,-181,-49,-64,-78,]),'LESS':([122,146,147,158,159,160,161,162,163,164,165,166,210,211,212,213,215,216,217,218,219,243,264,267,268,271,296,297,299,336,337,338,341,342,343,344,389,392,393,402,403,409,410,],[-181,-45,-46,204,-181,-181,-134,-135,-136,-181,-181,-181,-181,-143,-181,-142,-48,-137,-146,-138,-148,-181,-125,-128,-129,-132,-181,-140,-181,-47,-50,-133,-126,-127,-130,-131,-181,-77,-181,-181,-49,-64,-78,]),'GREATER_EQUAL':([122,146,147,158,159,160,161,162,163,164,165,166,210,211,212,213,215,216,217,218,219,243,264,267,268,271,296,297,299,336,337,338,341,342,343,344,389,392,393,402,403,409,410,],[-181,-45,-46,205,-181,-181,-134,-135,-136,-181,-181,-181,-181,-143,-181,-142,-48,-137,-146,-138,-148,-181,-125,-128,-129,-132,-181,-140,-181,-47,-50,-133,-126,-127,-130,-131,-181,-77,-181,-181,-49,-64,-78,]),'GREATER':([122,146,147,158,159,160,161,162,163,164,165,166,210,211,212,213,215,216,217,218,219,243,264,267,268,271,296,297,299,336,337,338,341,342,343,344,389,392,393,402,403,409,410,],[-181,-45,-46,206,-181,-181,-134,-135,-136,-181,-181,-181,-181,-143,-181,-142,-48,-137,-146,-138,-148,-181,-125,-128,-129,-132,-181,-140,-181,-47,-50,-133,-126,-127,-130,-131,-181,-77,-181,-181,-49,-64,-78,]),'COMPARE':([122,146,147,158,159,160,161,162,163,164,165,166,210,211,212,213,215,216,217,218,219,243,264,267,268,271,296,297,299,336,337,338,341,342,343,344,389,392,393,402,403,409,410,],[-181,-45,-46,207,-181,-181,-134,-135,-136,-181,-181,-181,-181,-143,-181,-142,-48,-137,-146,-138,-148,-181,-125,-128,-129,-132,-181,-140,-181,-47,-50,-133,-126,-127,-130,-131,-181,-77,-181,-181,-49,-64,-78,]),'NOT_EQUAL':([122,146,147,158,159,160,161,162,163,164,165,166,210,211,212,213,215,216,217,218,219,243,264,267,268,271,296,297,299,336,337,338,341,342,343,344,389,392,393,402,403,409,410,],[-181,-45,-46,208,-181,-181,-134,-135,-136,-181,-181,-181,-181,-143,-181,-142,-48,-137,-146,-138,-148,-181,-125,-128,-129,-132,-181,-140,-181,-47,-50,-133,-126,-127,-130,-131,-181,-77,-181,-181,-49,-64,-78,]),'AND':([122,146,147,157,158,159,160,161,162,163,164,165,166,200,201,202,209,210,211,212,213,215,216,217,218,219,243,255,256,264,267,268,271,296,297,299,304,305,306,307,308,309,336,337,338,341,342,343,344,389,392,393,402,403,409,410,],[-181,-45,-46,-181,-181,-181,-181,-134,-135,-136,-181,-181,-181,-145,253,-181,-124,-181,-143,-181,-142,-48,-137,-146,-138,-148,-181,-117,-144,-125,-128,-129,-132,-181,-140,-181,-118,-119,-120,-121,-122,-123,-47,-50,-133,-126,-127,-130,-131,-181,-77,-181,-181,-49,-64,-78,]),'OR':([122,146,147,156,157,158,159,160,161,162,163,164,165,166,199,200,201,202,209,210,211,212,213,215,216,217,218,219,243,252,254,255,256,264,267,268,271,296,297,299,304,305,306,307,308,309,336,337,338,340,341,342,343,344,389,392,393,402,403,409,410,],[-181,-45,-46,-181,-181,-181,-181,-181,-134,-135,-136,-181,-181,-181,250,-145,-181,-181,-124,-181,-143,-181,-142,-48,-137,-146,-138,-148,-181,-114,-116,-117,-144,-125,-128,-129,-132,-181,-140,-181,-118,-119,-120,-121,-122,-123,-47,-50,-133,-115,-126,-127,-130,-131,-181,-77,-181,-181,-49,-64,-78,]),'TO':([122,146,147,156,157,158,159,160,161,162,163,164,165,166,199,200,201,202,209,210,211,212,213,215,216,217,218,219,243,249,251,252,254,255,256,264,267,268,271,296,297,299,304,305,306,307,308,309,315,336,337,338,339,340,341,342,343,344,346,347,389,392,393,402,403,409,410,],[-181,-45,-46,-181,-181,-181,-181,-181,-134,-135,-136,-181,-181,-181,-181,-145,-181,-181,-124,-181,-143,-181,-142,-48,-137,-146,-138,-148,-181,-111,-113,-114,-116,-117,-144,-125,-128,-129,-132,-181,-140,-181,-118,-119,-120,-121,-122,-123,-181,-47,-50,-133,-112,-115,-126,-127,-130,-131,367,-99,-181,-77,-181,-181,-49,-64,-78,]),'CTE_S':([126,193,235,],[155,155,284,]),'ELSE':([380,],[395,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_point':([2,],[3,]),'empty':([2,6,8,13,14,25,29,31,34,52,53,56,64,67,68,70,72,79,80,93,98,113,117,120,121,122,124,136,138,144,150,151,152,153,154,155,156,157,158,159,160,164,165,166,167,168,170,171,172,173,174,176,180,185,186,197,199,201,202,203,204,205,206,207,208,210,212,214,227,229,230,239,240,241,243,247,250,253,265,266,269,270,274,282,284,285,286,287,288,289,296,299,314,315,324,326,327,328,333,334,335,345,348,352,359,360,362,364,368,375,376,380,381,382,389,393,395,402,404,408,413,414,417,418,420,426,],[4,10,15,24,27,37,44,47,50,59,61,66,71,74,78,100,112,116,119,123,130,137,119,142,145,147,149,177,179,149,189,190,149,194,196,198,200,200,209,211,213,215,217,219,221,223,226,228,228,228,66,74,234,149,242,196,251,254,256,258,258,258,258,258,258,267,271,145,277,279,281,290,293,295,297,194,258,258,258,258,258,258,317,323,325,228,228,228,331,295,337,297,100,347,198,354,356,358,297,295,149,366,100,370,297,295,293,366,384,331,392,396,398,384,392,297,406,410,412,416,100,100,366,422,422,428,]),'modules':([6,],[7,]),'modules_2':([6,],[8,]),'vars':([6,29,56,174,],[9,43,65,65,]),'main':([7,],[12,]),'modules_point':([8,],[14,]),'vars_2':([11,],[16,]),'tipo_comp':([11,],[17,]),'tipo_simple':([11,28,67,176,],[18,40,73,73,]),'main_point':([13,],[23,]),'modules_3':([14,],[25,]),'function':([14,52,],[26,58,]),'vars_3':([17,18,46,],[30,33,54,]),'vars_4':([18,],[32,]),'count_global_vars':([25,],[36,]),'function_2':([28,],[38,]),'function_3':([28,],[39,]),'vars_8':([29,],[42,]),'vars_5':([31,34,],[45,45,]),'vars_6':([34,],[48,]),'punto_id_especial':([34,],[49,]),'function_4':([52,],[57,]),'function_punto1':([53,],[60,]),'body':([56,174,],[63,231,]),'body_2':([56,174,],[64,64,]),'func_agrega_v':([64,],[70,]),'param':([67,176,],[72,232,]),'vars_7':([68,],[76,]),'var_array':([68,],[77,]),'estatuto':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[80,117,117,345,364,368,364,382,382,417,418,364,420,420,]),'asigna':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'llamada':([70,80,117,126,127,131,140,148,169,186,191,193,239,257,259,260,261,262,263,273,292,302,303,310,311,312,313,314,330,345,348,363,364,367,368,382,413,414,417,418,420,],[82,82,82,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,82,162,82,82,162,82,162,82,82,82,82,82,82,82,]),'llamada_void':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'read':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'write':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'if_1':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'for_l':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'while_l':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'return':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'func_extra':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'funciones_especiales':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'variable':([70,80,117,125,126,127,131,132,133,134,140,148,169,186,191,193,236,237,238,239,257,259,260,261,262,263,273,292,302,303,310,311,312,313,314,330,345,348,363,364,367,368,382,413,414,417,418,420,],[92,92,92,150,161,161,161,171,172,173,161,161,161,161,161,161,285,286,287,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,92,161,92,92,161,92,161,92,92,92,92,92,92,92,]),'read_csv':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'mean_func':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'mode_func':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'median_func':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'linear_reg_func':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'box_plt':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'histogram_plt':([70,80,117,314,345,348,364,368,382,413,414,417,418,420,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'punto_param_2':([72,],[111,]),'main_final':([79,],[115,]),'body_3':([80,117,],[118,139,]),'verify_func':([93,164,],[121,214,]),'variable_2':([93,151,164,],[122,122,122,]),'while_point':([98,],[129,]),'punto_param':([113,],[136,]),'add_operator':([120,203,204,205,206,207,208,250,253,265,266,269,270,],[140,257,259,260,261,262,263,302,303,310,311,312,313,]),'check_df':([120,171,172,173,285,286,287,],[141,227,229,230,326,327,328,]),'not_void':([121,214,],[143,143,]),'variable_point':([122,],[146,]),'add_floor':([124,144,152,185,335,],[148,186,191,239,363,]),'write_2':([126,193,],[153,247,]),'exp':([126,127,131,140,148,169,186,191,193,239,273,292,302,330,363,367,],[154,167,170,180,187,224,241,245,154,289,315,334,339,360,378,381,]),'t_exp':([126,127,131,140,148,169,186,191,193,239,273,292,302,303,330,363,367,],[156,156,156,156,156,156,156,156,156,156,156,156,156,340,156,156,156,]),'g_exp':([126,127,131,140,148,169,186,191,193,239,273,292,302,303,330,363,367,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'m_exp':([126,127,131,140,148,169,186,191,193,239,257,259,260,261,262,263,273,292,302,303,310,311,330,363,367,],[158,158,158,158,158,158,158,158,158,158,304,305,306,307,308,309,158,158,158,158,341,342,158,158,158,]),'t':([126,127,131,140,148,169,186,191,193,239,257,259,260,261,262,263,273,292,302,303,310,311,312,313,330,363,367,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,343,344,159,159,159,]),'f':([126,127,131,140,148,169,186,191,193,239,257,259,260,261,262,263,273,292,302,303,310,311,312,313,330,363,367,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'f_2':([126,127,131,140,148,169,186,191,193,239,257,259,260,261,262,263,273,292,302,303,310,311,312,313,330,363,367,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'param_2':([136,],[175,]),'var_mat':([138,],[178,]),'read_point':([150,],[188,]),'write_3':([153,247,],[192,301,]),'write_point':([154,197,],[195,248,]),'add_constant_s':([155,324,],[197,352,]),'add_operator_4':([156,157,],[199,201,]),'g_exp_2':([158,],[202,]),'add_operator_2':([159,],[210,]),'add_operator_1':([160,],[212,]),'add_constant_i':([165,],[216,]),'add_constant_f':([166,],[218,]),'if_point':([167,],[220,]),'for_point_1':([168,],[222,]),'check_valid_func':([170,],[225,]),'asigna_point':([180,],[233,]),'llamada_void_2':([186,],[240,]),'exp_2':([199,],[249,]),'t_exp_2':([201,],[252,]),'add_operator_3':([202,],[255,]),'m_exp_2':([210,],[264,]),'t_2':([212,],[268,]),'add_quad_linearR':([227,],[276,]),'add_quad_box':([229,],[278,]),'add_quad_hist':([230,],[280,]),'llamada_2':([239,],[288,]),'llamada_void_3':([240,362,],[291,377,]),'verify_parameter':([241,289,334,360,],[294,332,362,375,]),'remove_floor':([243,299,333,359,393,],[296,338,361,374,403,]),'while_point_2':([274,],[316,]),'final_func_point':([282,],[322,]),'check_name':([284,],[324,]),'llamada_3':([288,375,],[329,390,]),'variable_3':([296,],[336,]),'for_point_2':([315,],[346,]),'add_quad_mean':([326,],[353,]),'add_quad_mode':([327,],[355,]),'add_quad_median':([328,],[357,]),'if_2':([345,364,417,],[365,379,419,]),'add_quad_readCSV':([352,],[369,]),'while_l_2':([368,382,],[383,399,]),'gosub':([376,389,],[391,402,]),'if_3':([380,],[394,]),'for_point_3':([381,],[397,]),'if_point_3':([395,],[405,]),'add_temp':([402,],[409,]),'if_point_2':([404,],[411,]),'while_point_3':([408,],[415,]),'for_l_2':([418,420,],[421,424,]),'for_point_4':([426,],[427,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM program_point ID COLON modules main','program',6,'p_program','virtual_machine.py',69),
  ('program_point -> empty','program_point',1,'p_program_point','virtual_machine.py',74),
  ('modules -> modules_2 modules_point modules_3 count_global_vars','modules',4,'p_modules','virtual_machine.py',83),
  ('modules_point -> empty','modules_point',1,'p_modules_point','virtual_machine.py',88),
  ('count_global_vars -> empty','count_global_vars',1,'p_count_global_vars','virtual_machine.py',101),
  ('modules_2 -> vars','modules_2',1,'p_modules_2','virtual_machine.py',121),
  ('modules_2 -> empty','modules_2',1,'p_modules_2','virtual_machine.py',122),
  ('modules_3 -> function','modules_3',1,'p_modules_3','virtual_machine.py',127),
  ('modules_3 -> empty','modules_3',1,'p_modules_3','virtual_machine.py',128),
  ('main -> MAIN main_point LPAR RPAR L_C_BRACKET body R_C_BRACKET SEMICOLON main_final','main',9,'p_main','virtual_machine.py',133),
  ('main_point -> empty','main_point',1,'p_main_point','virtual_machine.py',138),
  ('main_final -> empty','main_final',1,'p_main_final','virtual_machine.py',150),
  ('body -> body_2 func_agrega_v estatuto body_3','body',4,'p_body','virtual_machine.py',169),
  ('body_2 -> vars','body_2',1,'p_body_2','virtual_machine.py',174),
  ('body_2 -> empty','body_2',1,'p_body_2','virtual_machine.py',175),
  ('body_3 -> estatuto body_3','body_3',2,'p_body_3','virtual_machine.py',180),
  ('body_3 -> empty','body_3',1,'p_body_3','virtual_machine.py',181),
  ('tipo_simple -> INT','tipo_simple',1,'p_tipo_simple','virtual_machine.py',186),
  ('tipo_simple -> FLOAT','tipo_simple',1,'p_tipo_simple','virtual_machine.py',187),
  ('tipo_simple -> CHAR','tipo_simple',1,'p_tipo_simple','virtual_machine.py',188),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','virtual_machine.py',195),
  ('vars -> VAR vars_2 SEMICOLON vars_8','vars',4,'p_vars','virtual_machine.py',202),
  ('vars_2 -> tipo_comp vars_3','vars_2',2,'p_vars_2','virtual_machine.py',207),
  ('vars_2 -> tipo_simple vars_4','vars_2',2,'p_vars_2','virtual_machine.py',208),
  ('vars_3 -> ID vars_5','vars_3',2,'p_vars_3','virtual_machine.py',213),
  ('vars_4 -> vars_3','vars_4',1,'p_vars_4','virtual_machine.py',228),
  ('vars_4 -> ID vars_6','vars_4',2,'p_vars_4','virtual_machine.py',229),
  ('vars_5 -> COMMA vars_3','vars_5',2,'p_vars_5','virtual_machine.py',234),
  ('vars_5 -> empty','vars_5',1,'p_vars_5','virtual_machine.py',235),
  ('vars_6 -> punto_id_especial L_S_BRACKET CTE_I R_S_BRACKET vars_7','vars_6',5,'p_vars_6','virtual_machine.py',240),
  ('vars_6 -> empty','vars_6',1,'p_vars_6','virtual_machine.py',241),
  ('punto_id_especial -> empty','punto_id_especial',1,'p_punto_id_especial','virtual_machine.py',246),
  ('vars_7 -> L_S_BRACKET CTE_I R_S_BRACKET var_mat','vars_7',4,'p_vars_7','virtual_machine.py',253),
  ('vars_7 -> var_array','vars_7',1,'p_vars_7','virtual_machine.py',254),
  ('var_array -> empty','var_array',1,'p_var_array','virtual_machine.py',259),
  ('var_mat -> empty','var_mat',1,'p_var_mat','virtual_machine.py',267),
  ('vars_8 -> vars','vars_8',1,'p_vars_8','virtual_machine.py',277),
  ('vars_8 -> empty','vars_8',1,'p_vars_8','virtual_machine.py',278),
  ('param -> tipo_simple ID punto_param param_2','param',4,'p_param','virtual_machine.py',283),
  ('param -> empty','param',1,'p_param','virtual_machine.py',284),
  ('param_2 -> COMMA param','param_2',2,'p_param_2','virtual_machine.py',289),
  ('param_2 -> empty','param_2',1,'p_param_2','virtual_machine.py',290),
  ('punto_param -> empty','punto_param',1,'p_punto_param','virtual_machine.py',295),
  ('punto_param_2 -> empty','punto_param_2',1,'p_punto_param_2','virtual_machine.py',306),
  ('variable -> ID variable_2 variable_point','variable',3,'p_variable','virtual_machine.py',314),
  ('variable_point -> empty','variable_point',1,'p_variable_point','virtual_machine.py',319),
  ('variable_2 -> L_S_BRACKET add_floor exp R_S_BRACKET remove_floor variable_3','variable_2',6,'p_variable_2','virtual_machine.py',425),
  ('variable_2 -> empty','variable_2',1,'p_variable_2','virtual_machine.py',426),
  ('variable_3 -> L_S_BRACKET add_floor exp R_S_BRACKET remove_floor','variable_3',5,'p_variable_3','virtual_machine.py',431),
  ('variable_3 -> empty','variable_3',1,'p_variable_3','virtual_machine.py',432),
  ('estatuto -> asigna','estatuto',1,'p_estatuto','virtual_machine.py',437),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','virtual_machine.py',438),
  ('estatuto -> llamada_void','estatuto',1,'p_estatuto','virtual_machine.py',439),
  ('estatuto -> read','estatuto',1,'p_estatuto','virtual_machine.py',440),
  ('estatuto -> write','estatuto',1,'p_estatuto','virtual_machine.py',441),
  ('estatuto -> if_1','estatuto',1,'p_estatuto','virtual_machine.py',442),
  ('estatuto -> for_l','estatuto',1,'p_estatuto','virtual_machine.py',443),
  ('estatuto -> while_l','estatuto',1,'p_estatuto','virtual_machine.py',444),
  ('estatuto -> return','estatuto',1,'p_estatuto','virtual_machine.py',445),
  ('estatuto -> func_extra','estatuto',1,'p_estatuto','virtual_machine.py',446),
  ('estatuto -> funciones_especiales','estatuto',1,'p_estatuto','virtual_machine.py',447),
  ('asigna -> variable EQUAL add_operator exp asigna_point SEMICOLON','asigna',6,'p_asigna','virtual_machine.py',452),
  ('asigna_point -> empty','asigna_point',1,'p_asigna_point','virtual_machine.py',457),
  ('llamada -> ID verify_func not_void LPAR add_floor llamada_2 llamada_3 RPAR remove_floor SEMICOLON gosub add_temp','llamada',12,'p_llamada','virtual_machine.py',483),
  ('llamada_2 -> exp verify_parameter','llamada_2',2,'p_llamada_2','virtual_machine.py',488),
  ('llamada_2 -> empty','llamada_2',1,'p_llamada_2','virtual_machine.py',489),
  ('llamada_3 -> COMMA exp verify_parameter llamada_3','llamada_3',4,'p_llamada_3','virtual_machine.py',494),
  ('llamada_3 -> empty','llamada_3',1,'p_llamada_3','virtual_machine.py',495),
  ('llamada_void -> ID verify_func LPAR add_floor llamada_void_2 llamada_void_3 RPAR remove_floor SEMICOLON gosub','llamada_void',10,'p_llamada_void','virtual_machine.py',500),
  ('llamada_void_2 -> exp verify_parameter','llamada_void_2',2,'p_llamada_void_2','virtual_machine.py',505),
  ('llamada_void_2 -> empty','llamada_void_2',1,'p_llamada_void_2','virtual_machine.py',506),
  ('llamada_void_3 -> COMMA exp verify_parameter llamada_void_3','llamada_void_3',4,'p_llamada_void_3','virtual_machine.py',511),
  ('llamada_void_3 -> empty','llamada_void_3',1,'p_llamada_void_3','virtual_machine.py',512),
  ('not_void -> empty','not_void',1,'p_not_void','virtual_machine.py',517),
  ('verify_func -> empty','verify_func',1,'p_verify_func','virtual_machine.py',526),
  ('verify_parameter -> empty','verify_parameter',1,'p_verify_parameter','virtual_machine.py',543),
  ('gosub -> empty','gosub',1,'p_gosub','virtual_machine.py',568),
  ('add_temp -> empty','add_temp',1,'p_add_temp','virtual_machine.py',579),
  ('read -> READ LPAR variable read_point RPAR SEMICOLON','read',6,'p_read','virtual_machine.py',595),
  ('read_point -> empty','read_point',1,'p_read_point','virtual_machine.py',600),
  ('write -> WRITE LPAR write_2 write_3 RPAR SEMICOLON','write',6,'p_write','virtual_machine.py',611),
  ('write_2 -> exp write_point','write_2',2,'p_write_2','virtual_machine.py',616),
  ('write_2 -> CTE_S add_constant_s write_point','write_2',3,'p_write_2','virtual_machine.py',617),
  ('write_3 -> COMMA write_2 write_3','write_3',3,'p_write_3','virtual_machine.py',622),
  ('write_3 -> empty','write_3',1,'p_write_3','virtual_machine.py',623),
  ('write_point -> empty','write_point',1,'p_write_point','virtual_machine.py',628),
  ('if_1 -> IF LPAR exp if_point RPAR L_C_BRACKET estatuto if_2 R_C_BRACKET if_3 SEMICOLON if_point_2','if_1',12,'p_if_1','virtual_machine.py',639),
  ('if_2 -> estatuto if_2','if_2',2,'p_if_2','virtual_machine.py',644),
  ('if_2 -> empty','if_2',1,'p_if_2','virtual_machine.py',645),
  ('if_3 -> ELSE if_point_3 L_C_BRACKET estatuto if_2 R_C_BRACKET','if_3',6,'p_if_3','virtual_machine.py',650),
  ('if_3 -> empty','if_3',1,'p_if_3','virtual_machine.py',651),
  ('if_point -> empty','if_point',1,'p_if_point','virtual_machine.py',656),
  ('if_point_2 -> empty','if_point_2',1,'p_if_point_2','virtual_machine.py',674),
  ('if_point_3 -> empty','if_point_3',1,'p_if_point_3','virtual_machine.py',684),
  ('for_l -> FOR LPAR ID for_point_1 EQUAL exp for_point_2 TO exp for_point_3 RPAR L_C_BRACKET estatuto for_l_2 R_C_BRACKET SEMICOLON for_point_4','for_l',17,'p_for_l','virtual_machine.py',696),
  ('for_l_2 -> estatuto for_l_2','for_l_2',2,'p_for_l_2','virtual_machine.py',701),
  ('for_l_2 -> empty','for_l_2',1,'p_for_l_2','virtual_machine.py',702),
  ('for_point_1 -> empty','for_point_1',1,'p_for_point_1','virtual_machine.py',707),
  ('for_point_2 -> empty','for_point_2',1,'p_for_point_2','virtual_machine.py',723),
  ('for_point_3 -> empty','for_point_3',1,'p_for_point_3','virtual_machine.py',748),
  ('for_point_4 -> empty','for_point_4',1,'p_for_point_4','virtual_machine.py',774),
  ('while_l -> WHILE while_point LPAR exp RPAR while_point_2 L_C_BRACKET estatuto while_l_2 R_C_BRACKET SEMICOLON while_point_3','while_l',12,'p_while_l','virtual_machine.py',810),
  ('while_l_2 -> estatuto while_l_2','while_l_2',2,'p_while_l_2','virtual_machine.py',815),
  ('while_l_2 -> empty','while_l_2',1,'p_while_l_2','virtual_machine.py',816),
  ('while_point -> empty','while_point',1,'p_while_point','virtual_machine.py',821),
  ('while_point_2 -> empty','while_point_2',1,'p_while_point_2','virtual_machine.py',829),
  ('while_point_3 -> empty','while_point_3',1,'p_while_point_3','virtual_machine.py',847),
  ('return -> RETURN LPAR exp check_valid_func RPAR SEMICOLON','return',6,'p_return','virtual_machine.py',858),
  ('check_valid_func -> empty','check_valid_func',1,'p_check_valid_func','virtual_machine.py',863),
  ('func_extra -> empty','func_extra',1,'p_func_extra','virtual_machine.py',888),
  ('exp -> t_exp add_operator_4 exp_2','exp',3,'p_exp','virtual_machine.py',893),
  ('exp_2 -> OR add_operator exp','exp_2',3,'p_exp_2','virtual_machine.py',898),
  ('exp_2 -> empty','exp_2',1,'p_exp_2','virtual_machine.py',899),
  ('t_exp -> g_exp add_operator_4 t_exp_2','t_exp',3,'p_t_exp','virtual_machine.py',904),
  ('t_exp_2 -> AND add_operator t_exp','t_exp_2',3,'p_t_exp_2','virtual_machine.py',909),
  ('t_exp_2 -> empty','t_exp_2',1,'p_t_exp_2','virtual_machine.py',910),
  ('g_exp -> m_exp g_exp_2 add_operator_3','g_exp',3,'p_g_exp','virtual_machine.py',915),
  ('g_exp_2 -> LESS_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','virtual_machine.py',920),
  ('g_exp_2 -> LESS add_operator m_exp','g_exp_2',3,'p_g_exp_2','virtual_machine.py',921),
  ('g_exp_2 -> GREATER_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','virtual_machine.py',922),
  ('g_exp_2 -> GREATER add_operator m_exp','g_exp_2',3,'p_g_exp_2','virtual_machine.py',923),
  ('g_exp_2 -> COMPARE add_operator m_exp','g_exp_2',3,'p_g_exp_2','virtual_machine.py',924),
  ('g_exp_2 -> NOT_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','virtual_machine.py',925),
  ('g_exp_2 -> empty','g_exp_2',1,'p_g_exp_2','virtual_machine.py',926),
  ('m_exp -> t add_operator_2 m_exp_2','m_exp',3,'p_m_exp','virtual_machine.py',931),
  ('m_exp_2 -> PLUS add_operator m_exp','m_exp_2',3,'p_m_exp_2','virtual_machine.py',936),
  ('m_exp_2 -> MINUS add_operator m_exp','m_exp_2',3,'p_m_exp_2','virtual_machine.py',937),
  ('m_exp_2 -> empty','m_exp_2',1,'p_m_exp_2','virtual_machine.py',938),
  ('t -> f add_operator_1 t_2','t',3,'p_t','virtual_machine.py',943),
  ('t_2 -> TIMES add_operator t','t_2',3,'p_t_2','virtual_machine.py',948),
  ('t_2 -> DIVIDE add_operator t','t_2',3,'p_t_2','virtual_machine.py',949),
  ('t_2 -> empty','t_2',1,'p_t_2','virtual_machine.py',950),
  ('f -> LPAR add_floor exp RPAR remove_floor','f',5,'p_f','virtual_machine.py',955),
  ('f -> variable','f',1,'p_f','virtual_machine.py',956),
  ('f -> llamada','f',1,'p_f','virtual_machine.py',957),
  ('f -> f_2','f',1,'p_f','virtual_machine.py',958),
  ('f_2 -> CTE_I add_constant_i','f_2',2,'p_f_2','virtual_machine.py',963),
  ('f_2 -> CTE_F add_constant_f','f_2',2,'p_f_2','virtual_machine.py',964),
  ('add_floor -> empty','add_floor',1,'p_add_floor','virtual_machine.py',969),
  ('remove_floor -> empty','remove_floor',1,'p_remove_floor','virtual_machine.py',976),
  ('add_operator -> empty','add_operator',1,'p_add_operator','virtual_machine.py',983),
  ('add_operator_1 -> empty','add_operator_1',1,'p_add_operator_1','virtual_machine.py',992),
  ('add_operator_2 -> empty','add_operator_2',1,'p_add_operator_2','virtual_machine.py',1020),
  ('add_operator_3 -> empty','add_operator_3',1,'p_add_operator_3','virtual_machine.py',1048),
  ('add_operator_4 -> empty','add_operator_4',1,'p_add_operator_4','virtual_machine.py',1077),
  ('add_constant_i -> empty','add_constant_i',1,'p_add_constant_i','virtual_machine.py',1105),
  ('add_constant_s -> empty','add_constant_s',1,'p_add_constant_s','virtual_machine.py',1123),
  ('add_constant_f -> empty','add_constant_f',1,'p_add_constant_f','virtual_machine.py',1140),
  ('function -> FUNC function_2 SEMICOLON function_4','function',4,'p_function','virtual_machine.py',1157),
  ('function_2 -> function_3 ID function_punto1 LPAR param punto_param_2 RPAR L_C_BRACKET body R_C_BRACKET final_func_point','function_2',11,'p_function_2','virtual_machine.py',1162),
  ('function_3 -> tipo_simple','function_3',1,'p_function_3','virtual_machine.py',1167),
  ('function_3 -> VOID','function_3',1,'p_function_3','virtual_machine.py',1168),
  ('function_4 -> function','function_4',1,'p_function_4','virtual_machine.py',1176),
  ('function_4 -> empty','function_4',1,'p_function_4','virtual_machine.py',1177),
  ('function_punto1 -> empty','function_punto1',1,'p_function_punto1','virtual_machine.py',1182),
  ('func_agrega_v -> empty','func_agrega_v',1,'p_func_agrega_v','virtual_machine.py',1201),
  ('final_func_point -> empty','final_func_point',1,'p_final_func_point','virtual_machine.py',1226),
  ('funciones_especiales -> read_csv','funciones_especiales',1,'p_funciones_especiales','virtual_machine.py',1250),
  ('funciones_especiales -> mean_func','funciones_especiales',1,'p_funciones_especiales','virtual_machine.py',1251),
  ('funciones_especiales -> mode_func','funciones_especiales',1,'p_funciones_especiales','virtual_machine.py',1252),
  ('funciones_especiales -> median_func','funciones_especiales',1,'p_funciones_especiales','virtual_machine.py',1253),
  ('funciones_especiales -> linear_reg_func','funciones_especiales',1,'p_funciones_especiales','virtual_machine.py',1254),
  ('funciones_especiales -> box_plt','funciones_especiales',1,'p_funciones_especiales','virtual_machine.py',1255),
  ('funciones_especiales -> histogram_plt','funciones_especiales',1,'p_funciones_especiales','virtual_machine.py',1256),
  ('check_df -> empty','check_df',1,'p_check_df','virtual_machine.py',1261),
  ('read_csv -> variable EQUAL check_df CSV_READ LPAR CTE_S check_name add_constant_s add_quad_readCSV RPAR SEMICOLON','read_csv',11,'p_read_csv','virtual_machine.py',1269),
  ('add_quad_readCSV -> empty','add_quad_readCSV',1,'p_add_quad_readCSV','virtual_machine.py',1274),
  ('mean_func -> variable EQUAL check_df MEAN LPAR variable check_df add_quad_mean RPAR SEMICOLON','mean_func',10,'p_mean_func','virtual_machine.py',1285),
  ('add_quad_mean -> empty','add_quad_mean',1,'p_add_quad_mean','virtual_machine.py',1290),
  ('mode_func -> variable EQUAL check_df MODE LPAR variable check_df add_quad_mode RPAR SEMICOLON','mode_func',10,'p_mode_func','virtual_machine.py',1302),
  ('add_quad_mode -> empty','add_quad_mode',1,'p_add_quad_mode','virtual_machine.py',1308),
  ('median_func -> variable EQUAL check_df MEDIAN LPAR variable check_df add_quad_median RPAR SEMICOLON','median_func',10,'p_median_func','virtual_machine.py',1320),
  ('add_quad_median -> empty','add_quad_median',1,'p_add_quad_median','virtual_machine.py',1326),
  ('linear_reg_func -> LINEAR_REG LPAR variable check_df add_quad_linearR RPAR SEMICOLON','linear_reg_func',7,'p_linear_reg_func','virtual_machine.py',1338),
  ('add_quad_linearR -> empty','add_quad_linearR',1,'p_add_quad_linearR','virtual_machine.py',1343),
  ('box_plt -> BOX_PLOT LPAR variable check_df add_quad_box RPAR SEMICOLON','box_plt',7,'p_box_plt','virtual_machine.py',1352),
  ('add_quad_box -> empty','add_quad_box',1,'p_add_quad_box','virtual_machine.py',1357),
  ('histogram_plt -> HISTOGRAM LPAR variable check_df add_quad_hist RPAR SEMICOLON','histogram_plt',7,'p_histogram_plt','virtual_machine.py',1366),
  ('add_quad_hist -> empty','add_quad_hist',1,'p_add_quad_hist','virtual_machine.py',1371),
  ('check_name -> empty','check_name',1,'p_check_name','virtual_machine.py',1380),
  ('empty -> <empty>','empty',0,'p_empty','virtual_machine.py',1391),
]
