
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COLON COMMA COMPARE CTE_F CTE_I CTE_S DATAFRAME DIVIDE ELSE EQUAL FLOAT FOR FUNC GREATER GREATER_EQUAL ID IF INT LESS LESS_EQUAL LPAR L_C_BRACKET L_S_BRACKET MAIN MINUS NOT_EQUAL OR PLUS PROGRAM READ RETURN RPAR R_C_BRACKET R_S_BRACKET SEMICOLON STRING TIMES TO VAR VOID WHILE WRITE\n    program : PROGRAM program_point ID COLON modules main\n    \n    program_point : empty\n    \n    modules : modules_2 modules_point modules_3\n    \n    modules_point : empty\n    \n    modules_2 : vars\n                | empty\n    \n    modules_3 : function\n                    | empty\n    \n    main : MAIN main_point LPAR RPAR L_C_BRACKET body R_C_BRACKET SEMICOLON main_final\n    \n    main_point : empty\n    \n    main_final : empty\n    \n    body : vars func_agrega_v estatuto body_2\n    \n    body_2 : estatuto body_2\n                | empty\n    \n    tipo_simple : INT \n                | FLOAT\n                | CHAR\n    \n    tipo_comp : DATAFRAME\n    \n    vars : VAR vars_2 SEMICOLON vars_8\n    \n    vars_2 : tipo_comp vars_3\n                        | tipo_simple vars_4\n    \n    vars_3 : ID vars_5\n    \n    vars_4 : vars_3 \n                | ID vars_6\n    \n    vars_5 : COMMA vars_3\n            | empty\n    \n    vars_6 : punto_id_especial L_S_BRACKET CTE_I R_S_BRACKET vars_7\n                | empty\n    \n    punto_id_especial : empty\n    \n    vars_7 : L_S_BRACKET CTE_I R_S_BRACKET var_mat\n                | var_array\n    \n    var_array : empty\n    \n    var_mat : empty\n    \n    vars_8 : vars \n                | empty\n    \n    param : tipo_simple ID punto_param param_2 \n                | empty\n    \n    param_2 : COMMA param\n                | empty\n    \n    punto_param : empty\n    \n    punto_param_2 : empty\n    \n    variable : ID variable_2 variable_point\n    \n    variable_point : empty\n    \n    variable_2 : L_S_BRACKET exp R_S_BRACKET variable_3 \n                    | empty\n    \n    variable_3 : L_S_BRACKET exp R_S_BRACKET\n                    | empty\n    \n    estatuto : asigna\n                | llamada\n                | llamada_void\n                | read\n                | write\n                | if_1\n                | for_l\n                | while_l\n                | return\n                | func_extra\n    \n    asigna : variable EQUAL add_operator exp asigna_point SEMICOLON\n    \n    asigna_point : empty\n    \n    llamada : ID LPAR exp llamada_2 RPAR SEMICOLON\n    \n    llamada_2 : COMMA exp llamada_2 \n                | empty\n    \n    llamada_void : ID LPAR exp llamada_void_2 RPAR SEMICOLON\n    \n    llamada_void_2 : COMMA exp llamada_void_2 \n                | empty\n    \n    read : READ LPAR variable read_point RPAR SEMICOLON\n    \n    read_point : empty\n    \n    write : WRITE LPAR write_2 write_3 RPAR SEMICOLON\n    \n    write_2 : exp write_point\n                | CTE_S add_constant_s write_point\n    \n    write_3 : COMMA write_2 write_3 \n                | empty\n    \n    write_point : empty\n    \n    if_1 : IF LPAR exp if_point RPAR L_C_BRACKET estatuto if_2 R_C_BRACKET if_3 SEMICOLON if_point_2\n    \n    if_2 :  estatuto if_2 \n            | empty\n    \n    if_3 : ELSE if_point_3 L_C_BRACKET estatuto if_2 R_C_BRACKET\n            | empty\n    \n    if_point : empty\n    \n    if_point_2 : empty\n    \n    if_point_3 : empty\n    \n    for_l : FOR LPAR ID for_point_1 EQUAL exp for_point_2 TO exp for_point_3 RPAR L_C_BRACKET estatuto for_l_2 R_C_BRACKET SEMICOLON for_point_4\n    \n    for_l_2 : estatuto for_l_2\n                | empty\n    \n    for_point_1 : empty\n    \n    for_point_2 : empty\n    \n    for_point_3 : empty\n    \n    for_point_4 : empty\n    \n    while_l : WHILE while_point LPAR exp RPAR while_point_2 L_C_BRACKET estatuto while_l_2 R_C_BRACKET SEMICOLON while_point_3\n    \n    while_l_2 : estatuto while_l_2\n                    | empty\n    \n    while_point : empty\n    \n    while_point_2 : empty\n    \n    while_point_3 : empty\n    \n    return : RETURN LPAR exp check_valid_func RPAR SEMICOLON\n    \n    check_valid_func : empty\n    \n    func_extra : empty\n    \n    exp : t_exp add_operator_4 exp_2 \n    \n    exp_2 : OR add_operator exp \n            | empty\n    \n    t_exp : g_exp add_operator_4 t_exp_2 \n    \n    t_exp_2 : AND add_operator t_exp \n                | empty\n    \n    g_exp : m_exp g_exp_2 add_operator_3\n    \n    g_exp_2 : LESS_EQUAL add_operator m_exp \n                | LESS add_operator m_exp \n                | GREATER_EQUAL add_operator m_exp \n                | GREATER add_operator m_exp \n                | COMPARE add_operator m_exp \n                | NOT_EQUAL add_operator m_exp \n                | empty\n    \n    m_exp : t add_operator_2 m_exp_2\n    \n    m_exp_2 : PLUS add_operator m_exp \n                | MINUS add_operator m_exp\n                | empty\n    \n    t : f add_operator_1 t_2\n    \n    t_2 : TIMES add_operator t \n            | DIVIDE add_operator t\n            | empty\n    \n    f : LPAR add_floor exp RPAR remove_floor\n            | variable\n            | llamada\n            | f_2\n    \n    f_2 : CTE_I add_constant_i\n            | CTE_F add_constant_f\n    \n    add_floor : empty\n    \n    remove_floor : empty\n    \n    add_operator : empty \n    \n    add_operator_1 : empty \n    \n    add_operator_2 : empty \n    \n    add_operator_3 : empty \n    \n    add_operator_4 : empty \n    \n    add_constant_i : empty\n    \n    add_constant_s : empty\n    \n    add_constant_f : empty\n    \n    function : FUNC function_2 SEMICOLON function_4\n    \n    function_2 : function_3 ID function_punto1 LPAR param punto_param_2 RPAR L_C_BRACKET body R_C_BRACKET final_func_point\n    \n    function_3 : tipo_simple\n                    | VOID\n    \n    function_4 : function\n                    | empty\n    \n    function_punto1 : empty\n    \n    func_agrega_v : empty\n    \n    final_func_point : empty\n    \n    empty : \n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,75,100,101,],[0,-1,-145,-9,-11,]),'ID':([2,3,4,17,18,19,20,21,22,29,37,38,39,40,41,42,44,62,66,67,69,76,77,78,79,80,81,82,83,84,85,86,95,102,104,105,106,108,110,111,112,113,116,122,123,125,147,156,157,158,161,167,168,169,170,171,172,186,209,212,216,217,218,219,220,221,223,224,227,228,230,238,242,243,246,247,250,251,258,259,260,261,263,264,266,270,283,286,287,289,290,291,295,297,305,309,310,311,312,313,314,315,316,317,319,321,325,326,327,],[-145,5,-2,31,34,-18,-15,-16,-17,-145,51,-138,-139,-19,-34,-35,31,-145,88,-143,98,88,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-97,88,-97,-145,124,124,141,124,124,146,124,124,-128,-145,124,124,124,-126,124,-145,-145,-145,-145,-145,-145,124,-145,-145,124,124,124,124,124,124,-145,-145,-145,-145,124,124,-58,124,-60,-63,124,124,124,124,124,124,-66,-68,88,-95,88,88,88,-97,124,88,88,-97,-145,-145,-74,-80,88,88,-89,-94,88,88,88,-97,-145,-82,-88,]),'COLON':([5,],[6,]),'VAR':([6,29,54,149,],[11,11,11,11,]),'FUNC':([6,8,9,10,14,15,29,40,41,42,50,],[-145,-145,-5,-6,28,-4,-145,-19,-34,-35,28,]),'MAIN':([6,7,8,9,10,14,15,25,26,27,29,40,41,42,50,55,56,57,],[-145,13,-145,-5,-6,-145,-4,-3,-7,-8,-145,-19,-34,-35,-145,-136,-140,-141,]),'DATAFRAME':([11,],[19,]),'INT':([11,28,63,151,],[20,20,20,20,]),'FLOAT':([11,28,63,151,],[21,21,21,21,]),'CHAR':([11,28,63,151,],[22,22,22,22,]),'LPAR':([13,23,24,51,58,59,88,89,90,91,92,93,94,105,106,108,111,112,114,115,116,122,123,124,125,147,156,157,158,161,167,168,169,170,171,172,186,209,212,216,217,218,219,220,221,223,224,227,228,230,238,243,250,251,258,259,260,261,290,],[-145,35,-10,-145,63,-142,106,110,111,112,113,-145,116,-145,125,125,125,125,147,-92,125,125,-128,156,-145,125,125,125,-126,125,-145,-145,-145,-145,-145,-145,125,-145,-145,125,125,125,125,125,125,-145,-145,-145,-145,125,125,125,125,125,125,125,125,125,125,]),'SEMICOLON':([16,30,31,32,33,34,36,43,45,46,48,52,64,65,72,73,74,107,109,120,124,127,128,129,130,131,132,133,134,135,136,137,138,153,154,155,163,164,165,166,173,174,175,176,177,178,179,180,181,182,201,202,205,206,208,210,211,213,214,215,222,225,226,229,231,232,233,234,240,241,245,246,252,253,254,255,256,257,271,272,274,275,276,277,278,279,280,281,282,293,298,300,304,322,324,],[29,-20,-145,-21,-23,-145,50,-22,-26,-24,-26,-25,-145,75,-27,-31,-32,-145,-45,-145,-145,-145,-145,-145,-145,-145,-121,-122,-123,-145,-145,-42,-43,-30,-33,-145,-145,-132,-145,-145,-111,-145,-130,-145,-129,-124,-133,-125,-135,-145,242,-59,246,247,-98,-100,-101,-103,-104,-131,-112,-115,-116,-119,-44,-47,263,264,270,-145,-145,-60,-105,-106,-107,-108,-109,-110,-137,-144,-120,-127,-99,-102,-113,-114,-117,-118,-46,-145,305,-78,309,-77,325,]),'VOID':([28,],[39,]),'READ':([29,40,41,42,62,66,67,76,77,78,79,80,81,82,83,84,85,86,95,102,104,242,246,247,263,264,266,270,283,286,287,289,291,295,297,305,309,310,311,312,313,314,315,316,317,319,321,325,326,327,],[-145,-19,-34,-35,-145,89,-143,89,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-97,89,-97,-58,-60,-63,-66,-68,89,-95,89,89,89,-97,89,89,-97,-145,-145,-74,-80,89,89,-89,-94,89,89,89,-97,-145,-82,-88,]),'WRITE':([29,40,41,42,62,66,67,76,77,78,79,80,81,82,83,84,85,86,95,102,104,242,246,247,263,264,266,270,283,286,287,289,291,295,297,305,309,310,311,312,313,314,315,316,317,319,321,325,326,327,],[-145,-19,-34,-35,-145,90,-143,90,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-97,90,-97,-58,-60,-63,-66,-68,90,-95,90,90,90,-97,90,90,-97,-145,-145,-74,-80,90,90,-89,-94,90,90,90,-97,-145,-82,-88,]),'IF':([29,40,41,42,62,66,67,76,77,78,79,80,81,82,83,84,85,86,95,102,104,242,246,247,263,264,266,270,283,286,287,289,291,295,297,305,309,310,311,312,313,314,315,316,317,319,321,325,326,327,],[-145,-19,-34,-35,-145,91,-143,91,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-97,91,-97,-58,-60,-63,-66,-68,91,-95,91,91,91,-97,91,91,-97,-145,-145,-74,-80,91,91,-89,-94,91,91,91,-97,-145,-82,-88,]),'FOR':([29,40,41,42,62,66,67,76,77,78,79,80,81,82,83,84,85,86,95,102,104,242,246,247,263,264,266,270,283,286,287,289,291,295,297,305,309,310,311,312,313,314,315,316,317,319,321,325,326,327,],[-145,-19,-34,-35,-145,92,-143,92,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-97,92,-97,-58,-60,-63,-66,-68,92,-95,92,92,92,-97,92,92,-97,-145,-145,-74,-80,92,92,-89,-94,92,92,92,-97,-145,-82,-88,]),'WHILE':([29,40,41,42,62,66,67,76,77,78,79,80,81,82,83,84,85,86,95,102,104,242,246,247,263,264,266,270,283,286,287,289,291,295,297,305,309,310,311,312,313,314,315,316,317,319,321,325,326,327,],[-145,-19,-34,-35,-145,93,-143,93,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-97,93,-97,-58,-60,-63,-66,-68,93,-95,93,93,93,-97,93,93,-97,-145,-145,-74,-80,93,93,-89,-94,93,93,93,-97,-145,-82,-88,]),'RETURN':([29,40,41,42,62,66,67,76,77,78,79,80,81,82,83,84,85,86,95,102,104,242,246,247,263,264,266,270,283,286,287,289,291,295,297,305,309,310,311,312,313,314,315,316,317,319,321,325,326,327,],[-145,-19,-34,-35,-145,94,-143,94,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-97,94,-97,-58,-60,-63,-66,-68,94,-95,94,94,94,-97,94,94,-97,-145,-145,-74,-80,94,94,-89,-94,94,94,94,-97,-145,-82,-88,]),'R_C_BRACKET':([29,40,41,42,61,62,66,67,76,77,78,79,80,81,82,83,84,85,86,95,102,103,104,121,199,242,246,247,263,264,266,270,283,286,287,288,289,291,292,295,296,297,303,305,309,310,311,312,313,314,315,316,317,318,319,320,321,323,325,326,327,],[-145,-19,-34,-35,65,-145,-145,-143,-145,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-97,-145,-12,-14,-13,241,-58,-60,-63,-66,-68,-145,-95,-145,-145,-145,293,-76,-145,-75,-145,304,-91,-90,-145,-145,-74,-80,-145,-145,-89,-94,-145,-145,322,-145,324,-84,-83,-145,-82,-88,]),'COMMA':([31,34,98,107,109,118,119,124,126,127,128,129,130,131,132,133,134,135,136,137,138,142,143,144,163,164,165,166,173,174,175,176,177,178,179,180,181,182,188,189,190,191,203,207,208,210,211,213,214,215,222,225,226,229,231,232,235,236,245,246,252,253,254,255,256,257,273,274,275,276,277,278,279,280,281,282,],[44,44,-145,-145,-45,151,-40,-145,161,-145,-145,-145,-145,-145,-121,-122,-123,-145,-145,-42,-43,186,-145,-145,-145,-132,-145,-145,-111,-145,-130,-145,-129,-124,-133,-125,-135,-145,-69,-73,-145,-134,243,161,-98,-100,-101,-103,-104,-131,-112,-115,-116,-119,-44,-47,186,-70,-145,-60,-105,-106,-107,-108,-109,-110,243,-120,-127,-99,-102,-113,-114,-117,-118,-46,]),'L_S_BRACKET':([34,47,48,64,88,124,141,182,],[-145,53,-29,71,108,108,108,230,]),'RPAR':([35,63,68,70,96,97,98,107,109,118,119,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,148,150,151,152,159,160,162,163,164,165,166,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,196,197,198,200,203,204,207,208,210,211,213,214,215,222,225,226,229,231,232,235,236,244,245,246,248,249,252,253,254,255,256,257,265,273,274,275,276,277,278,279,280,281,282,294,301,302,],[49,-145,-145,-37,117,-41,-145,-145,-45,-145,-40,-145,-145,-145,-145,-145,-145,-145,-121,-122,-123,-145,-145,-42,-43,-145,-145,-145,-145,-145,-145,-145,-36,-145,-39,205,206,-62,-145,-132,-145,-145,-111,-145,-130,-145,-129,-124,-133,-125,-135,-145,233,-67,234,-72,-69,-73,-145,-134,237,-79,239,240,-96,-38,-145,245,-145,-98,-100,-101,-103,-104,-131,-112,-115,-116,-119,-44,-47,-145,-70,-62,-145,-60,-61,-64,-105,-106,-107,-108,-109,-110,-71,-145,-120,-127,-99,-102,-113,-114,-117,-118,-46,-145,308,-87,]),'L_C_BRACKET':([49,117,237,239,268,269,299,306,307,308,],[54,149,266,-145,286,-93,-145,312,-81,313,]),'CTE_I':([53,71,105,106,108,111,112,116,122,123,125,147,156,157,158,161,167,168,169,170,171,172,186,209,212,216,217,218,219,220,221,223,224,227,228,230,238,243,250,251,258,259,260,261,290,],[60,99,-145,135,135,135,135,135,135,-128,-145,135,135,135,-126,135,-145,-145,-145,-145,-145,-145,135,-145,-145,135,135,135,135,135,135,-145,-145,-145,-145,135,135,135,135,135,135,135,135,135,135,]),'R_S_BRACKET':([60,99,107,109,124,127,128,129,130,131,132,133,134,135,136,137,138,139,163,164,165,166,173,174,175,176,177,178,179,180,181,182,208,210,211,213,214,215,222,225,226,229,231,232,245,246,252,253,254,255,256,257,262,274,275,276,277,278,279,280,281,282,],[64,120,-145,-45,-145,-145,-145,-145,-145,-145,-121,-122,-123,-145,-145,-42,-43,182,-145,-132,-145,-145,-111,-145,-130,-145,-129,-124,-133,-125,-135,-145,-98,-100,-101,-103,-104,-131,-112,-115,-116,-119,-44,-47,-145,-60,-105,-106,-107,-108,-109,-110,282,-120,-127,-99,-102,-113,-114,-117,-118,-46,]),'EQUAL':([87,88,107,109,137,138,146,182,194,195,231,232,282,],[105,-145,-145,-45,-42,-43,-145,-145,238,-85,-44,-47,-46,]),'CTE_F':([105,106,108,111,112,116,122,123,125,147,156,157,158,161,167,168,169,170,171,172,186,209,212,216,217,218,219,220,221,223,224,227,228,230,238,243,250,251,258,259,260,261,290,],[-145,136,136,136,136,136,136,-128,-145,136,136,136,-126,136,-145,-145,-145,-145,-145,-145,136,-145,-145,136,136,136,136,136,136,-145,-145,-145,-145,136,136,136,136,136,136,136,136,136,136,]),'TIMES':([107,109,124,131,132,133,134,135,136,137,138,176,177,178,179,180,181,182,231,232,245,246,274,275,282,],[-145,-45,-145,-145,-121,-122,-123,-145,-145,-42,-43,227,-129,-124,-133,-125,-135,-145,-44,-47,-145,-60,-120,-127,-46,]),'DIVIDE':([107,109,124,131,132,133,134,135,136,137,138,176,177,178,179,180,181,182,231,232,245,246,274,275,282,],[-145,-45,-145,-145,-121,-122,-123,-145,-145,-42,-43,228,-129,-124,-133,-125,-135,-145,-44,-47,-145,-60,-120,-127,-46,]),'PLUS':([107,109,124,130,131,132,133,134,135,136,137,138,174,175,176,177,178,179,180,181,182,226,229,231,232,245,246,274,275,280,281,282,],[-145,-45,-145,-145,-145,-121,-122,-123,-145,-145,-42,-43,223,-130,-145,-129,-124,-133,-125,-135,-145,-116,-119,-44,-47,-145,-60,-120,-127,-117,-118,-46,]),'MINUS':([107,109,124,130,131,132,133,134,135,136,137,138,174,175,176,177,178,179,180,181,182,226,229,231,232,245,246,274,275,280,281,282,],[-145,-45,-145,-145,-145,-121,-122,-123,-145,-145,-42,-43,224,-130,-145,-129,-124,-133,-125,-135,-145,-116,-119,-44,-47,-145,-60,-120,-127,-117,-118,-46,]),'LESS_EQUAL':([107,109,124,129,130,131,132,133,134,135,136,137,138,174,175,176,177,178,179,180,181,182,222,225,226,229,231,232,245,246,274,275,278,279,280,281,282,],[-145,-45,-145,167,-145,-145,-121,-122,-123,-145,-145,-42,-43,-145,-130,-145,-129,-124,-133,-125,-135,-145,-112,-115,-116,-119,-44,-47,-145,-60,-120,-127,-113,-114,-117,-118,-46,]),'LESS':([107,109,124,129,130,131,132,133,134,135,136,137,138,174,175,176,177,178,179,180,181,182,222,225,226,229,231,232,245,246,274,275,278,279,280,281,282,],[-145,-45,-145,168,-145,-145,-121,-122,-123,-145,-145,-42,-43,-145,-130,-145,-129,-124,-133,-125,-135,-145,-112,-115,-116,-119,-44,-47,-145,-60,-120,-127,-113,-114,-117,-118,-46,]),'GREATER_EQUAL':([107,109,124,129,130,131,132,133,134,135,136,137,138,174,175,176,177,178,179,180,181,182,222,225,226,229,231,232,245,246,274,275,278,279,280,281,282,],[-145,-45,-145,169,-145,-145,-121,-122,-123,-145,-145,-42,-43,-145,-130,-145,-129,-124,-133,-125,-135,-145,-112,-115,-116,-119,-44,-47,-145,-60,-120,-127,-113,-114,-117,-118,-46,]),'GREATER':([107,109,124,129,130,131,132,133,134,135,136,137,138,174,175,176,177,178,179,180,181,182,222,225,226,229,231,232,245,246,274,275,278,279,280,281,282,],[-145,-45,-145,170,-145,-145,-121,-122,-123,-145,-145,-42,-43,-145,-130,-145,-129,-124,-133,-125,-135,-145,-112,-115,-116,-119,-44,-47,-145,-60,-120,-127,-113,-114,-117,-118,-46,]),'COMPARE':([107,109,124,129,130,131,132,133,134,135,136,137,138,174,175,176,177,178,179,180,181,182,222,225,226,229,231,232,245,246,274,275,278,279,280,281,282,],[-145,-45,-145,171,-145,-145,-121,-122,-123,-145,-145,-42,-43,-145,-130,-145,-129,-124,-133,-125,-135,-145,-112,-115,-116,-119,-44,-47,-145,-60,-120,-127,-113,-114,-117,-118,-46,]),'NOT_EQUAL':([107,109,124,129,130,131,132,133,134,135,136,137,138,174,175,176,177,178,179,180,181,182,222,225,226,229,231,232,245,246,274,275,278,279,280,281,282,],[-145,-45,-145,172,-145,-145,-121,-122,-123,-145,-145,-42,-43,-145,-130,-145,-129,-124,-133,-125,-135,-145,-112,-115,-116,-119,-44,-47,-145,-60,-120,-127,-113,-114,-117,-118,-46,]),'AND':([107,109,124,128,129,130,131,132,133,134,135,136,137,138,164,165,166,173,174,175,176,177,178,179,180,181,182,214,215,222,225,226,229,231,232,245,246,252,253,254,255,256,257,274,275,278,279,280,281,282,],[-145,-45,-145,-145,-145,-145,-145,-121,-122,-123,-145,-145,-42,-43,-132,212,-145,-111,-145,-130,-145,-129,-124,-133,-125,-135,-145,-104,-131,-112,-115,-116,-119,-44,-47,-145,-60,-105,-106,-107,-108,-109,-110,-120,-127,-113,-114,-117,-118,-46,]),'OR':([107,109,124,127,128,129,130,131,132,133,134,135,136,137,138,163,164,165,166,173,174,175,176,177,178,179,180,181,182,211,213,214,215,222,225,226,229,231,232,245,246,252,253,254,255,256,257,274,275,277,278,279,280,281,282,],[-145,-45,-145,-145,-145,-145,-145,-145,-121,-122,-123,-145,-145,-42,-43,209,-132,-145,-145,-111,-145,-130,-145,-129,-124,-133,-125,-135,-145,-101,-103,-104,-131,-112,-115,-116,-119,-44,-47,-145,-60,-105,-106,-107,-108,-109,-110,-120,-127,-102,-113,-114,-117,-118,-46,]),'TO':([107,109,124,127,128,129,130,131,132,133,134,135,136,137,138,163,164,165,166,173,174,175,176,177,178,179,180,181,182,208,210,211,213,214,215,222,225,226,229,231,232,245,246,252,253,254,255,256,257,267,274,275,276,277,278,279,280,281,282,284,285,],[-145,-45,-145,-145,-145,-145,-145,-145,-121,-122,-123,-145,-145,-42,-43,-145,-132,-145,-145,-111,-145,-130,-145,-129,-124,-133,-125,-135,-145,-98,-100,-101,-103,-104,-131,-112,-115,-116,-119,-44,-47,-145,-60,-105,-106,-107,-108,-109,-110,-145,-120,-127,-99,-102,-113,-114,-117,-118,-46,290,-86,]),'CTE_S':([111,186,],[144,144,]),'ELSE':([293,],[299,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_point':([2,],[3,]),'empty':([2,6,8,13,14,29,31,34,50,51,62,63,64,66,68,75,76,88,93,98,102,105,107,118,120,124,125,126,127,128,129,130,131,135,136,140,141,142,143,144,145,146,148,151,155,163,165,166,167,168,169,170,171,172,174,176,182,190,203,207,209,212,223,224,227,228,235,239,241,245,266,267,273,283,286,287,291,293,294,295,299,305,309,312,313,316,317,319,325,],[4,10,15,24,27,42,45,48,57,59,67,70,74,95,97,101,104,109,115,119,104,123,138,152,154,109,158,162,164,164,173,175,177,179,181,184,109,187,189,191,193,195,198,70,202,210,213,215,123,123,123,123,123,123,225,229,232,189,244,162,123,123,123,123,123,123,187,269,272,275,95,285,244,289,95,289,297,300,302,297,307,311,315,95,95,289,321,321,327,]),'modules':([6,],[7,]),'modules_2':([6,],[8,]),'vars':([6,29,54,149,],[9,41,62,62,]),'main':([7,],[12,]),'modules_point':([8,],[14,]),'vars_2':([11,],[16,]),'tipo_comp':([11,],[17,]),'tipo_simple':([11,28,63,151,],[18,38,69,69,]),'main_point':([13,],[23,]),'modules_3':([14,],[25,]),'function':([14,50,],[26,56,]),'vars_3':([17,18,44,],[30,33,52,]),'vars_4':([18,],[32,]),'function_2':([28,],[36,]),'function_3':([28,],[37,]),'vars_8':([29,],[40,]),'vars_5':([31,34,],[43,43,]),'vars_6':([34,],[46,]),'punto_id_especial':([34,],[47,]),'function_4':([50,],[55,]),'function_punto1':([51,],[58,]),'body':([54,149,],[61,199,]),'func_agrega_v':([62,],[66,]),'param':([63,151,],[68,200,]),'vars_7':([64,],[72,]),'var_array':([64,],[73,]),'estatuto':([66,76,102,266,283,286,287,291,295,312,313,316,317,319,],[76,102,102,283,287,291,287,295,295,316,317,287,319,319,]),'asigna':([66,76,102,266,283,286,287,291,295,312,313,316,317,319,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'llamada':([66,76,102,106,108,111,112,116,122,147,156,157,161,186,216,217,218,219,220,221,230,238,243,250,251,258,259,260,261,266,283,286,287,290,291,295,312,313,316,317,319,],[78,78,78,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,78,78,78,78,133,78,78,78,78,78,78,78,]),'llamada_void':([66,76,102,266,283,286,287,291,295,312,313,316,317,319,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'read':([66,76,102,266,283,286,287,291,295,312,313,316,317,319,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'write':([66,76,102,266,283,286,287,291,295,312,313,316,317,319,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'if_1':([66,76,102,266,283,286,287,291,295,312,313,316,317,319,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'for_l':([66,76,102,266,283,286,287,291,295,312,313,316,317,319,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'while_l':([66,76,102,266,283,286,287,291,295,312,313,316,317,319,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'return':([66,76,102,266,283,286,287,291,295,312,313,316,317,319,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'func_extra':([66,76,102,266,283,286,287,291,295,312,313,316,317,319,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'variable':([66,76,102,106,108,110,111,112,116,122,147,156,157,161,186,216,217,218,219,220,221,230,238,243,250,251,258,259,260,261,266,283,286,287,290,291,295,312,313,316,317,319,],[87,87,87,132,132,140,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,87,87,87,87,132,87,87,87,87,87,87,87,]),'punto_param_2':([68,],[96,]),'main_final':([75,],[100,]),'body_2':([76,102,],[103,121,]),'variable_2':([88,124,141,],[107,107,107,]),'while_point':([93,],[114,]),'punto_param':([98,],[118,]),'add_operator':([105,167,168,169,170,171,172,209,212,223,224,227,228,],[122,216,217,218,219,220,221,250,251,258,259,260,261,]),'exp':([106,108,111,112,116,122,147,156,157,161,186,230,238,243,250,290,],[126,139,143,145,148,155,196,203,204,207,143,262,267,273,276,294,]),'t_exp':([106,108,111,112,116,122,147,156,157,161,186,230,238,243,250,251,290,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,277,127,]),'g_exp':([106,108,111,112,116,122,147,156,157,161,186,230,238,243,250,251,290,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'m_exp':([106,108,111,112,116,122,147,156,157,161,186,216,217,218,219,220,221,230,238,243,250,251,258,259,290,],[129,129,129,129,129,129,129,129,129,129,129,252,253,254,255,256,257,129,129,129,129,129,278,279,129,]),'t':([106,108,111,112,116,122,147,156,157,161,186,216,217,218,219,220,221,230,238,243,250,251,258,259,260,261,290,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,280,281,130,]),'f':([106,108,111,112,116,122,147,156,157,161,186,216,217,218,219,220,221,230,238,243,250,251,258,259,260,261,290,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'f_2':([106,108,111,112,116,122,147,156,157,161,186,216,217,218,219,220,221,230,238,243,250,251,258,259,260,261,290,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'variable_point':([107,],[137,]),'write_2':([111,186,],[142,235,]),'param_2':([118,],[150,]),'var_mat':([120,],[153,]),'add_floor':([125,],[157,]),'llamada_2':([126,203,207,273,],[159,159,248,248,]),'llamada_void_2':([126,207,],[160,249,]),'add_operator_4':([127,128,],[163,165,]),'g_exp_2':([129,],[166,]),'add_operator_2':([130,],[174,]),'add_operator_1':([131,],[176,]),'add_constant_i':([135,],[178,]),'add_constant_f':([136,],[180,]),'read_point':([140,],[183,]),'write_3':([142,235,],[185,265,]),'write_point':([143,190,],[188,236,]),'add_constant_s':([144,],[190,]),'if_point':([145,],[192,]),'for_point_1':([146,],[194,]),'check_valid_func':([148,],[197,]),'asigna_point':([155,],[201,]),'exp_2':([163,],[208,]),'t_exp_2':([165,],[211,]),'add_operator_3':([166,],[214,]),'m_exp_2':([174,],[222,]),'t_2':([176,],[226,]),'variable_3':([182,],[231,]),'while_point_2':([239,],[268,]),'final_func_point':([241,],[271,]),'remove_floor':([245,],[274,]),'for_point_2':([267,],[284,]),'if_2':([283,287,316,],[288,292,318,]),'while_l_2':([291,295,],[296,303,]),'if_3':([293,],[298,]),'for_point_3':([294,],[301,]),'if_point_3':([299,],[306,]),'if_point_2':([305,],[310,]),'while_point_3':([309,],[314,]),'for_l_2':([317,319,],[320,323,]),'for_point_4':([325,],[326,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM program_point ID COLON modules main','program',6,'p_program','parser_1.py',54),
  ('program_point -> empty','program_point',1,'p_program_point','parser_1.py',59),
  ('modules -> modules_2 modules_point modules_3','modules',3,'p_modules','parser_1.py',66),
  ('modules_point -> empty','modules_point',1,'p_modules_point','parser_1.py',71),
  ('modules_2 -> vars','modules_2',1,'p_modules_2','parser_1.py',101),
  ('modules_2 -> empty','modules_2',1,'p_modules_2','parser_1.py',102),
  ('modules_3 -> function','modules_3',1,'p_modules_3','parser_1.py',107),
  ('modules_3 -> empty','modules_3',1,'p_modules_3','parser_1.py',108),
  ('main -> MAIN main_point LPAR RPAR L_C_BRACKET body R_C_BRACKET SEMICOLON main_final','main',9,'p_main','parser_1.py',113),
  ('main_point -> empty','main_point',1,'p_main_point','parser_1.py',118),
  ('main_final -> empty','main_final',1,'p_main_final','parser_1.py',126),
  ('body -> vars func_agrega_v estatuto body_2','body',4,'p_body','parser_1.py',134),
  ('body_2 -> estatuto body_2','body_2',2,'p_body_2','parser_1.py',140),
  ('body_2 -> empty','body_2',1,'p_body_2','parser_1.py',141),
  ('tipo_simple -> INT','tipo_simple',1,'p_tipo_simple','parser_1.py',146),
  ('tipo_simple -> FLOAT','tipo_simple',1,'p_tipo_simple','parser_1.py',147),
  ('tipo_simple -> CHAR','tipo_simple',1,'p_tipo_simple','parser_1.py',148),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','parser_1.py',155),
  ('vars -> VAR vars_2 SEMICOLON vars_8','vars',4,'p_vars','parser_1.py',162),
  ('vars_2 -> tipo_comp vars_3','vars_2',2,'p_vars_2','parser_1.py',168),
  ('vars_2 -> tipo_simple vars_4','vars_2',2,'p_vars_2','parser_1.py',169),
  ('vars_3 -> ID vars_5','vars_3',2,'p_vars_3','parser_1.py',174),
  ('vars_4 -> vars_3','vars_4',1,'p_vars_4','parser_1.py',189),
  ('vars_4 -> ID vars_6','vars_4',2,'p_vars_4','parser_1.py',190),
  ('vars_5 -> COMMA vars_3','vars_5',2,'p_vars_5','parser_1.py',195),
  ('vars_5 -> empty','vars_5',1,'p_vars_5','parser_1.py',196),
  ('vars_6 -> punto_id_especial L_S_BRACKET CTE_I R_S_BRACKET vars_7','vars_6',5,'p_vars_6','parser_1.py',201),
  ('vars_6 -> empty','vars_6',1,'p_vars_6','parser_1.py',202),
  ('punto_id_especial -> empty','punto_id_especial',1,'p_punto_id_especial','parser_1.py',206),
  ('vars_7 -> L_S_BRACKET CTE_I R_S_BRACKET var_mat','vars_7',4,'p_vars_7','parser_1.py',213),
  ('vars_7 -> var_array','vars_7',1,'p_vars_7','parser_1.py',214),
  ('var_array -> empty','var_array',1,'p_var_array','parser_1.py',219),
  ('var_mat -> empty','var_mat',1,'p_var_mat','parser_1.py',227),
  ('vars_8 -> vars','vars_8',1,'p_vars_8','parser_1.py',238),
  ('vars_8 -> empty','vars_8',1,'p_vars_8','parser_1.py',239),
  ('param -> tipo_simple ID punto_param param_2','param',4,'p_param','parser_1.py',244),
  ('param -> empty','param',1,'p_param','parser_1.py',245),
  ('param_2 -> COMMA param','param_2',2,'p_param_2','parser_1.py',250),
  ('param_2 -> empty','param_2',1,'p_param_2','parser_1.py',251),
  ('punto_param -> empty','punto_param',1,'p_punto_param','parser_1.py',256),
  ('punto_param_2 -> empty','punto_param_2',1,'p_punto_param_2','parser_1.py',268),
  ('variable -> ID variable_2 variable_point','variable',3,'p_variable','parser_1.py',277),
  ('variable_point -> empty','variable_point',1,'p_variable_point','parser_1.py',282),
  ('variable_2 -> L_S_BRACKET exp R_S_BRACKET variable_3','variable_2',4,'p_variable_2','parser_1.py',304),
  ('variable_2 -> empty','variable_2',1,'p_variable_2','parser_1.py',305),
  ('variable_3 -> L_S_BRACKET exp R_S_BRACKET','variable_3',3,'p_variable_3','parser_1.py',310),
  ('variable_3 -> empty','variable_3',1,'p_variable_3','parser_1.py',311),
  ('estatuto -> asigna','estatuto',1,'p_estatuto','parser_1.py',316),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','parser_1.py',317),
  ('estatuto -> llamada_void','estatuto',1,'p_estatuto','parser_1.py',318),
  ('estatuto -> read','estatuto',1,'p_estatuto','parser_1.py',319),
  ('estatuto -> write','estatuto',1,'p_estatuto','parser_1.py',320),
  ('estatuto -> if_1','estatuto',1,'p_estatuto','parser_1.py',321),
  ('estatuto -> for_l','estatuto',1,'p_estatuto','parser_1.py',322),
  ('estatuto -> while_l','estatuto',1,'p_estatuto','parser_1.py',323),
  ('estatuto -> return','estatuto',1,'p_estatuto','parser_1.py',324),
  ('estatuto -> func_extra','estatuto',1,'p_estatuto','parser_1.py',325),
  ('asigna -> variable EQUAL add_operator exp asigna_point SEMICOLON','asigna',6,'p_asigna','parser_1.py',330),
  ('asigna_point -> empty','asigna_point',1,'p_asigna_point','parser_1.py',335),
  ('llamada -> ID LPAR exp llamada_2 RPAR SEMICOLON','llamada',6,'p_llamada','parser_1.py',361),
  ('llamada_2 -> COMMA exp llamada_2','llamada_2',3,'p_llamada_2','parser_1.py',366),
  ('llamada_2 -> empty','llamada_2',1,'p_llamada_2','parser_1.py',367),
  ('llamada_void -> ID LPAR exp llamada_void_2 RPAR SEMICOLON','llamada_void',6,'p_llamada_void','parser_1.py',372),
  ('llamada_void_2 -> COMMA exp llamada_void_2','llamada_void_2',3,'p_llamada_void_2','parser_1.py',377),
  ('llamada_void_2 -> empty','llamada_void_2',1,'p_llamada_void_2','parser_1.py',378),
  ('read -> READ LPAR variable read_point RPAR SEMICOLON','read',6,'p_read','parser_1.py',383),
  ('read_point -> empty','read_point',1,'p_read_point','parser_1.py',388),
  ('write -> WRITE LPAR write_2 write_3 RPAR SEMICOLON','write',6,'p_write','parser_1.py',399),
  ('write_2 -> exp write_point','write_2',2,'p_write_2','parser_1.py',404),
  ('write_2 -> CTE_S add_constant_s write_point','write_2',3,'p_write_2','parser_1.py',405),
  ('write_3 -> COMMA write_2 write_3','write_3',3,'p_write_3','parser_1.py',410),
  ('write_3 -> empty','write_3',1,'p_write_3','parser_1.py',411),
  ('write_point -> empty','write_point',1,'p_write_point','parser_1.py',416),
  ('if_1 -> IF LPAR exp if_point RPAR L_C_BRACKET estatuto if_2 R_C_BRACKET if_3 SEMICOLON if_point_2','if_1',12,'p_if_1','parser_1.py',429),
  ('if_2 -> estatuto if_2','if_2',2,'p_if_2','parser_1.py',434),
  ('if_2 -> empty','if_2',1,'p_if_2','parser_1.py',435),
  ('if_3 -> ELSE if_point_3 L_C_BRACKET estatuto if_2 R_C_BRACKET','if_3',6,'p_if_3','parser_1.py',440),
  ('if_3 -> empty','if_3',1,'p_if_3','parser_1.py',441),
  ('if_point -> empty','if_point',1,'p_if_point','parser_1.py',446),
  ('if_point_2 -> empty','if_point_2',1,'p_if_point_2','parser_1.py',464),
  ('if_point_3 -> empty','if_point_3',1,'p_if_point_3','parser_1.py',474),
  ('for_l -> FOR LPAR ID for_point_1 EQUAL exp for_point_2 TO exp for_point_3 RPAR L_C_BRACKET estatuto for_l_2 R_C_BRACKET SEMICOLON for_point_4','for_l',17,'p_for_l','parser_1.py',486),
  ('for_l_2 -> estatuto for_l_2','for_l_2',2,'p_for_l_2','parser_1.py',492),
  ('for_l_2 -> empty','for_l_2',1,'p_for_l_2','parser_1.py',493),
  ('for_point_1 -> empty','for_point_1',1,'p_for_point_1','parser_1.py',498),
  ('for_point_2 -> empty','for_point_2',1,'p_for_point_2','parser_1.py',515),
  ('for_point_3 -> empty','for_point_3',1,'p_for_point_3','parser_1.py',540),
  ('for_point_4 -> empty','for_point_4',1,'p_for_point_4','parser_1.py',566),
  ('while_l -> WHILE while_point LPAR exp RPAR while_point_2 L_C_BRACKET estatuto while_l_2 R_C_BRACKET SEMICOLON while_point_3','while_l',12,'p_while_l','parser_1.py',594),
  ('while_l_2 -> estatuto while_l_2','while_l_2',2,'p_while_l_2','parser_1.py',599),
  ('while_l_2 -> empty','while_l_2',1,'p_while_l_2','parser_1.py',600),
  ('while_point -> empty','while_point',1,'p_while_point','parser_1.py',605),
  ('while_point_2 -> empty','while_point_2',1,'p_while_point_2','parser_1.py',613),
  ('while_point_3 -> empty','while_point_3',1,'p_while_point_3','parser_1.py',633),
  ('return -> RETURN LPAR exp check_valid_func RPAR SEMICOLON','return',6,'p_return','parser_1.py',644),
  ('check_valid_func -> empty','check_valid_func',1,'p_check_valid_func','parser_1.py',649),
  ('func_extra -> empty','func_extra',1,'p_func_extra','parser_1.py',664),
  ('exp -> t_exp add_operator_4 exp_2','exp',3,'p_exp','parser_1.py',669),
  ('exp_2 -> OR add_operator exp','exp_2',3,'p_exp_2','parser_1.py',674),
  ('exp_2 -> empty','exp_2',1,'p_exp_2','parser_1.py',675),
  ('t_exp -> g_exp add_operator_4 t_exp_2','t_exp',3,'p_t_exp','parser_1.py',680),
  ('t_exp_2 -> AND add_operator t_exp','t_exp_2',3,'p_t_exp_2','parser_1.py',685),
  ('t_exp_2 -> empty','t_exp_2',1,'p_t_exp_2','parser_1.py',686),
  ('g_exp -> m_exp g_exp_2 add_operator_3','g_exp',3,'p_g_exp','parser_1.py',691),
  ('g_exp_2 -> LESS_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',696),
  ('g_exp_2 -> LESS add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',697),
  ('g_exp_2 -> GREATER_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',698),
  ('g_exp_2 -> GREATER add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',699),
  ('g_exp_2 -> COMPARE add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',700),
  ('g_exp_2 -> NOT_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',701),
  ('g_exp_2 -> empty','g_exp_2',1,'p_g_exp_2','parser_1.py',702),
  ('m_exp -> t add_operator_2 m_exp_2','m_exp',3,'p_m_exp','parser_1.py',707),
  ('m_exp_2 -> PLUS add_operator m_exp','m_exp_2',3,'p_m_exp_2','parser_1.py',712),
  ('m_exp_2 -> MINUS add_operator m_exp','m_exp_2',3,'p_m_exp_2','parser_1.py',713),
  ('m_exp_2 -> empty','m_exp_2',1,'p_m_exp_2','parser_1.py',714),
  ('t -> f add_operator_1 t_2','t',3,'p_t','parser_1.py',719),
  ('t_2 -> TIMES add_operator t','t_2',3,'p_t_2','parser_1.py',724),
  ('t_2 -> DIVIDE add_operator t','t_2',3,'p_t_2','parser_1.py',725),
  ('t_2 -> empty','t_2',1,'p_t_2','parser_1.py',726),
  ('f -> LPAR add_floor exp RPAR remove_floor','f',5,'p_f','parser_1.py',731),
  ('f -> variable','f',1,'p_f','parser_1.py',732),
  ('f -> llamada','f',1,'p_f','parser_1.py',733),
  ('f -> f_2','f',1,'p_f','parser_1.py',734),
  ('f_2 -> CTE_I add_constant_i','f_2',2,'p_f_2','parser_1.py',739),
  ('f_2 -> CTE_F add_constant_f','f_2',2,'p_f_2','parser_1.py',740),
  ('add_floor -> empty','add_floor',1,'p_add_floor','parser_1.py',745),
  ('remove_floor -> empty','remove_floor',1,'p_remove_floor','parser_1.py',752),
  ('add_operator -> empty','add_operator',1,'p_add_operator','parser_1.py',759),
  ('add_operator_1 -> empty','add_operator_1',1,'p_add_operator_1','parser_1.py',768),
  ('add_operator_2 -> empty','add_operator_2',1,'p_add_operator_2','parser_1.py',797),
  ('add_operator_3 -> empty','add_operator_3',1,'p_add_operator_3','parser_1.py',826),
  ('add_operator_4 -> empty','add_operator_4',1,'p_add_operator_4','parser_1.py',855),
  ('add_constant_i -> empty','add_constant_i',1,'p_add_constant_i','parser_1.py',883),
  ('add_constant_s -> empty','add_constant_s',1,'p_add_constant_s','parser_1.py',901),
  ('add_constant_f -> empty','add_constant_f',1,'p_add_constant_f','parser_1.py',918),
  ('function -> FUNC function_2 SEMICOLON function_4','function',4,'p_function','parser_1.py',935),
  ('function_2 -> function_3 ID function_punto1 LPAR param punto_param_2 RPAR L_C_BRACKET body R_C_BRACKET final_func_point','function_2',11,'p_function_2','parser_1.py',940),
  ('function_3 -> tipo_simple','function_3',1,'p_function_3','parser_1.py',945),
  ('function_3 -> VOID','function_3',1,'p_function_3','parser_1.py',946),
  ('function_4 -> function','function_4',1,'p_function_4','parser_1.py',954),
  ('function_4 -> empty','function_4',1,'p_function_4','parser_1.py',955),
  ('function_punto1 -> empty','function_punto1',1,'p_function_punto1','parser_1.py',960),
  ('func_agrega_v -> empty','func_agrega_v',1,'p_func_agrega_v','parser_1.py',978),
  ('final_func_point -> empty','final_func_point',1,'p_final_func_point','parser_1.py',1004),
  ('empty -> <empty>','empty',0,'p_empty','parser_1.py',1028),
]
