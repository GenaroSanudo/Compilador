
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COLON COMMA COMPARE CTE_F CTE_I CTE_S DATAFRAME DIVIDE ELSE EQUAL FLOAT FOR FUNC GREATER GREATER_EQUAL ID IF INT LESS LESS_EQUAL LPAR L_C_BRACKET L_S_BRACKET MAIN MINUS NOT_EQUAL OR PLUS PROGRAM READ RETURN RPAR R_C_BRACKET R_S_BRACKET SEMICOLON STRING TIMES TO VAR VOID WHILE WRITE\n    program : PROGRAM program_point ID COLON modules main\n    \n    program_point : empty\n    \n    modules : modules_2 modules_point modules_3\n    \n    modules_point : empty\n    \n    modules_2 : vars\n                | empty\n    \n    modules_3 : function\n                    | empty\n    \n    main : MAIN main_point LPAR RPAR L_C_BRACKET body R_C_BRACKET SEMICOLON\n    \n    main_point : empty\n    \n    body : vars func_agrega_v estatuto body_2\n    \n    body_2 : estatuto body_2\n                | empty\n    \n    tipo_simple : INT \n                | FLOAT\n                | CHAR\n    \n    tipo_comp : DATAFRAME\n    \n    vars : VAR vars_2 SEMICOLON vars_8\n    \n    vars_2 : tipo_comp vars_3\n                        | tipo_simple vars_4\n    \n    vars_3 : ID vars_5\n    \n    vars_4 : vars_3 \n                | ID vars_6\n    \n    vars_5 : COMMA vars_3\n            | empty\n    \n    vars_6 : punto_id_especial L_S_BRACKET CTE_I R_S_BRACKET vars_7\n                | empty\n    \n    punto_id_especial : empty\n    \n    vars_7 : L_S_BRACKET CTE_I R_S_BRACKET var_mat\n                | var_array\n    \n    var_array : empty\n    \n    var_mat : empty\n    \n    vars_8 : vars \n                | empty\n    \n    param : tipo_simple ID punto_param param_2 \n                | empty\n    \n    param_2 : COMMA param\n                | empty\n    \n    punto_param : empty\n    \n    punto_param_2 : empty\n    \n    variable : ID variable_2 variable_point\n    \n    variable_point : empty\n    \n    variable_2 : L_S_BRACKET exp R_S_BRACKET variable_3 \n                    | empty\n    \n    variable_3 : L_S_BRACKET exp R_S_BRACKET\n                    | empty\n    \n    estatuto : asigna\n                | llamada\n                | llamada_void\n                | read\n                | write\n                | if_1\n                | for_l\n                | while_l\n                | return\n                | func_extra\n    \n    asigna : variable EQUAL add_operator exp asigna_point SEMICOLON\n    \n    asigna_point : empty\n    \n    llamada : ID LPAR exp llamada_2 RPAR SEMICOLON\n    \n    llamada_2 : COMMA exp llamada_2 \n                | empty\n    \n    llamada_void : ID LPAR exp llamada_void_2 RPAR SEMICOLON\n    \n    llamada_void_2 : COMMA exp llamada_void_2 \n                | empty\n    \n    read : READ LPAR variable read_point RPAR SEMICOLON\n    \n    read_point : empty\n    \n    write : WRITE LPAR write_2 write_3 RPAR SEMICOLON\n    \n    write_2 : exp write_point\n                | CTE_S add_constant_s write_point\n    \n    write_3 : COMMA write_2 write_3 \n                | empty\n    \n    write_point : empty\n    \n    if_1 : IF LPAR exp if_point RPAR L_C_BRACKET estatuto if_2 R_C_BRACKET if_3 SEMICOLON if_point_2\n    \n    if_2 :  estatuto if_2 \n            | empty\n    \n    if_3 : ELSE if_point_3 L_C_BRACKET estatuto if_2 R_C_BRACKET\n            | empty\n    \n    if_point : empty\n    \n    if_point_2 : empty\n    \n    if_point_3 : empty\n    \n    for_l : FOR LPAR ID for_point_1 EQUAL exp for_point_2 TO exp for_point_3 RPAR L_C_BRACKET estatuto for_l_2 R_C_BRACKET SEMICOLON for_point_4\n    \n    for_l_2 : estatuto for_l_2\n                | empty\n    \n    for_point_1 : empty\n    \n    for_point_2 : empty\n    \n    for_point_3 : empty\n    \n    for_point_4 : empty\n    \n    while_l : WHILE while_point LPAR exp RPAR while_point_2 L_C_BRACKET estatuto while_l_2 R_C_BRACKET SEMICOLON while_point_3\n    \n    while_l_2 : estatuto while_l_2\n                    | empty\n    \n    while_point : empty\n    \n    while_point_2 : empty\n    \n    while_point_3 : empty\n    \n    return : RETURN check_valid_func LPAR exp RPAR SEMICOLON\n    \n    check_valid_func : empty\n    \n    func_extra : empty\n    \n    exp : t_exp add_operator_4 exp_2 \n    \n    exp_2 : OR add_operator exp \n            | empty\n    \n    t_exp : g_exp add_operator_4 t_exp_2 \n    \n    t_exp_2 : AND add_operator t_exp \n                | empty\n    \n    g_exp : m_exp g_exp_2 add_operator_3\n    \n    g_exp_2 : LESS_EQUAL add_operator m_exp \n                | LESS add_operator m_exp \n                | GREATER_EQUAL add_operator m_exp \n                | GREATER add_operator m_exp \n                | COMPARE add_operator m_exp \n                | NOT_EQUAL add_operator m_exp \n                | empty\n    \n    m_exp : t add_operator_2 m_exp_2\n    \n    m_exp_2 : PLUS add_operator m_exp \n                | MINUS add_operator m_exp\n                | empty\n    \n    t : f add_operator_1 t_2\n    \n    t_2 : TIMES add_operator t \n            | DIVIDE add_operator t\n            | empty\n    \n    f : LPAR add_floor exp RPAR remove_floor\n            | variable\n            | llamada\n            | f_2\n    \n    f_2 : CTE_I add_constant_i\n            | CTE_F add_constant_f\n    \n    add_floor : empty\n    \n    remove_floor : empty\n    \n    add_operator : empty \n    \n    add_operator_1 : empty \n    \n    add_operator_2 : empty \n    \n    add_operator_3 : empty \n    \n    add_operator_4 : empty \n    \n    add_constant_i : empty\n    \n    add_constant_s : empty\n    \n    add_constant_f : empty\n    \n    function : FUNC function_2 SEMICOLON function_4\n    \n    function_2 : function_3 ID function_punto1 LPAR param punto_param_2 RPAR L_C_BRACKET body R_C_BRACKET final_func_point\n    \n    function_3 : tipo_simple\n                    | VOID\n    \n    function_4 : function\n                    | empty\n    \n    function_punto1 : empty\n    \n    func_agrega_v : empty\n    \n    final_func_point : empty\n    \n    empty : \n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,75,],[0,-1,-9,]),'ID':([2,3,4,17,18,19,20,21,22,29,37,38,39,40,41,42,44,62,66,67,69,76,77,78,79,80,81,82,83,84,85,86,95,100,102,103,104,106,108,109,110,111,121,122,124,146,147,155,156,157,160,166,167,168,169,170,171,185,207,210,214,215,216,217,218,219,221,222,225,226,228,236,240,241,244,245,248,249,256,257,258,259,261,262,264,268,281,284,285,287,288,289,293,295,303,307,308,309,310,311,312,313,314,315,317,319,323,324,325,],[-144,5,-2,31,34,-17,-14,-15,-16,-144,51,-137,-138,-18,-33,-34,31,-144,88,-142,98,88,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-96,88,-96,-144,123,123,140,123,123,145,123,-127,-144,123,123,123,123,-125,123,-144,-144,-144,-144,-144,-144,123,-144,-144,123,123,123,123,123,123,-144,-144,-144,-144,123,123,-57,123,-59,-62,123,123,123,123,123,123,-65,-67,88,-94,88,88,88,-96,123,88,88,-96,-144,-144,-73,-79,88,88,-88,-93,88,88,88,-96,-144,-81,-87,]),'COLON':([5,],[6,]),'VAR':([6,29,54,148,],[11,11,11,11,]),'FUNC':([6,8,9,10,14,15,29,40,41,42,50,],[-144,-144,-5,-6,28,-4,-144,-18,-33,-34,28,]),'MAIN':([6,7,8,9,10,14,15,25,26,27,29,40,41,42,50,55,56,57,],[-144,13,-144,-5,-6,-144,-4,-3,-7,-8,-144,-18,-33,-34,-144,-135,-139,-140,]),'DATAFRAME':([11,],[19,]),'INT':([11,28,63,150,],[20,20,20,20,]),'FLOAT':([11,28,63,150,],[21,21,21,21,]),'CHAR':([11,28,63,150,],[22,22,22,22,]),'LPAR':([13,23,24,51,58,59,88,89,90,91,92,93,94,103,104,106,109,110,112,113,114,115,121,122,123,124,146,147,155,156,157,160,166,167,168,169,170,171,185,207,210,214,215,216,217,218,219,221,222,225,226,228,236,241,248,249,256,257,258,259,288,],[-144,35,-10,-144,63,-141,104,108,109,110,111,-144,-144,-144,124,124,124,124,146,-91,147,-95,124,-127,155,-144,124,124,124,124,-125,124,-144,-144,-144,-144,-144,-144,124,-144,-144,124,124,124,124,124,124,-144,-144,-144,-144,124,124,124,124,124,124,124,124,124,124,]),'SEMICOLON':([16,30,31,32,33,34,36,43,45,46,48,52,64,65,72,73,74,105,107,119,123,126,127,128,129,130,131,132,133,134,135,136,137,152,153,154,162,163,164,165,172,173,174,175,176,177,178,179,180,181,199,200,203,204,206,208,209,211,212,213,220,223,224,227,229,230,231,232,238,239,243,244,250,251,252,253,254,255,269,270,272,273,274,275,276,277,278,279,280,291,296,298,302,320,322,],[29,-19,-144,-20,-22,-144,50,-21,-25,-23,-25,-24,-144,75,-26,-30,-31,-144,-44,-144,-144,-144,-144,-144,-144,-144,-120,-121,-122,-144,-144,-41,-42,-29,-32,-144,-144,-131,-144,-144,-110,-144,-129,-144,-128,-123,-132,-124,-134,-144,240,-58,244,245,-97,-99,-100,-102,-103,-130,-111,-114,-115,-118,-43,-46,261,262,268,-144,-144,-59,-104,-105,-106,-107,-108,-109,-136,-143,-119,-126,-98,-101,-112,-113,-116,-117,-45,-144,303,-77,307,-76,323,]),'VOID':([28,],[39,]),'READ':([29,40,41,42,62,66,67,76,77,78,79,80,81,82,83,84,85,86,95,100,102,240,244,245,261,262,264,268,281,284,285,287,289,293,295,303,307,308,309,310,311,312,313,314,315,317,319,323,324,325,],[-144,-18,-33,-34,-144,89,-142,89,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-96,89,-96,-57,-59,-62,-65,-67,89,-94,89,89,89,-96,89,89,-96,-144,-144,-73,-79,89,89,-88,-93,89,89,89,-96,-144,-81,-87,]),'WRITE':([29,40,41,42,62,66,67,76,77,78,79,80,81,82,83,84,85,86,95,100,102,240,244,245,261,262,264,268,281,284,285,287,289,293,295,303,307,308,309,310,311,312,313,314,315,317,319,323,324,325,],[-144,-18,-33,-34,-144,90,-142,90,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-96,90,-96,-57,-59,-62,-65,-67,90,-94,90,90,90,-96,90,90,-96,-144,-144,-73,-79,90,90,-88,-93,90,90,90,-96,-144,-81,-87,]),'IF':([29,40,41,42,62,66,67,76,77,78,79,80,81,82,83,84,85,86,95,100,102,240,244,245,261,262,264,268,281,284,285,287,289,293,295,303,307,308,309,310,311,312,313,314,315,317,319,323,324,325,],[-144,-18,-33,-34,-144,91,-142,91,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-96,91,-96,-57,-59,-62,-65,-67,91,-94,91,91,91,-96,91,91,-96,-144,-144,-73,-79,91,91,-88,-93,91,91,91,-96,-144,-81,-87,]),'FOR':([29,40,41,42,62,66,67,76,77,78,79,80,81,82,83,84,85,86,95,100,102,240,244,245,261,262,264,268,281,284,285,287,289,293,295,303,307,308,309,310,311,312,313,314,315,317,319,323,324,325,],[-144,-18,-33,-34,-144,92,-142,92,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-96,92,-96,-57,-59,-62,-65,-67,92,-94,92,92,92,-96,92,92,-96,-144,-144,-73,-79,92,92,-88,-93,92,92,92,-96,-144,-81,-87,]),'WHILE':([29,40,41,42,62,66,67,76,77,78,79,80,81,82,83,84,85,86,95,100,102,240,244,245,261,262,264,268,281,284,285,287,289,293,295,303,307,308,309,310,311,312,313,314,315,317,319,323,324,325,],[-144,-18,-33,-34,-144,93,-142,93,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-96,93,-96,-57,-59,-62,-65,-67,93,-94,93,93,93,-96,93,93,-96,-144,-144,-73,-79,93,93,-88,-93,93,93,93,-96,-144,-81,-87,]),'RETURN':([29,40,41,42,62,66,67,76,77,78,79,80,81,82,83,84,85,86,95,100,102,240,244,245,261,262,264,268,281,284,285,287,289,293,295,303,307,308,309,310,311,312,313,314,315,317,319,323,324,325,],[-144,-18,-33,-34,-144,94,-142,94,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-96,94,-96,-57,-59,-62,-65,-67,94,-94,94,94,94,-96,94,94,-96,-144,-144,-73,-79,94,94,-88,-93,94,94,94,-96,-144,-81,-87,]),'R_C_BRACKET':([29,40,41,42,61,62,66,67,76,77,78,79,80,81,82,83,84,85,86,95,100,101,102,120,197,240,244,245,261,262,264,268,281,284,285,286,287,289,290,293,294,295,301,303,307,308,309,310,311,312,313,314,315,316,317,318,319,321,323,324,325,],[-144,-18,-33,-34,65,-144,-144,-142,-144,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-96,-144,-11,-13,-12,239,-57,-59,-62,-65,-67,-144,-94,-144,-144,-144,291,-75,-144,-74,-144,302,-90,-89,-144,-144,-73,-79,-144,-144,-88,-93,-144,-144,320,-144,322,-83,-82,-144,-81,-87,]),'COMMA':([31,34,98,105,107,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,162,163,164,165,172,173,174,175,176,177,178,179,180,181,187,188,189,190,201,205,206,208,209,211,212,213,220,223,224,227,229,230,233,234,243,244,250,251,252,253,254,255,271,272,273,274,275,276,277,278,279,280,],[44,44,-144,-144,-44,150,-39,-144,160,-144,-144,-144,-144,-144,-120,-121,-122,-144,-144,-41,-42,185,-144,-144,-144,-131,-144,-144,-110,-144,-129,-144,-128,-123,-132,-124,-134,-144,-68,-72,-144,-133,241,160,-97,-99,-100,-102,-103,-130,-111,-114,-115,-118,-43,-46,185,-69,-144,-59,-104,-105,-106,-107,-108,-109,241,-119,-126,-98,-101,-112,-113,-116,-117,-45,]),'L_S_BRACKET':([34,47,48,64,88,123,140,181,],[-144,53,-28,71,106,106,106,228,]),'RPAR':([35,63,68,70,96,97,98,105,107,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,149,150,151,158,159,161,162,163,164,165,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,195,196,198,201,202,205,206,208,209,211,212,213,220,223,224,227,229,230,233,234,242,243,244,246,247,250,251,252,253,254,255,263,271,272,273,274,275,276,277,278,279,280,292,299,300,],[49,-144,-144,-36,116,-40,-144,-144,-44,-144,-39,-144,-144,-144,-144,-144,-144,-144,-120,-121,-122,-144,-144,-41,-42,-144,-144,-144,-144,-144,-144,-35,-144,-38,203,204,-61,-144,-131,-144,-144,-110,-144,-129,-144,-128,-123,-132,-124,-134,-144,231,-66,232,-71,-68,-72,-144,-133,235,-78,237,238,-37,-144,243,-144,-97,-99,-100,-102,-103,-130,-111,-114,-115,-118,-43,-46,-144,-69,-61,-144,-59,-60,-63,-104,-105,-106,-107,-108,-109,-70,-144,-119,-126,-98,-101,-112,-113,-116,-117,-45,-144,306,-86,]),'L_C_BRACKET':([49,116,235,237,266,267,297,304,305,306,],[54,148,264,-144,284,-92,-144,310,-80,311,]),'CTE_I':([53,71,103,104,106,109,110,121,122,124,146,147,155,156,157,160,166,167,168,169,170,171,185,207,210,214,215,216,217,218,219,221,222,225,226,228,236,241,248,249,256,257,258,259,288,],[60,99,-144,134,134,134,134,134,-127,-144,134,134,134,134,-125,134,-144,-144,-144,-144,-144,-144,134,-144,-144,134,134,134,134,134,134,-144,-144,-144,-144,134,134,134,134,134,134,134,134,134,134,]),'R_S_BRACKET':([60,99,105,107,123,126,127,128,129,130,131,132,133,134,135,136,137,138,162,163,164,165,172,173,174,175,176,177,178,179,180,181,206,208,209,211,212,213,220,223,224,227,229,230,243,244,250,251,252,253,254,255,260,272,273,274,275,276,277,278,279,280,],[64,119,-144,-44,-144,-144,-144,-144,-144,-144,-120,-121,-122,-144,-144,-41,-42,181,-144,-131,-144,-144,-110,-144,-129,-144,-128,-123,-132,-124,-134,-144,-97,-99,-100,-102,-103,-130,-111,-114,-115,-118,-43,-46,-144,-59,-104,-105,-106,-107,-108,-109,280,-119,-126,-98,-101,-112,-113,-116,-117,-45,]),'EQUAL':([87,88,105,107,136,137,145,181,193,194,229,230,280,],[103,-144,-144,-44,-41,-42,-144,-144,236,-84,-43,-46,-45,]),'CTE_F':([103,104,106,109,110,121,122,124,146,147,155,156,157,160,166,167,168,169,170,171,185,207,210,214,215,216,217,218,219,221,222,225,226,228,236,241,248,249,256,257,258,259,288,],[-144,135,135,135,135,135,-127,-144,135,135,135,135,-125,135,-144,-144,-144,-144,-144,-144,135,-144,-144,135,135,135,135,135,135,-144,-144,-144,-144,135,135,135,135,135,135,135,135,135,135,]),'TIMES':([105,107,123,130,131,132,133,134,135,136,137,175,176,177,178,179,180,181,229,230,243,244,272,273,280,],[-144,-44,-144,-144,-120,-121,-122,-144,-144,-41,-42,225,-128,-123,-132,-124,-134,-144,-43,-46,-144,-59,-119,-126,-45,]),'DIVIDE':([105,107,123,130,131,132,133,134,135,136,137,175,176,177,178,179,180,181,229,230,243,244,272,273,280,],[-144,-44,-144,-144,-120,-121,-122,-144,-144,-41,-42,226,-128,-123,-132,-124,-134,-144,-43,-46,-144,-59,-119,-126,-45,]),'PLUS':([105,107,123,129,130,131,132,133,134,135,136,137,173,174,175,176,177,178,179,180,181,224,227,229,230,243,244,272,273,278,279,280,],[-144,-44,-144,-144,-144,-120,-121,-122,-144,-144,-41,-42,221,-129,-144,-128,-123,-132,-124,-134,-144,-115,-118,-43,-46,-144,-59,-119,-126,-116,-117,-45,]),'MINUS':([105,107,123,129,130,131,132,133,134,135,136,137,173,174,175,176,177,178,179,180,181,224,227,229,230,243,244,272,273,278,279,280,],[-144,-44,-144,-144,-144,-120,-121,-122,-144,-144,-41,-42,222,-129,-144,-128,-123,-132,-124,-134,-144,-115,-118,-43,-46,-144,-59,-119,-126,-116,-117,-45,]),'LESS_EQUAL':([105,107,123,128,129,130,131,132,133,134,135,136,137,173,174,175,176,177,178,179,180,181,220,223,224,227,229,230,243,244,272,273,276,277,278,279,280,],[-144,-44,-144,166,-144,-144,-120,-121,-122,-144,-144,-41,-42,-144,-129,-144,-128,-123,-132,-124,-134,-144,-111,-114,-115,-118,-43,-46,-144,-59,-119,-126,-112,-113,-116,-117,-45,]),'LESS':([105,107,123,128,129,130,131,132,133,134,135,136,137,173,174,175,176,177,178,179,180,181,220,223,224,227,229,230,243,244,272,273,276,277,278,279,280,],[-144,-44,-144,167,-144,-144,-120,-121,-122,-144,-144,-41,-42,-144,-129,-144,-128,-123,-132,-124,-134,-144,-111,-114,-115,-118,-43,-46,-144,-59,-119,-126,-112,-113,-116,-117,-45,]),'GREATER_EQUAL':([105,107,123,128,129,130,131,132,133,134,135,136,137,173,174,175,176,177,178,179,180,181,220,223,224,227,229,230,243,244,272,273,276,277,278,279,280,],[-144,-44,-144,168,-144,-144,-120,-121,-122,-144,-144,-41,-42,-144,-129,-144,-128,-123,-132,-124,-134,-144,-111,-114,-115,-118,-43,-46,-144,-59,-119,-126,-112,-113,-116,-117,-45,]),'GREATER':([105,107,123,128,129,130,131,132,133,134,135,136,137,173,174,175,176,177,178,179,180,181,220,223,224,227,229,230,243,244,272,273,276,277,278,279,280,],[-144,-44,-144,169,-144,-144,-120,-121,-122,-144,-144,-41,-42,-144,-129,-144,-128,-123,-132,-124,-134,-144,-111,-114,-115,-118,-43,-46,-144,-59,-119,-126,-112,-113,-116,-117,-45,]),'COMPARE':([105,107,123,128,129,130,131,132,133,134,135,136,137,173,174,175,176,177,178,179,180,181,220,223,224,227,229,230,243,244,272,273,276,277,278,279,280,],[-144,-44,-144,170,-144,-144,-120,-121,-122,-144,-144,-41,-42,-144,-129,-144,-128,-123,-132,-124,-134,-144,-111,-114,-115,-118,-43,-46,-144,-59,-119,-126,-112,-113,-116,-117,-45,]),'NOT_EQUAL':([105,107,123,128,129,130,131,132,133,134,135,136,137,173,174,175,176,177,178,179,180,181,220,223,224,227,229,230,243,244,272,273,276,277,278,279,280,],[-144,-44,-144,171,-144,-144,-120,-121,-122,-144,-144,-41,-42,-144,-129,-144,-128,-123,-132,-124,-134,-144,-111,-114,-115,-118,-43,-46,-144,-59,-119,-126,-112,-113,-116,-117,-45,]),'AND':([105,107,123,127,128,129,130,131,132,133,134,135,136,137,163,164,165,172,173,174,175,176,177,178,179,180,181,212,213,220,223,224,227,229,230,243,244,250,251,252,253,254,255,272,273,276,277,278,279,280,],[-144,-44,-144,-144,-144,-144,-144,-120,-121,-122,-144,-144,-41,-42,-131,210,-144,-110,-144,-129,-144,-128,-123,-132,-124,-134,-144,-103,-130,-111,-114,-115,-118,-43,-46,-144,-59,-104,-105,-106,-107,-108,-109,-119,-126,-112,-113,-116,-117,-45,]),'OR':([105,107,123,126,127,128,129,130,131,132,133,134,135,136,137,162,163,164,165,172,173,174,175,176,177,178,179,180,181,209,211,212,213,220,223,224,227,229,230,243,244,250,251,252,253,254,255,272,273,275,276,277,278,279,280,],[-144,-44,-144,-144,-144,-144,-144,-144,-120,-121,-122,-144,-144,-41,-42,207,-131,-144,-144,-110,-144,-129,-144,-128,-123,-132,-124,-134,-144,-100,-102,-103,-130,-111,-114,-115,-118,-43,-46,-144,-59,-104,-105,-106,-107,-108,-109,-119,-126,-101,-112,-113,-116,-117,-45,]),'TO':([105,107,123,126,127,128,129,130,131,132,133,134,135,136,137,162,163,164,165,172,173,174,175,176,177,178,179,180,181,206,208,209,211,212,213,220,223,224,227,229,230,243,244,250,251,252,253,254,255,265,272,273,274,275,276,277,278,279,280,282,283,],[-144,-44,-144,-144,-144,-144,-144,-144,-120,-121,-122,-144,-144,-41,-42,-144,-131,-144,-144,-110,-144,-129,-144,-128,-123,-132,-124,-134,-144,-97,-99,-100,-102,-103,-130,-111,-114,-115,-118,-43,-46,-144,-59,-104,-105,-106,-107,-108,-109,-144,-119,-126,-98,-101,-112,-113,-116,-117,-45,288,-85,]),'CTE_S':([109,185,],[143,143,]),'ELSE':([291,],[297,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_point':([2,],[3,]),'empty':([2,6,8,13,14,29,31,34,50,51,62,63,64,66,68,76,88,93,94,98,100,103,105,117,119,123,124,125,126,127,128,129,130,134,135,139,140,141,142,143,144,145,150,154,162,164,165,166,167,168,169,170,171,173,175,181,189,201,205,207,210,221,222,225,226,233,237,239,243,264,265,271,281,284,285,289,291,292,293,297,303,307,310,311,314,315,317,323,],[4,10,15,24,27,42,45,48,57,59,67,70,74,95,97,102,107,113,115,118,102,122,137,151,153,107,157,161,163,163,172,174,176,178,180,183,107,186,188,190,192,194,70,200,208,211,213,122,122,122,122,122,122,223,227,230,188,242,161,122,122,122,122,122,122,186,267,270,273,95,283,242,287,95,287,295,298,300,295,305,309,313,95,95,287,319,319,325,]),'modules':([6,],[7,]),'modules_2':([6,],[8,]),'vars':([6,29,54,148,],[9,41,62,62,]),'main':([7,],[12,]),'modules_point':([8,],[14,]),'vars_2':([11,],[16,]),'tipo_comp':([11,],[17,]),'tipo_simple':([11,28,63,150,],[18,38,69,69,]),'main_point':([13,],[23,]),'modules_3':([14,],[25,]),'function':([14,50,],[26,56,]),'vars_3':([17,18,44,],[30,33,52,]),'vars_4':([18,],[32,]),'function_2':([28,],[36,]),'function_3':([28,],[37,]),'vars_8':([29,],[40,]),'vars_5':([31,34,],[43,43,]),'vars_6':([34,],[46,]),'punto_id_especial':([34,],[47,]),'function_4':([50,],[55,]),'function_punto1':([51,],[58,]),'body':([54,148,],[61,197,]),'func_agrega_v':([62,],[66,]),'param':([63,150,],[68,198,]),'vars_7':([64,],[72,]),'var_array':([64,],[73,]),'estatuto':([66,76,100,264,281,284,285,289,293,310,311,314,315,317,],[76,100,100,281,285,289,285,293,293,314,315,285,317,317,]),'asigna':([66,76,100,264,281,284,285,289,293,310,311,314,315,317,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'llamada':([66,76,100,104,106,109,110,121,146,147,155,156,160,185,214,215,216,217,218,219,228,236,241,248,249,256,257,258,259,264,281,284,285,288,289,293,310,311,314,315,317,],[78,78,78,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,78,78,78,78,132,78,78,78,78,78,78,78,]),'llamada_void':([66,76,100,264,281,284,285,289,293,310,311,314,315,317,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'read':([66,76,100,264,281,284,285,289,293,310,311,314,315,317,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'write':([66,76,100,264,281,284,285,289,293,310,311,314,315,317,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'if_1':([66,76,100,264,281,284,285,289,293,310,311,314,315,317,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'for_l':([66,76,100,264,281,284,285,289,293,310,311,314,315,317,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'while_l':([66,76,100,264,281,284,285,289,293,310,311,314,315,317,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'return':([66,76,100,264,281,284,285,289,293,310,311,314,315,317,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'func_extra':([66,76,100,264,281,284,285,289,293,310,311,314,315,317,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'variable':([66,76,100,104,106,108,109,110,121,146,147,155,156,160,185,214,215,216,217,218,219,228,236,241,248,249,256,257,258,259,264,281,284,285,288,289,293,310,311,314,315,317,],[87,87,87,131,131,139,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,87,87,87,87,131,87,87,87,87,87,87,87,]),'punto_param_2':([68,],[96,]),'body_2':([76,100,],[101,120,]),'variable_2':([88,123,140,],[105,105,105,]),'while_point':([93,],[112,]),'check_valid_func':([94,],[114,]),'punto_param':([98,],[117,]),'add_operator':([103,166,167,168,169,170,171,207,210,221,222,225,226,],[121,214,215,216,217,218,219,248,249,256,257,258,259,]),'exp':([104,106,109,110,121,146,147,155,156,160,185,228,236,241,248,288,],[125,138,142,144,154,195,196,201,202,205,142,260,265,271,274,292,]),'t_exp':([104,106,109,110,121,146,147,155,156,160,185,228,236,241,248,249,288,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,275,126,]),'g_exp':([104,106,109,110,121,146,147,155,156,160,185,228,236,241,248,249,288,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'m_exp':([104,106,109,110,121,146,147,155,156,160,185,214,215,216,217,218,219,228,236,241,248,249,256,257,288,],[128,128,128,128,128,128,128,128,128,128,128,250,251,252,253,254,255,128,128,128,128,128,276,277,128,]),'t':([104,106,109,110,121,146,147,155,156,160,185,214,215,216,217,218,219,228,236,241,248,249,256,257,258,259,288,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,278,279,129,]),'f':([104,106,109,110,121,146,147,155,156,160,185,214,215,216,217,218,219,228,236,241,248,249,256,257,258,259,288,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'f_2':([104,106,109,110,121,146,147,155,156,160,185,214,215,216,217,218,219,228,236,241,248,249,256,257,258,259,288,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'variable_point':([105,],[136,]),'write_2':([109,185,],[141,233,]),'param_2':([117,],[149,]),'var_mat':([119,],[152,]),'add_floor':([124,],[156,]),'llamada_2':([125,201,205,271,],[158,158,246,246,]),'llamada_void_2':([125,205,],[159,247,]),'add_operator_4':([126,127,],[162,164,]),'g_exp_2':([128,],[165,]),'add_operator_2':([129,],[173,]),'add_operator_1':([130,],[175,]),'add_constant_i':([134,],[177,]),'add_constant_f':([135,],[179,]),'read_point':([139,],[182,]),'write_3':([141,233,],[184,263,]),'write_point':([142,189,],[187,234,]),'add_constant_s':([143,],[189,]),'if_point':([144,],[191,]),'for_point_1':([145,],[193,]),'asigna_point':([154,],[199,]),'exp_2':([162,],[206,]),'t_exp_2':([164,],[209,]),'add_operator_3':([165,],[212,]),'m_exp_2':([173,],[220,]),'t_2':([175,],[224,]),'variable_3':([181,],[229,]),'while_point_2':([237,],[266,]),'final_func_point':([239,],[269,]),'remove_floor':([243,],[272,]),'for_point_2':([265,],[282,]),'if_2':([281,285,314,],[286,290,316,]),'while_l_2':([289,293,],[294,301,]),'if_3':([291,],[296,]),'for_point_3':([292,],[299,]),'if_point_3':([297,],[304,]),'if_point_2':([303,],[308,]),'while_point_3':([307,],[312,]),'for_l_2':([315,317,],[318,321,]),'for_point_4':([323,],[324,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM program_point ID COLON modules main','program',6,'p_program','parser_1.py',44),
  ('program_point -> empty','program_point',1,'p_program_point','parser_1.py',49),
  ('modules -> modules_2 modules_point modules_3','modules',3,'p_modules','parser_1.py',56),
  ('modules_point -> empty','modules_point',1,'p_modules_point','parser_1.py',61),
  ('modules_2 -> vars','modules_2',1,'p_modules_2','parser_1.py',78),
  ('modules_2 -> empty','modules_2',1,'p_modules_2','parser_1.py',79),
  ('modules_3 -> function','modules_3',1,'p_modules_3','parser_1.py',84),
  ('modules_3 -> empty','modules_3',1,'p_modules_3','parser_1.py',85),
  ('main -> MAIN main_point LPAR RPAR L_C_BRACKET body R_C_BRACKET SEMICOLON','main',8,'p_main','parser_1.py',90),
  ('main_point -> empty','main_point',1,'p_main_point','parser_1.py',95),
  ('body -> vars func_agrega_v estatuto body_2','body',4,'p_body','parser_1.py',103),
  ('body_2 -> estatuto body_2','body_2',2,'p_body_2','parser_1.py',109),
  ('body_2 -> empty','body_2',1,'p_body_2','parser_1.py',110),
  ('tipo_simple -> INT','tipo_simple',1,'p_tipo_simple','parser_1.py',115),
  ('tipo_simple -> FLOAT','tipo_simple',1,'p_tipo_simple','parser_1.py',116),
  ('tipo_simple -> CHAR','tipo_simple',1,'p_tipo_simple','parser_1.py',117),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','parser_1.py',124),
  ('vars -> VAR vars_2 SEMICOLON vars_8','vars',4,'p_vars','parser_1.py',131),
  ('vars_2 -> tipo_comp vars_3','vars_2',2,'p_vars_2','parser_1.py',137),
  ('vars_2 -> tipo_simple vars_4','vars_2',2,'p_vars_2','parser_1.py',138),
  ('vars_3 -> ID vars_5','vars_3',2,'p_vars_3','parser_1.py',143),
  ('vars_4 -> vars_3','vars_4',1,'p_vars_4','parser_1.py',158),
  ('vars_4 -> ID vars_6','vars_4',2,'p_vars_4','parser_1.py',159),
  ('vars_5 -> COMMA vars_3','vars_5',2,'p_vars_5','parser_1.py',164),
  ('vars_5 -> empty','vars_5',1,'p_vars_5','parser_1.py',165),
  ('vars_6 -> punto_id_especial L_S_BRACKET CTE_I R_S_BRACKET vars_7','vars_6',5,'p_vars_6','parser_1.py',170),
  ('vars_6 -> empty','vars_6',1,'p_vars_6','parser_1.py',171),
  ('punto_id_especial -> empty','punto_id_especial',1,'p_punto_id_especial','parser_1.py',175),
  ('vars_7 -> L_S_BRACKET CTE_I R_S_BRACKET var_mat','vars_7',4,'p_vars_7','parser_1.py',182),
  ('vars_7 -> var_array','vars_7',1,'p_vars_7','parser_1.py',183),
  ('var_array -> empty','var_array',1,'p_var_array','parser_1.py',188),
  ('var_mat -> empty','var_mat',1,'p_var_mat','parser_1.py',198),
  ('vars_8 -> vars','vars_8',1,'p_vars_8','parser_1.py',209),
  ('vars_8 -> empty','vars_8',1,'p_vars_8','parser_1.py',210),
  ('param -> tipo_simple ID punto_param param_2','param',4,'p_param','parser_1.py',215),
  ('param -> empty','param',1,'p_param','parser_1.py',216),
  ('param_2 -> COMMA param','param_2',2,'p_param_2','parser_1.py',221),
  ('param_2 -> empty','param_2',1,'p_param_2','parser_1.py',222),
  ('punto_param -> empty','punto_param',1,'p_punto_param','parser_1.py',227),
  ('punto_param_2 -> empty','punto_param_2',1,'p_punto_param_2','parser_1.py',239),
  ('variable -> ID variable_2 variable_point','variable',3,'p_variable','parser_1.py',248),
  ('variable_point -> empty','variable_point',1,'p_variable_point','parser_1.py',253),
  ('variable_2 -> L_S_BRACKET exp R_S_BRACKET variable_3','variable_2',4,'p_variable_2','parser_1.py',275),
  ('variable_2 -> empty','variable_2',1,'p_variable_2','parser_1.py',276),
  ('variable_3 -> L_S_BRACKET exp R_S_BRACKET','variable_3',3,'p_variable_3','parser_1.py',281),
  ('variable_3 -> empty','variable_3',1,'p_variable_3','parser_1.py',282),
  ('estatuto -> asigna','estatuto',1,'p_estatuto','parser_1.py',287),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','parser_1.py',288),
  ('estatuto -> llamada_void','estatuto',1,'p_estatuto','parser_1.py',289),
  ('estatuto -> read','estatuto',1,'p_estatuto','parser_1.py',290),
  ('estatuto -> write','estatuto',1,'p_estatuto','parser_1.py',291),
  ('estatuto -> if_1','estatuto',1,'p_estatuto','parser_1.py',292),
  ('estatuto -> for_l','estatuto',1,'p_estatuto','parser_1.py',293),
  ('estatuto -> while_l','estatuto',1,'p_estatuto','parser_1.py',294),
  ('estatuto -> return','estatuto',1,'p_estatuto','parser_1.py',295),
  ('estatuto -> func_extra','estatuto',1,'p_estatuto','parser_1.py',296),
  ('asigna -> variable EQUAL add_operator exp asigna_point SEMICOLON','asigna',6,'p_asigna','parser_1.py',301),
  ('asigna_point -> empty','asigna_point',1,'p_asigna_point','parser_1.py',306),
  ('llamada -> ID LPAR exp llamada_2 RPAR SEMICOLON','llamada',6,'p_llamada','parser_1.py',332),
  ('llamada_2 -> COMMA exp llamada_2','llamada_2',3,'p_llamada_2','parser_1.py',337),
  ('llamada_2 -> empty','llamada_2',1,'p_llamada_2','parser_1.py',338),
  ('llamada_void -> ID LPAR exp llamada_void_2 RPAR SEMICOLON','llamada_void',6,'p_llamada_void','parser_1.py',343),
  ('llamada_void_2 -> COMMA exp llamada_void_2','llamada_void_2',3,'p_llamada_void_2','parser_1.py',348),
  ('llamada_void_2 -> empty','llamada_void_2',1,'p_llamada_void_2','parser_1.py',349),
  ('read -> READ LPAR variable read_point RPAR SEMICOLON','read',6,'p_read','parser_1.py',354),
  ('read_point -> empty','read_point',1,'p_read_point','parser_1.py',359),
  ('write -> WRITE LPAR write_2 write_3 RPAR SEMICOLON','write',6,'p_write','parser_1.py',370),
  ('write_2 -> exp write_point','write_2',2,'p_write_2','parser_1.py',375),
  ('write_2 -> CTE_S add_constant_s write_point','write_2',3,'p_write_2','parser_1.py',376),
  ('write_3 -> COMMA write_2 write_3','write_3',3,'p_write_3','parser_1.py',381),
  ('write_3 -> empty','write_3',1,'p_write_3','parser_1.py',382),
  ('write_point -> empty','write_point',1,'p_write_point','parser_1.py',387),
  ('if_1 -> IF LPAR exp if_point RPAR L_C_BRACKET estatuto if_2 R_C_BRACKET if_3 SEMICOLON if_point_2','if_1',12,'p_if_1','parser_1.py',400),
  ('if_2 -> estatuto if_2','if_2',2,'p_if_2','parser_1.py',405),
  ('if_2 -> empty','if_2',1,'p_if_2','parser_1.py',406),
  ('if_3 -> ELSE if_point_3 L_C_BRACKET estatuto if_2 R_C_BRACKET','if_3',6,'p_if_3','parser_1.py',411),
  ('if_3 -> empty','if_3',1,'p_if_3','parser_1.py',412),
  ('if_point -> empty','if_point',1,'p_if_point','parser_1.py',417),
  ('if_point_2 -> empty','if_point_2',1,'p_if_point_2','parser_1.py',435),
  ('if_point_3 -> empty','if_point_3',1,'p_if_point_3','parser_1.py',445),
  ('for_l -> FOR LPAR ID for_point_1 EQUAL exp for_point_2 TO exp for_point_3 RPAR L_C_BRACKET estatuto for_l_2 R_C_BRACKET SEMICOLON for_point_4','for_l',17,'p_for_l','parser_1.py',457),
  ('for_l_2 -> estatuto for_l_2','for_l_2',2,'p_for_l_2','parser_1.py',463),
  ('for_l_2 -> empty','for_l_2',1,'p_for_l_2','parser_1.py',464),
  ('for_point_1 -> empty','for_point_1',1,'p_for_point_1','parser_1.py',469),
  ('for_point_2 -> empty','for_point_2',1,'p_for_point_2','parser_1.py',486),
  ('for_point_3 -> empty','for_point_3',1,'p_for_point_3','parser_1.py',511),
  ('for_point_4 -> empty','for_point_4',1,'p_for_point_4','parser_1.py',544),
  ('while_l -> WHILE while_point LPAR exp RPAR while_point_2 L_C_BRACKET estatuto while_l_2 R_C_BRACKET SEMICOLON while_point_3','while_l',12,'p_while_l','parser_1.py',572),
  ('while_l_2 -> estatuto while_l_2','while_l_2',2,'p_while_l_2','parser_1.py',577),
  ('while_l_2 -> empty','while_l_2',1,'p_while_l_2','parser_1.py',578),
  ('while_point -> empty','while_point',1,'p_while_point','parser_1.py',583),
  ('while_point_2 -> empty','while_point_2',1,'p_while_point_2','parser_1.py',591),
  ('while_point_3 -> empty','while_point_3',1,'p_while_point_3','parser_1.py',611),
  ('return -> RETURN check_valid_func LPAR exp RPAR SEMICOLON','return',6,'p_return','parser_1.py',622),
  ('check_valid_func -> empty','check_valid_func',1,'p_check_valid_func','parser_1.py',627),
  ('func_extra -> empty','func_extra',1,'p_func_extra','parser_1.py',638),
  ('exp -> t_exp add_operator_4 exp_2','exp',3,'p_exp','parser_1.py',643),
  ('exp_2 -> OR add_operator exp','exp_2',3,'p_exp_2','parser_1.py',648),
  ('exp_2 -> empty','exp_2',1,'p_exp_2','parser_1.py',649),
  ('t_exp -> g_exp add_operator_4 t_exp_2','t_exp',3,'p_t_exp','parser_1.py',654),
  ('t_exp_2 -> AND add_operator t_exp','t_exp_2',3,'p_t_exp_2','parser_1.py',659),
  ('t_exp_2 -> empty','t_exp_2',1,'p_t_exp_2','parser_1.py',660),
  ('g_exp -> m_exp g_exp_2 add_operator_3','g_exp',3,'p_g_exp','parser_1.py',665),
  ('g_exp_2 -> LESS_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',670),
  ('g_exp_2 -> LESS add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',671),
  ('g_exp_2 -> GREATER_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',672),
  ('g_exp_2 -> GREATER add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',673),
  ('g_exp_2 -> COMPARE add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',674),
  ('g_exp_2 -> NOT_EQUAL add_operator m_exp','g_exp_2',3,'p_g_exp_2','parser_1.py',675),
  ('g_exp_2 -> empty','g_exp_2',1,'p_g_exp_2','parser_1.py',676),
  ('m_exp -> t add_operator_2 m_exp_2','m_exp',3,'p_m_exp','parser_1.py',681),
  ('m_exp_2 -> PLUS add_operator m_exp','m_exp_2',3,'p_m_exp_2','parser_1.py',686),
  ('m_exp_2 -> MINUS add_operator m_exp','m_exp_2',3,'p_m_exp_2','parser_1.py',687),
  ('m_exp_2 -> empty','m_exp_2',1,'p_m_exp_2','parser_1.py',688),
  ('t -> f add_operator_1 t_2','t',3,'p_t','parser_1.py',693),
  ('t_2 -> TIMES add_operator t','t_2',3,'p_t_2','parser_1.py',698),
  ('t_2 -> DIVIDE add_operator t','t_2',3,'p_t_2','parser_1.py',699),
  ('t_2 -> empty','t_2',1,'p_t_2','parser_1.py',700),
  ('f -> LPAR add_floor exp RPAR remove_floor','f',5,'p_f','parser_1.py',705),
  ('f -> variable','f',1,'p_f','parser_1.py',706),
  ('f -> llamada','f',1,'p_f','parser_1.py',707),
  ('f -> f_2','f',1,'p_f','parser_1.py',708),
  ('f_2 -> CTE_I add_constant_i','f_2',2,'p_f_2','parser_1.py',713),
  ('f_2 -> CTE_F add_constant_f','f_2',2,'p_f_2','parser_1.py',714),
  ('add_floor -> empty','add_floor',1,'p_add_floor','parser_1.py',719),
  ('remove_floor -> empty','remove_floor',1,'p_remove_floor','parser_1.py',726),
  ('add_operator -> empty','add_operator',1,'p_add_operator','parser_1.py',733),
  ('add_operator_1 -> empty','add_operator_1',1,'p_add_operator_1','parser_1.py',742),
  ('add_operator_2 -> empty','add_operator_2',1,'p_add_operator_2','parser_1.py',771),
  ('add_operator_3 -> empty','add_operator_3',1,'p_add_operator_3','parser_1.py',800),
  ('add_operator_4 -> empty','add_operator_4',1,'p_add_operator_4','parser_1.py',829),
  ('add_constant_i -> empty','add_constant_i',1,'p_add_constant_i','parser_1.py',857),
  ('add_constant_s -> empty','add_constant_s',1,'p_add_constant_s','parser_1.py',875),
  ('add_constant_f -> empty','add_constant_f',1,'p_add_constant_f','parser_1.py',892),
  ('function -> FUNC function_2 SEMICOLON function_4','function',4,'p_function','parser_1.py',909),
  ('function_2 -> function_3 ID function_punto1 LPAR param punto_param_2 RPAR L_C_BRACKET body R_C_BRACKET final_func_point','function_2',11,'p_function_2','parser_1.py',914),
  ('function_3 -> tipo_simple','function_3',1,'p_function_3','parser_1.py',919),
  ('function_3 -> VOID','function_3',1,'p_function_3','parser_1.py',920),
  ('function_4 -> function','function_4',1,'p_function_4','parser_1.py',928),
  ('function_4 -> empty','function_4',1,'p_function_4','parser_1.py',929),
  ('function_punto1 -> empty','function_punto1',1,'p_function_punto1','parser_1.py',934),
  ('func_agrega_v -> empty','func_agrega_v',1,'p_func_agrega_v','parser_1.py',946),
  ('final_func_point -> empty','final_func_point',1,'p_final_func_point','parser_1.py',958),
  ('empty -> <empty>','empty',0,'p_empty','parser_1.py',979),
]
